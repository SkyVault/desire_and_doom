!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
'header-n0' class='md-header-anchor '	Documentation/entities.html	/^<div  id='write'  class = 'is-node'><h1><a name='header-n0' class='md-header-anchor '><\/a>Entities in the game<\/h1><ol><li>Zombie<\/li><li>Wolf<\/li><li>Bird<\/li><li>Mech<\/li><li>Grendle<\/li><li>Flag<\/li><li>Shulk<\/li><li>npc-1 .. npc-7<\/li><\/ol><\/div>$/;"	a
AI	Desire_And_Doom/ECS/Component.cs	/^            AI,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
AI	Desire_And_Doom/ECS/Components/AI.cs	/^        public AI(Entity target) : base(Types.AI)$/;"	m	class:Desire_And_Doom.ECS.AI
AI	Desire_And_Doom/ECS/Components/AI.cs	/^        public AI(LuaTable behavior) : base(Types.AI)$/;"	m	class:Desire_And_Doom.ECS.AI
AI	Desire_And_Doom/ECS/Components/AI.cs	/^    class AI : Component$/;"	c	namespace:Desire_And_Doom.ECS
AI_System	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        public AI_System() : base(Types.AI, Types.Body, Types.Physics)$/;"	m	class:Desire_And_Doom.ECS.AI_System
AI_System	Desire_And_Doom/ECS/Systems/AI_System.cs	/^    class AI_System : System$/;"	c	namespace:Desire_And_Doom.ECS
ATTACKING	Desire_And_Doom/ECS/Components/Player.cs	/^            ATTACKING,$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
Act	Desire_And_Doom/Actor.cs	/^        public virtual void Act (float delta)$/;"	m	class:MonoGdx.Scene2D.Actor
Act	Desire_And_Doom/Group.cs	/^        public override void Act (float delta)$/;"	m	class:MonoGdx.Scene2D.Group
Act	Desire_And_Doom/SceneAction.cs	/^        public abstract bool Act (float delta);$/;"	m	class:MonoGdx.Scene2D.SceneAction
Act	Desire_And_Doom/Stage.cs	/^        public void Act ()$/;"	m	class:MonoGdx.Scene2D.Stage
Act	Desire_And_Doom/Stage.cs	/^        public void Act (float delta)$/;"	m	class:MonoGdx.Scene2D.Stage
Action_State	Desire_And_Doom/ECS/Components/Player.cs	/^        public enum Action_State$/;"	g	class:Desire_And_Doom.Player
Active	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public bool Active { get; set; } = true;$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Active	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public bool Active { get; set; } = true;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Actor	Desire_And_Doom/Actor.cs	/^        public Actor ()$/;"	m	class:MonoGdx.Scene2D.Actor
Actor	Desire_And_Doom/Actor.cs	/^        static Actor ()$/;"	m	class:MonoGdx.Scene2D.Actor	file:
Actor	Desire_And_Doom/Actor.cs	/^    public class Actor$/;"	c	namespace:MonoGdx.Scene2D
Actor	Desire_And_Doom/SceneAction.cs	/^        public virtual Actor Actor$/;"	p	class:MonoGdx.Scene2D.SceneAction
Actors	Desire_And_Doom/Stage.cs	/^        public IList<Actor> Actors$/;"	p	class:MonoGdx.Scene2D.Stage
Add	Desire_And_Doom/ECS/Entity.cs	/^        public Component Add(Component component){$/;"	m	class:Desire_And_Doom.ECS.Entity
Add	Desire_And_Doom/ECS/World.cs	/^        public Entity Add(Entity e)$/;"	m	class:Desire_And_Doom.ECS.World
Add	Desire_And_Doom/Graphics/Assets.cs	/^        public void Add(string id, object t, bool hotreload = false)$/;"	m	class:Desire_And_Doom.Assets
Add	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public void Add(Particle p)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Add	Desire_And_Doom/Graphics/Particle_World.cs	/^        public void Add(Particle_Emitter emitter)$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Add	Desire_And_Doom/Utils/Named_Action_List.cs	/^        public void Add(string id, Action action)$/;"	m	class:Desire_And_Doom.Utils.Named_Action_List
AddAction	Desire_And_Doom/Actor.cs	/^        public void AddAction (SceneAction action)$/;"	m	class:MonoGdx.Scene2D.Actor
AddAction	Desire_And_Doom/Stage.cs	/^        public void AddAction (SceneAction action)$/;"	m	class:MonoGdx.Scene2D.Stage
AddActor	Desire_And_Doom/Group.cs	/^        public virtual void AddActor (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Group
AddActor	Desire_And_Doom/Stage.cs	/^        public void AddActor (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Stage
AddActorAfter	Desire_And_Doom/Group.cs	/^        public virtual void AddActorAfter (Actor actorAfter, Actor actor)$/;"	m	class:MonoGdx.Scene2D.Group
AddActorAt	Desire_And_Doom/Group.cs	/^        public virtual void AddActorAt (int index, Actor actor)$/;"	m	class:MonoGdx.Scene2D.Group
AddActorBefore	Desire_And_Doom/Group.cs	/^        public virtual void AddActorBefore (Actor actorBefore, Actor actor)$/;"	m	class:MonoGdx.Scene2D.Group
AddHandler	Desire_And_Doom/Actor.cs	/^        public bool AddHandler (RoutedEvent routedEvent, Delegate handler)$/;"	m	class:MonoGdx.Scene2D.Actor
AddHandler	Desire_And_Doom/Actor.cs	/^        public bool AddHandler (RoutedEvent routedEvent, Delegate handler, bool capturing)$/;"	m	class:MonoGdx.Scene2D.Actor
Add_Item	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public void Add_Item(Entity e)$/;"	m	class:Desire_And_Doom.ECS.Invatory
Add_Polygon	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public Polygon Add_Polygon(Polygon p)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Add_Solid	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public RectangleF Add_Solid(RectangleF solid)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Add_System	Desire_And_Doom/ECS/World.cs	/^        public System Add_System<T>(System system) {$/;"	m	class:Desire_And_Doom.ECS.World
Add_Table	Desire_And_Doom/Graphics/Assets.cs	/^        public void Add_Table(string file, bool hotload = false)$/;"	m	class:Desire_And_Doom.Assets
AddedItems	Desire_And_Doom/RoutedEvent.cs	/^        public IList AddedItems$/;"	p	class:MonoGdx.Scene2D.SelectionChangedEventArgs
Additive_Draw	Desire_And_Doom/Graphics/Particle_World.cs	/^        public void Additive_Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Advanced_Animation	Desire_And_Doom/ECS/Component.cs	/^            Advanced_Animation,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Advanced_Animation_Component	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public Advanced_Animation_Component(Texture2D _texture, List<string> animation_ids) : base(_texture, new Rectangle())$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Advanced_Animation_Component	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^    class Advanced_Animation_Component : Sprite$/;"	c	namespace:Desire_And_Doom.ECS.Components
Advanced_Animation_Rendering_System	Desire_And_Doom/ECS/Systems/Advanced_Animation_Rendering_System.cs	/^        public Advanced_Animation_Rendering_System()$/;"	m	class:Desire_And_Doom.ECS.Systems.Advanced_Animation_Rendering_System
Advanced_Animation_Rendering_System	Desire_And_Doom/ECS/Systems/Advanced_Animation_Rendering_System.cs	/^    class Advanced_Animation_Rendering_System: Sprite_Renderer_System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Age	Desire_And_Doom/ECS/Components/Character.cs	/^        public int Age      { get; set; } = 20;$/;"	p	class:Desire_And_Doom.ECS.Components.Character
Ai	Desire_And_Doom/Content/Lua/Boss_1_Ai.lua	/^function Ai(entity, engine)$/;"	f
Ai	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Boss_1_Ai.lua	/^function Ai(entity, engine)$/;"	f
Ai	Lua_World/Boss_1_Ai.lua	/^function Ai(entity, engine)$/;"	f
Alt	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^        Alt = 4,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Alt	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^        Alt = 4,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Amount	Desire_And_Doom/ECS/Components/Health.cs	/^        public int Amount { get; set; } = 3;$/;"	p	class:Desire_And_Doom.ECS.Components.Health
Animated_Sprite	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public Animated_Sprite(Texture2D _texture, List<string> anim_ids) : base(_texture, new Rectangle())$/;"	m	class:Desire_And_Doom.ECS.Animated_Sprite
Animated_Sprite	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public Animated_Sprite(Texture2D _texture, string start_animation) : base(_texture, new Rectangle())$/;"	m	class:Desire_And_Doom.ECS.Animated_Sprite
Animated_Sprite	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^    class Animated_Sprite : Sprite$/;"	c	namespace:Desire_And_Doom.ECS
Animation	Desire_And_Doom/ECS/Component.cs	/^            Animation,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Animation	Desire_And_Doom/Graphics/Animation.cs	/^        public Animation(List<Animation_Frame> _frames, string _id)$/;"	m	class:Desire_And_Doom.Graphics.Animation
Animation	Desire_And_Doom/Graphics/Animation.cs	/^    class Animation$/;"	c	namespace:Desire_And_Doom.Graphics
Animation_Components	Desire_And_Doom/ECS/Components/Multipart_Animation.cs	/^        public Dictionary<string, Animated_Sprite> Animation_Components { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Multipart_Animation
Animation_End	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public bool Animation_End { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Animation_Finished	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public bool Animation_Finished{get;set;} = false;$/;"	p	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Animation_Frame	Desire_And_Doom/Graphics/Animation_Frame.cs	/^        public Animation_Frame(Vector2 pos, Vector2 size, float time = 0.1f) : base(pos.X, pos.Y, size.X, size.Y)$/;"	m	class:Desire_And_Doom.Graphics.Animation_Frame
Animation_Frame	Desire_And_Doom/Graphics/Animation_Frame.cs	/^        public Animation_Frame(int x, int y, int w, int h, float time = 0.1f) : base(x, y, w, h)$/;"	m	class:Desire_And_Doom.Graphics.Animation_Frame
Animation_Frame	Desire_And_Doom/Graphics/Animation_Frame.cs	/^    class Animation_Frame : RectangleF$/;"	c	namespace:Desire_And_Doom.Graphics
Animation_ID	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public string Animation_ID { get; set; } = "";$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Animation_Renderer_System	Desire_And_Doom/ECS/Systems/Animation_Renderer_System.cs	/^        public Animation_Renderer_System() : base()$/;"	m	class:Desire_And_Doom.ECS.Animation_Renderer_System
Animation_Renderer_System	Desire_And_Doom/ECS/Systems/Animation_Renderer_System.cs	/^    class Animation_Renderer_System : Sprite_Renderer_System$/;"	c	namespace:Desire_And_Doom.ECS
Animations	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public Dictionary<string, Animation> Animations{get; private set;}$/;"	p	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Animations	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public Dictionary<string, Animation> Animations { get; private set; }$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
ApplyTransform	Desire_And_Doom/Group.cs	/^        protected void ApplyTransform (GdxSpriteBatch spriteBatch, Matrix transform)$/;"	m	class:MonoGdx.Scene2D.Group
Apply_Force	Desire_And_Doom/ECS/Components/Physics.cs	/^        public void Apply_Force(float force, float dir_rad)$/;"	m	class:Desire_And_Doom.ECS.Physics
Apply_Friction	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Apply_Friction()             => Velocity *= Friction;$/;"	m	class:Desire_And_Doom.Graphics.Particle
Archery_Skill	Desire_And_Doom/ECS/Components/Character.cs	/^        public float Archery_Skill      { get; set; } = 0.5f;$/;"	p	class:Desire_And_Doom.ECS.Components.Character
Assets	Desire_And_Doom/Graphics/Assets.cs	/^        private Assets() {$/;"	m	class:Desire_And_Doom.Assets	file:
Assets	Desire_And_Doom/Graphics/Assets.cs	/^    class Assets$/;"	c	namespace:Desire_And_Doom
Attack_Walk_Speed_Multiplyer	Desire_And_Doom/ECS/Components/Player.cs	/^        public float Attack_Walk_Speed_Multiplyer { get => 0.25f; }$/;"	p	class:Desire_And_Doom.Player
Auto_Reload	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public bool Auto_Reload { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Components.Lua_Function
BACKWARD	Desire_And_Doom/Graphics/Animation.cs	/^            BACKWARD,$/;"	e	enum:Desire_And_Doom.Graphics.Animation.Playback_Types	file:
BG_Image	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        Texture2D BG_Image;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
BOOTS	Desire_And_Doom/Items/Equipable.cs	/^            BOOTS,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
BOSS_HEALTH	Desire_And_Doom/Entities/Boss_1.cs	/^        public static readonly int BOSS_HEALTH = 15;$/;"	f	class:Desire_And_Doom.Entities.Boss_1
BOUNCE	Desire_And_Doom/Graphics/Animation.cs	/^            BOUNCE$/;"	e	enum:Desire_And_Doom.Graphics.Animation.Playback_Types	file:
Background	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Texture2D Background;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
Behavior	Desire_And_Doom/ECS/Components/AI.cs	/^        public LuaTable Behavior { get; }$/;"	p	class:Desire_And_Doom.ECS.AI
Billboard	Desire_And_Doom/Graphics/Tiled_Map.cs	/^    class Billboard$/;"	c	namespace:Desire_And_Doom
Bird 	Desire_And_Doom/Content/Lua/AI.lua	/^	Bird = function(entity, engine)$/;"	f
Bird 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^	Bird = function(entity, engine)$/;"	f
Blacklisted_Collision_Tags	Desire_And_Doom/ECS/Components/Physics.cs	/^        public List<string> Blacklisted_Collision_Tags { get; set; } = new List<string>();$/;"	p	class:Desire_And_Doom.ECS.Physics
BlendState	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public BlendState BlendState { get; set; } = BlendState.NonPremultiplied;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Body	Desire_And_Doom/ECS/Component.cs	/^            Body,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Body	Desire_And_Doom/ECS/Components/Body.cs	/^        public Body(Vector2 _position, Vector2 _size) : base(Types.Body)$/;"	m	class:Desire_And_Doom.ECS.Body
Body	Desire_And_Doom/ECS/Components/Body.cs	/^    class Body : Component$/;"	c	namespace:Desire_And_Doom.ECS
Body_In_Polygon	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public bool Body_In_Polygon(Polygon poly, Body body)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Body_Renderer_System	Desire_And_Doom/ECS/Systems/Body_Renderer_System.cs	/^        public Body_Renderer_System() : base(Types.Body)$/;"	m	class:Desire_And_Doom.ECS.Body_Renderer_System
Body_Renderer_System	Desire_And_Doom/ECS/Systems/Body_Renderer_System.cs	/^    class Body_Renderer_System : System$/;"	c	namespace:Desire_And_Doom.ECS
Boss_1	Desire_And_Doom/Entities/Boss_1.cs	/^    class Boss_1$/;"	c	namespace:Desire_And_Doom.Entities
Boss_1_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Emitter.cs	/^        public Boss_1_Emitter(Vector2 _position, bool spawn_right_off = false) : base(_position, spawn_right_off)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Boss_1_Emitter
Boss_1_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Emitter.cs	/^    class Boss_1_Emitter : Particle_Emitter$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Boss_1_Particle	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Particle.cs	/^    class Boss_1_Particle : Particle$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Boss_Room_1	Desire_And_Doom/Screens/boss_room_1.cs	/^        public Boss_Room_1($/;"	m	class:Desire_And_Doom.Screens.Boss_Room_1
Boss_Room_1	Desire_And_Doom/Screens/boss_room_1.cs	/^    class Boss_Room_1 : Game_Screen$/;"	c	namespace:Desire_And_Doom.Screens
BoundingRectangle	Desire_And_Doom/Graphics/Camera.cs	/^        public RectangleF BoundingRectangle$/;"	p	class:Desire_And_Doom.Graphics.Camera
BoundingRectangle	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public Rectangle BoundingRectangle => new Rectangle(0, 0, VirtualWidth, VirtualHeight);$/;"	f	class:Desire_And_Doom.Graphics.ViewportAdapter
Bubble	Desire_And_Doom/RoutedEvent.cs	/^        Bubble,$/;"	e	enum:MonoGdx.Scene2D.RoutingStrategy	file:
Button	Desire_And_Doom/RoutedEvent.cs	/^        public int Button { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.TouchEventArgs
Button	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public Buttons Button { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
Button	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public Buttons Button { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
Button	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public MouseButton Button { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Button	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public MouseButton Button { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
ButtonDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonDown;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ButtonDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonDown;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ButtonRepeated	Desire_And_Doom/Utils/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonRepeated;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ButtonRepeated	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonRepeated;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ButtonUp	Desire_And_Doom/Utils/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonUp;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ButtonUp	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ButtonUp;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
Button_State	Desire_And_Doom/Utils/Input.cs	/^    class Button_State { $/;"	c	namespace:Desire_And_Doom
CELL_COLOR	Desire_And_Doom/Gui/UI_Manager.cs	/^        public static readonly Color CELL_COLOR = new Color(0, 0, 0, 0.75f);$/;"	f	class:Desire_And_Doom.Gui.UI_Manager
CELL_MARGIN	Desire_And_Doom/Gui/UI_Manager.cs	/^        public static readonly float CELL_MARGIN = 8;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager
CELL_SIZE	Desire_And_Doom/Gui/UI_Manager.cs	/^        public static readonly float CELL_SIZE = 64;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager
CHEST	Desire_And_Doom/Items/Equipable.cs	/^            CHEST,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
CLOSED	Desire_And_Doom/Utils/Debug_Console.cs	/^            CLOSED,$/;"	e	enum:Desire_And_Doom.Utils.Debug_Console.State	file:
Call	Desire_And_Doom/Utils/Named_Action_List.cs	/^        public void Call(int index)$/;"	m	class:Desire_And_Doom.Utils.Named_Action_List
Callback	Desire_And_Doom/ECS/Components/Physics.cs	/^        public Func<Entity, Entity, bool> Callback = null;$/;"	f	class:Desire_And_Doom.ECS.Physics
Callback	Desire_And_Doom/Utils/Timers.cs	/^        public Func<bool> Callback { get; set; }$/;"	p	class:Desire_And_Doom.Utils.Timer
Camera	Desire_And_Doom/Graphics/Camera.cs	/^        public Camera(GraphicsDevice graphicsDevice)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Camera	Desire_And_Doom/Graphics/Camera.cs	/^        public Camera(ViewportAdapter viewportAdapter)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Camera	Desire_And_Doom/Graphics/Camera.cs	/^    class Camera : IMovable, IRotatable$/;"	c	namespace:Desire_And_Doom.Graphics
Camera	Desire_And_Doom/Stage.cs	/^        public Camera Camera { get; set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Can_Collect	Desire_And_Doom/ECS/Components/Item.cs	/^        public bool Can_Collect { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Item
Can_Move	Desire_And_Doom/ECS/Components/Player.cs	/^        public bool Can_Move { get; set; } = true;$/;"	p	class:Desire_And_Doom.Player
Cancel	Desire_And_Doom/RoutedEvent.cs	/^        public void Cancel ()$/;"	m	class:MonoGdx.Scene2D.RoutedEventArgs
Cancelled	Desire_And_Doom/RoutedEvent.cs	/^        public bool Cancelled { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
CaptureTouch	Desire_And_Doom/Actor.cs	/^        public void CaptureTouch (int pointer)$/;"	m	class:MonoGdx.Scene2D.Actor
Cart_To_Iso	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^        public static Vector2 Cart_To_Iso(Vector2 cart_coords)$/;"	m	class:Desire_And_Doom.Iso_Tiled_Map
Center	Desire_And_Doom/ECS/Components/Body.cs	/^        public Vector2 Center { get => Position + Size \/ 2; }$/;"	p	class:Desire_And_Doom.ECS.Body
Center	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public enum Render_Spot{ Left, Center, Right };$/;"	e	enum:Desire_And_Doom.ECS.Invatory.Render_Spot	file:
Center	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public Point Center => BoundingRectangle.Center;$/;"	f	class:Desire_And_Doom.Graphics.ViewportAdapter
Change_Scene_Callback	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public Func<string, float, float, bool> Change_Scene_Callback;$/;"	f	class:Desire_And_Doom.Tiled_Map
Character	Desire_And_Doom/ECS/Component.cs	/^            Character,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Character	Desire_And_Doom/ECS/Components/Character.cs	/^        public Character() : base(Types.Character)$/;"	m	class:Desire_And_Doom.ECS.Components.Character
Character	Desire_And_Doom/ECS/Components/Character.cs	/^    class Character : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Character	Desire_And_Doom/RoutedEvent.cs	/^        public char Character { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.KeyCharEventArgs
Character	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^        public char? Character => ToChar(Key, Modifiers);$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
Character	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^        public char? Character => ToChar(Key, Modifiers);$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
CheckAllButtons	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void CheckAllButtons()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckAllButtons	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void CheckAllButtons()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckButtonPressed	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private void CheckButtonPressed(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckButtonPressed	Desire_And_Doom/Utils/MouseListener.cs	/^        private void CheckButtonPressed(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckButtonReleased	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private void CheckButtonReleased(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckButtonReleased	Desire_And_Doom/Utils/MouseListener.cs	/^        private void CheckButtonReleased(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckConnections	Desire_And_Doom/Utils/GamePadListener.cs	/^        internal static void CheckConnections()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckConnections	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        internal static void CheckConnections()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckControllerConnections	Desire_And_Doom/Utils/GamePadListener.cs	/^        public static bool CheckControllerConnections { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
CheckControllerConnections	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public static bool CheckControllerConnections { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
CheckMouseDragged	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private void CheckMouseDragged(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckMouseDragged	Desire_And_Doom/Utils/MouseListener.cs	/^        private void CheckMouseDragged(Func<MouseState, ButtonState> getButtonState, MouseButton button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
CheckRepeatButton	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void CheckRepeatButton()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckRepeatButton	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void CheckRepeatButton()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckThumbSticks	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void CheckThumbSticks(Func<GamePadState, Vector2> getButtonState, Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckThumbSticks	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void CheckThumbSticks(Func<GamePadState, Vector2> getButtonState, Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckTriggers	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void CheckTriggers(Func<GamePadState, float> getButtonState, Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckTriggers	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void CheckTriggers(Func<GamePadState, float> getButtonState, Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckVibrate	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void CheckVibrate()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
CheckVibrate	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void CheckVibrate()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
Check_Bounds	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public void Check_Bounds(){$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Chest_Piece	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipable Chest_Piece   { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Equipment
Children	Desire_And_Doom/Group.cs	/^        public SnapshotList<Actor> Children { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Group
ChildrenChanged	Desire_And_Doom/Group.cs	/^        protected virtual void ChildrenChanged ()$/;"	m	class:MonoGdx.Scene2D.Group
ChildrenOnly	Desire_And_Doom/Actor.cs	/^        ChildrenOnly,$/;"	e	enum:MonoGdx.Scene2D.Touchable	file:
ClampZoom	Desire_And_Doom/Graphics/Camera.cs	/^        private void ClampZoom(float value)$/;"	m	class:Desire_And_Doom.Graphics.Camera	file:
Class	Desire_And_Doom/RoutedEvent.cs	/^            public Type Class;$/;"	f	class:MonoGdx.Scene2D.EventManager.ClassHandlerNode
ClassHandlerNode	Desire_And_Doom/RoutedEvent.cs	/^        private class ClassHandlerNode$/;"	c	class:MonoGdx.Scene2D.EventManager
Claymore	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        private readonly Equipable Claymore = new Equipable(Equipable.Equipment_Type.WEAPON) {$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
Clear	Desire_And_Doom/Actor.cs	/^        public virtual void Clear ()$/;"	m	class:MonoGdx.Scene2D.Actor
Clear	Desire_And_Doom/Group.cs	/^        public override void Clear ()$/;"	m	class:MonoGdx.Scene2D.Group
Clear	Desire_And_Doom/Stage.cs	/^        public void Clear ()$/;"	m	class:MonoGdx.Scene2D.Stage
Clear	Desire_And_Doom/Utils/Messanger.cs	/^        public void Clear()$/;"	m	class:Desire_And_Doom.Utils.Messanger
ClearActions	Desire_And_Doom/Actor.cs	/^        public void ClearActions ()$/;"	m	class:MonoGdx.Scene2D.Actor
ClearChildren	Desire_And_Doom/Group.cs	/^        public virtual void ClearChildren ()$/;"	m	class:MonoGdx.Scene2D.Group
ClearHandlers	Desire_And_Doom/Actor.cs	/^        public void ClearHandlers ()$/;"	m	class:MonoGdx.Scene2D.Actor
Clear_Solids	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public void Clear_Solids()$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
ClipBegin	Desire_And_Doom/Actor.cs	/^        public bool ClipBegin ()$/;"	m	class:MonoGdx.Scene2D.Actor
ClipBegin	Desire_And_Doom/Actor.cs	/^        public bool ClipBegin (float x, float y, float width, float height)$/;"	m	class:MonoGdx.Scene2D.Actor
ClipEnd	Desire_And_Doom/Actor.cs	/^        public void ClipEnd ()$/;"	m	class:MonoGdx.Scene2D.Actor
Collect_Timer	Desire_And_Doom/ECS/Components/Item.cs	/^        public float Collect_Timer { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Item
Color	Desire_And_Doom/Actor.cs	/^        public Color Color { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Color	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Color    Color  { get; set; } = Color.White;$/;"	p	class:Desire_And_Doom.ECS.Sprite
Color	Desire_And_Doom/Graphics/Particle.cs	/^        public Color Color { get; set; } = Color.White;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Combo_Counter	Desire_And_Doom/ECS/Components/Player.cs	/^        public int Combo_Counter = 0;$/;"	f	class:Desire_And_Doom.Player
Component	Desire_And_Doom/ECS/Component.cs	/^        public Component(Types Type)$/;"	m	class:Desire_And_Doom.ECS.Component
Component	Desire_And_Doom/ECS/Component.cs	/^    abstract class Component {$/;"	c	namespace:Desire_And_Doom.ECS
ComputeTransform	Desire_And_Doom/Group.cs	/^        protected Matrix ComputeTransform ()$/;"	m	class:MonoGdx.Scene2D.Group
Constant_Update	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public bool Constant_Update { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
Constant_Update	Desire_And_Doom/ECS/System.cs	/^        public virtual void Constant_Update(GameTime time, Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
Constant_Update	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        public override void Constant_Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Npc_System
Constant_Update	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void Constant_Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Constants	Desire_And_Doom/Utils/Constants.cs	/^    class Constants$/;"	c	namespace:Desire_And_Doom.Utils
Contains	Desire_And_Doom/ECS/Components/Body.cs	/^        public bool Contains(Body other)$/;"	m	class:Desire_And_Doom.ECS.Body
Contains	Desire_And_Doom/Graphics/Camera.cs	/^        public ContainmentType Contains(Point point)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Contains	Desire_And_Doom/Graphics/Camera.cs	/^        public ContainmentType Contains(Rectangle rectangle)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Contains	Desire_And_Doom/Graphics/Camera.cs	/^        public ContainmentType Contains(Vector2 vector2)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Contains_Blacklisted_Tag	Desire_And_Doom/ECS/Components/Physics.cs	/^        public bool Contains_Blacklisted_Tag(List<string> tags)$/;"	m	class:Desire_And_Doom.ECS.Physics
Content	Desire_And_Doom/Graphics/Assets.cs	/^        public ContentManager Content;$/;"	f	class:Desire_And_Doom.Assets
Control	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^        Control = 1,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Control	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^        Control = 1,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Controller	Entity_Editor/src/sample/Controller.java	/^public class Controller {$/;"	c
ControllerConnectionChanged	Desire_And_Doom/Utils/GamePadListener.cs	/^        public static event EventHandler<GamePadEventArgs> ControllerConnectionChanged;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ControllerConnectionChanged	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public static event EventHandler<GamePadEventArgs> ControllerConnectionChanged;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
Countdown_Life	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Countdown_Life(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle
Counter	Desire_And_Doom/Utils/Timers.cs	/^        public float Counter { get; set; }$/;"	p	class:Desire_And_Doom.Utils.Timer
Create	Desire_And_Doom/Entities/Boss_1.cs	/^        public static Entity Create(Lua lua, World world, Particle_World particle_world, Vector2 position)$/;"	m	class:Desire_And_Doom.Entities.Boss_1
CreateListener	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public override GamePadListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
CreateListener	Desire_And_Doom/Utils/InputListenerSettings.cs	/^        public abstract T CreateListener();$/;"	m	class:MonoGame.Extended.Input.InputListeners.T
CreateListener	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public override GamePadListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
CreateListener	Desire_And_Doom/Utils/Input_Handlers/InputListenerSettings.cs	/^        public abstract T CreateListener();$/;"	m	class:MonoGame.Extended.Input.InputListeners.T
CreateListener	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^        public override KeyboardListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
CreateListener	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^        public override MouseListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
CreateListener	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^        public override KeyboardListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
CreateListener	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^        public override MouseListener CreateListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
Create_Entity	Desire_And_Doom/ECS/World.cs	/^        public Entity Create_Entity()$/;"	m	class:Desire_And_Doom.ECS.World
Create_Entity	Desire_And_Doom/ECS/World.cs	/^        public Entity Create_Entity(LuaTable table, float x = 0, float y = 0)$/;"	m	class:Desire_And_Doom.ECS.World
Create_Sword_Hitbox	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public void Create_Sword_Hitbox(World world, Physics physics, Body body)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
CurrentDialog	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public Dialog CurrentDialog {get; private set;} = null;$/;"	p	class:Desire_And_Doom.Dialog_Box
CurrentDialogText	Desire_And_Doom/Graphics/Dialog.cs	/^        public int CurrentDialogText {get; set;} = 0;$/;"	p	class:Desire_And_Doom.Graphics.Dialog
CurrentDialogTextPointer	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public int CurrentDialogTextPointer {get; private set;} = 1;$/;"	p	class:Desire_And_Doom.Dialog_Box
CurrentState	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public GamePadState CurrentState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
CurrentState	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public GamePadState CurrentState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
CurrentState	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public MouseState CurrentState { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
CurrentState	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public MouseState CurrentState { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Current_Animation_ID	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public string Current_Animation_ID {get;set;} = "";$/;"	p	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Current_Animation_ID	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public string Current_Animation_ID { get => Animation_ID;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Current_Frame	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public int Current_Frame = 0;$/;"	f	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Current_Frame	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public int Current_Frame { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Current_Speed	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Current_Speed { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.ECS.Physics
Cursor	Desire_And_Doom/Gui/UI_Manager.cs	/^        Point Cursor = Point.Zero;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager	file:
DASHING	Desire_And_Doom/ECS/Components/Player.cs	/^            DASHING,$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
DEBUG	Desire_And_Doom/DesireAndDoom.cs	/^        public static bool DEBUG = false;$/;"	f	class:Desire_And_Doom.DesireAndDoom
DIALOG_COOLDOWN	Desire_And_Doom/Utils/Constants.cs	/^        public static readonly float DIALOG_COOLDOWN = 1.0f;$/;"	f	class:Desire_And_Doom.Utils.Constants
DYNAMIC	Desire_And_Doom/ECS/Components/Physics.cs	/^            STATIC, DYNAMIC, WATER, SPACE, WORLD_INTERACTION$/;"	e	enum:Desire_And_Doom.ECS.Physics.PType	file:
Dash_Timer	Desire_And_Doom/ECS/Components/Player.cs	/^        public float Dash_Timer = 0;$/;"	f	class:Desire_And_Doom.Player
Debug_Console	Desire_And_Doom/Utils/Debug_Console.cs	/^        public Debug_Console(Game game, Lua lua) : base(game)$/;"	m	class:Desire_And_Doom.Utils.Debug_Console
Debug_Console	Desire_And_Doom/Utils/Debug_Console.cs	/^    class Debug_Console : GameComponent$/;"	c	namespace:Desire_And_Doom.Utils
Debug_Drawing	Desire_And_Doom/Graphics/Debug_Drawing.cs	/^    class Debug_Drawing$/;"	c	namespace:Desire_And_Doom.Graphics
Default_Viewport_Adapter	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public Default_Viewport_Adapter(GraphicsDevice graphicsDevice)$/;"	m	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
Default_Viewport_Adapter	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^    class Default_Viewport_Adapter : ViewportAdapter$/;"	c	namespace:Desire_And_Doom.Graphics
Defence	Desire_And_Doom/ECS/Components/Character.cs	/^        public float Defence { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.Character
Deg_To_Rad	Desire_And_Doom/ECS/Components/Physics.cs	/^        public static float Deg_To_Rad(float deg) {$/;"	m	class:Desire_And_Doom.ECS.Physics
Density	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Density  { get; set; } = 0.01f;$/;"	p	class:Desire_And_Doom.ECS.Physics
Description	Desire_And_Doom/ECS/Components/Item.cs	/^        public string Description { get; set; } = "Just an item";$/;"	p	class:Desire_And_Doom.ECS.Item
DesireAndDoom	Desire_And_Doom/DesireAndDoom.cs	/^        public DesireAndDoom()$/;"	m	class:Desire_And_Doom.DesireAndDoom
DesireAndDoom	Desire_And_Doom/DesireAndDoom.cs	/^    public class DesireAndDoom : Game$/;"	c	namespace:Desire_And_Doom
Desire_And_Doom	Desire_And_Doom/DesireAndDoom.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/ECS/Components/Player.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/Assets.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/Dialog_Box.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/GameCamera.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/Monogui.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Graphics/Tiled_Map.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Program.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom	Desire_And_Doom/Utils/Input.cs	/^namespace Desire_And_Doom$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Component.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/AI.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Body.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Invatory.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Item.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Light_Emitter.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Npc.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Physics.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Components/Sprite.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Entity.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/AI_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Animation_Renderer_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Body_Renderer_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS	Desire_And_Doom/ECS/World.cs	/^namespace Desire_And_Doom.ECS$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Character.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Enemy.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Equipment.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Health.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Multipart_Animation.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Spawner.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/Timed_Destroy.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Components	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^namespace Desire_And_Doom.ECS.Components$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Advanced_Animation_Rendering_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Enemy_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Entity_Emitter_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Health_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Item_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Light_Emitter_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Particle_Emitter_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/Timed_Destroy_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.ECS.Systems	Desire_And_Doom/ECS/Systems/World_Interaction_System.cs	/^namespace Desire_And_Doom.ECS.Systems$/;"	n
Desire_And_Doom.Entities	Desire_And_Doom/Entities/Boss_1.cs	/^namespace Desire_And_Doom.Entities$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Animation.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Animation_Frame.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Camera.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Debug_Drawing.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Dialog.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Generated_Tiled_Map.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Particle.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Particle_World.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Renderer2D.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Renderer3D.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^namespace Desire_And_Doom.Graphics$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Emitter.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Particle.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Dust_Emitter.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Dust_Particle.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Fire_Emitter.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Emitter.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Particle.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Graphics.Particle_Systems	Desire_And_Doom/Graphics/Particle_Systems/Fire_Particle.cs	/^namespace Desire_And_Doom.Graphics.Particle_Systems$/;"	n
Desire_And_Doom.Gui	Desire_And_Doom/Gui/Invatory_Container.cs	/^namespace Desire_And_Doom.Gui$/;"	n
Desire_And_Doom.Gui	Desire_And_Doom/Gui/Pause_Menu.cs	/^namespace Desire_And_Doom.Gui$/;"	n
Desire_And_Doom.Gui	Desire_And_Doom/Gui/UI_Manager.cs	/^namespace Desire_And_Doom.Gui$/;"	n
Desire_And_Doom.Interfaces	Desire_And_Doom/Interfaces/IMovable.cs	/^namespace Desire_And_Doom.Interfaces$/;"	n
Desire_And_Doom.Interfaces	Desire_And_Doom/Interfaces/IRectangle.cs	/^namespace Desire_And_Doom.Interfaces$/;"	n
Desire_And_Doom.Interfaces	Desire_And_Doom/Interfaces/IRotatable.cs	/^namespace Desire_And_Doom.Interfaces$/;"	n
Desire_And_Doom.Items	Desire_And_Doom/Items/Equipable.cs	/^namespace Desire_And_Doom.Items$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Game_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Level_1_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Menu_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Screen_Manager.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/Settings_Screen.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Screens	Desire_And_Doom/Screens/boss_room_1.cs	/^namespace Desire_And_Doom.Screens$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Constants.cs	/^﻿namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Debug_Console.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Kore_Parser.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Math2.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Messanger.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Named_Action_List.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/RectangleF.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Tasker.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_And_Doom.Utils	Desire_And_Doom/Utils/Timers.cs	/^namespace Desire_And_Doom.Utils$/;"	n
Desire_Tiles	Desire_Tiles/Editor.cs	/^namespace Desire_Tiles$/;"	n
Desire_Tiles	Desire_Tiles/Program.cs	/^namespace Desire_Tiles$/;"	n
Desire_Tiles	Desire_Tiles/Right_Side_Bar.cs	/^namespace Desire_Tiles$/;"	n
Desire_Tiles	Desire_Tiles/Top_Menu.cs	/^namespace Desire_Tiles$/;"	n
Destroy	Desire_And_Doom/ECS/Entity.cs	/^        public void Destroy() {$/;"	m	class:Desire_And_Doom.ECS.Entity
Destroy	Desire_And_Doom/ECS/System.cs	/^        public virtual void Destroy(Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
Destroy	Desire_And_Doom/ECS/Systems/Enemy_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Enemy_System
Destroy	Desire_And_Doom/ECS/Systems/Entity_Emitter_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Entity_Emitter_System
Destroy	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Invatory_System
Destroy	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Npc_System
Destroy	Desire_And_Doom/ECS/Systems/Particle_Emitter_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Particle_Emitter_System
Destroy	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void Destroy(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Destroy	Desire_And_Doom/Graphics/Particle.cs	/^        public    void Destroy()                    => Remove = true;$/;"	m	class:Desire_And_Doom.Graphics.Particle
Destroy	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public void Destroy()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Destroy	Desire_And_Doom/Graphics/Particle_World.cs	/^        public void Destroy()$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Destroy	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public void Destroy()$/;"	m	class:Desire_And_Doom.Tiled_Map
Destroy	Desire_And_Doom/Screens/Game_Screen.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
Destroy	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Intro_Logos_Screen
Destroy	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
Destroy	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
Destroy	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
Destroy	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void Destroy() { }$/;"	m	class:Desire_And_Doom.Screens.Screen
Destroy	Desire_And_Doom/Screens/boss_room_1.cs	/^        public override void Destroy()$/;"	m	class:Desire_And_Doom.Screens.Boss_Room_1
DestroyAllButPersistant	Desire_And_Doom/Screens/Game_Screen.cs	/^        public void DestroyAllButPersistant()$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
DestroyOnCollision	Desire_And_Doom/ECS/Components/Physics.cs	/^        public bool DestroyOnCollision { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Physics
Destroy_All	Desire_And_Doom/ECS/World.cs	/^        public void Destroy_All(bool keep_persistant = false)$/;"	m	class:Desire_And_Doom.ECS.World
Dialog	Desire_And_Doom/ECS/Components/Npc.cs	/^        public Dialog Dialog;$/;"	f	class:Desire_And_Doom.ECS.Npc
Dialog	Desire_And_Doom/Graphics/Dialog.cs	/^        public Dialog() {}$/;"	m	class:Desire_And_Doom.Graphics.Dialog
Dialog	Desire_And_Doom/Graphics/Dialog.cs	/^        public Dialog(LuaTable table) {$/;"	m	class:Desire_And_Doom.Graphics.Dialog
Dialog	Desire_And_Doom/Graphics/Dialog.cs	/^    class Dialog$/;"	c	namespace:Desire_And_Doom.Graphics
Dialog_Box	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public Dialog_Box(PrimitivesBatch _primitives, Lua _lua, Lua_Function_System _engine) {$/;"	m	class:Desire_And_Doom.Dialog_Box
Dialog_Box	Desire_And_Doom/Graphics/Dialog_Box.cs	/^    class Dialog_Box$/;"	c	namespace:Desire_And_Doom
Dialog_Option	Desire_And_Doom/Graphics/Dialog.cs	/^    class Dialog_Option {$/;"	c	namespace:Desire_And_Doom.Graphics
Dialog_Text	Desire_And_Doom/Graphics/Dialog.cs	/^    class Dialog_Text {$/;"	c	namespace:Desire_And_Doom.Graphics
Dialog_Texts	Desire_And_Doom/Graphics/Dialog.cs	/^        public Dictionary<int, Dialog_Text> Dialog_Texts = new Dictionary<int, Dialog_Text>();$/;"	f	class:Desire_And_Doom.Graphics.Dialog
Direct	Desire_And_Doom/RoutedEvent.cs	/^        Direct,$/;"	e	enum:MonoGdx.Scene2D.RoutingStrategy	file:
Direction	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Direction { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.ECS.Physics
Direction	Desire_And_Doom/Graphics/Particle.cs	/^        public float Direction { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Disabled	Desire_And_Doom/Actor.cs	/^        Disabled,$/;"	e	enum:MonoGdx.Scene2D.Touchable	file:
Dispose	Desire_And_Doom/Stage.cs	/^        public void Dispose ()$/;"	m	class:MonoGdx.Scene2D.Stage
Dist	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public float Dist(float x1, float y1, float x2, float y2)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
DistanceBetween	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private static int DistanceBetween(Point a, Point b)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
DistanceBetween	Desire_And_Doom/Utils/MouseListener.cs	/^        private static int DistanceBetween(Point a, Point b)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
DistanceMoved	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public Vector2 DistanceMoved => CurrentState.Position.ToVector2() - PreviousState.Position.ToVector2();$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
DistanceMoved	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public Vector2 DistanceMoved => CurrentState.Position.ToVector2() - PreviousState.Position.ToVector2();$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Do_Block	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        public void Do_Block(LuaTable table, Entity e, AI ai, Body body, Physics physics)$/;"	m	class:Desire_And_Doom.ECS.AI_System
Do_Spawn	Desire_And_Doom/ECS/Components/Spawner.cs	/^        public void Do_Spawn(float X, float Y) {$/;"	m	class:Desire_And_Doom.ECS.Components.Spawner
Done	Desire_And_Doom/Utils/Tasker.cs	/^        public bool Done { get; set; }$/;"	p	class:Desire_And_Doom.Utils.Tasker
DoubleClickMilliseconds	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public int DoubleClickMilliseconds { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
DoubleClickMilliseconds	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^        public int DoubleClickMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
DoubleClickMilliseconds	Desire_And_Doom/Utils/MouseListener.cs	/^        public int DoubleClickMilliseconds { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
DoubleClickMilliseconds	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^        public int DoubleClickMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
DragThreshold	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public int DragThreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
DragThreshold	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^        public int DragThreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
DragThreshold	Desire_And_Doom/Utils/MouseListener.cs	/^        public int DragThreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
DragThreshold	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^        public int DragThreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
Draw	Desire_And_Doom/Actor.cs	/^        public virtual void Draw (GdxSpriteBatch spriteBatch, float parentAlpha)$/;"	m	class:MonoGdx.Scene2D.Actor
Draw	Desire_And_Doom/DesireAndDoom.cs	/^        protected override void Draw(GameTime gameTime)$/;"	m	class:Desire_And_Doom.DesireAndDoom
Draw	Desire_And_Doom/ECS/System.cs	/^        public virtual void Draw(SpriteBatch batch, Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
Draw	Desire_And_Doom/ECS/Systems/Advanced_Animation_Rendering_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity){$/;"	m	class:Desire_And_Doom.ECS.Systems.Advanced_Animation_Rendering_System
Draw	Desire_And_Doom/ECS/Systems/Animation_Renderer_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Animation_Renderer_System
Draw	Desire_And_Doom/ECS/Systems/Body_Renderer_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Body_Renderer_System
Draw	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Multipart_Animation_System
Draw	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Npc_System
Draw	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Draw	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^        public override void Draw(SpriteBatch batch, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Sprite_Renderer_System
Draw	Desire_And_Doom/ECS/World.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.ECS.World
Draw	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public void Draw(SpriteBatch batch) {$/;"	m	class:Desire_And_Doom.Dialog_Box
Draw	Desire_And_Doom/Graphics/Monogui.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Monogui
Draw	Desire_And_Doom/Graphics/Particle.cs	/^        public virtual void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Graphics.Particle
Draw	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Draw	Desire_And_Doom/Graphics/Particle_World.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Draw	Desire_And_Doom/Graphics/Renderer3D.cs	/^        public void Draw(){$/;"	m	class:Desire_And_Doom.Graphics.Renderer3D
Draw	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Graphics.Sky_Renderer
Draw	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Tiled_Map
Draw	Desire_And_Doom/Group.cs	/^        public override void Draw (GdxSpriteBatch spriteBatch, float parentAlpha)$/;"	m	class:MonoGdx.Scene2D.Group
Draw	Desire_And_Doom/Gui/Pause_Menu.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Gui.Pause_Menu
Draw	Desire_And_Doom/Screens/Game_Screen.cs	/^        public override void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
Draw	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        public override void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Intro_Logos_Screen
Draw	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public override void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
Draw	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public override void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
Draw	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public override void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
Draw	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void Draw(SpriteBatch batch) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
Draw	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
Draw	Desire_And_Doom/Stage.cs	/^        public void Draw ()$/;"	m	class:MonoGdx.Scene2D.Stage
Draw	Desire_And_Doom/Utils/Debug_Console.cs	/^        public void Draw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Utils.Debug_Console
Draw	Desire_Tiles/Editor.cs	/^        protected override void Draw(GameTime gameTime)$/;"	m	class:Desire_Tiles.Editor
Draw	Entity_Editor/Game1.cs	/^        protected override void Draw(GameTime gameTime)$/;"	m	class:Entity_Editor.Game1
DrawChildren	Desire_And_Doom/Group.cs	/^        protected void DrawChildren (GdxSpriteBatch spriteBatch, float parentAlpha)$/;"	m	class:MonoGdx.Scene2D.Group
DrawFilledRect	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        public void DrawFilledRect(Vector2 position, Vector2 size, Color color, float rotation = 0.0f, float layer = 1.0f)$/;"	m	class:Desire_And_Doom.Graphics.PrimitivesBatch
DrawLineRect	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        public void DrawLineRect(Vector2 position, Vector2 size, Color color, int line_width = 2, float layer = 1.0f)$/;"	m	class:Desire_And_Doom.Graphics.PrimitivesBatch
DrawPlayerHealth	Desire_And_Doom/Gui/UI_Manager.cs	/^        public void DrawPlayerHealth(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Gui.UI_Manager
DrawPlayerInvatory	Desire_And_Doom/Gui/UI_Manager.cs	/^        public void DrawPlayerInvatory(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Gui.UI_Manager
Draw_Fill_Rect	Desire_And_Doom/Graphics/Debug_Drawing.cs	/^        public static void Draw_Fill_Rect(SpriteBatch batch, float x, float y, float w, float h, Color color)$/;"	m	class:Desire_And_Doom.Graphics.Debug_Drawing
Draw_Line	Desire_And_Doom/Graphics/Debug_Drawing.cs	/^        public static void Draw_Line(SpriteBatch batch, Vector2 start, Vector2 end, Color color)$/;"	m	class:Desire_And_Doom.Graphics.Debug_Drawing
Draw_Line_Rect	Desire_And_Doom/Graphics/Debug_Drawing.cs	/^        public static void Draw_Line_Rect(SpriteBatch batch, float x, float y, float w, float h, Color color)$/;"	m	class:Desire_And_Doom.Graphics.Debug_Drawing
Draw_Solids	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public void Draw_Solids(SpriteBatch batch, GameCamera camera)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Drop_Item	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public void Drop_Item(int x, int y)$/;"	m	class:Desire_And_Doom.ECS.Invatory
Drop_Items	Desire_And_Doom/ECS/Components/Enemy.cs	/^        public List<string> Drop_Items { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Enemy
Dust_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Dust_Emitter.cs	/^        public Dust_Emitter(Vector2 _position, bool spawn_right_off = false) : base(_position, spawn_right_off)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Dust_Emitter
Dust_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Dust_Emitter.cs	/^    class Dust_Emitter : Particle_Emitter$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Dust_Particle	Desire_And_Doom/Graphics/Particle_Systems/Dust_Particle.cs	/^        public Dust_Particle()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Dust_Particle
Dust_Particle	Desire_And_Doom/Graphics/Particle_Systems/Dust_Particle.cs	/^    class Dust_Particle : Particle$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Dying	Desire_And_Doom/ECS/Components/Player.cs	/^        public bool Dying = false;$/;"	f	class:Desire_And_Doom.Player
Editor	Desire_Tiles/Editor.cs	/^        public Editor()$/;"	m	class:Desire_Tiles.Editor
Editor	Desire_Tiles/Editor.cs	/^    public class Editor : Game$/;"	c	namespace:Desire_Tiles
ElapsedTime	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public TimeSpan ElapsedTime { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
ElapsedTime	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public TimeSpan ElapsedTime { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
Emitter	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public Particle_Emitter Emitter { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Enabled	Desire_And_Doom/Actor.cs	/^        Enabled,$/;"	e	enum:MonoGdx.Scene2D.Touchable	file:
End	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^      public Vector2 Start, End;$/;"	f	class:Desire_And_Doom.ECS.Line
Enemy	Desire_And_Doom/ECS/Component.cs	/^            Enemy,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Enemy	Desire_And_Doom/ECS/Components/Enemy.cs	/^        public Enemy(List<string> _drop_items) : base(Types.Enemy)$/;"	m	class:Desire_And_Doom.ECS.Components.Enemy
Enemy	Desire_And_Doom/ECS/Components/Enemy.cs	/^    class Enemy : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Enemy_System	Desire_And_Doom/ECS/Systems/Enemy_System.cs	/^        public Enemy_System() : base(Types.Enemy)$/;"	m	class:Desire_And_Doom.ECS.Systems.Enemy_System
Enemy_System	Desire_And_Doom/ECS/Systems/Enemy_System.cs	/^    class Enemy_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Engine	Desire_And_Doom/ECS/Components/Physics.cs	/^        public Physics_Engine Engine { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Physics
Entities	Desire_And_Doom/ECS/Components/Spawner.cs	/^        public List<string> Entities { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Spawner
Entity	Desire_And_Doom/ECS/Entity.cs	/^        public Entity()$/;"	m	class:Desire_And_Doom.ECS.Entity
Entity	Desire_And_Doom/ECS/Entity.cs	/^    class Entity$/;"	c	namespace:Desire_And_Doom.ECS
Entity_Editor	Entity_Editor/Game1.cs	/^namespace Entity_Editor$/;"	n
Entity_Editor	Entity_Editor/Program.cs	/^namespace Entity_Editor$/;"	n
Entity_Emitter_System	Desire_And_Doom/ECS/Systems/Entity_Emitter_System.cs	/^        public Entity_Emitter_System() : base(Types.Entity_Particle_Emitter, Types.Body)$/;"	m	class:Desire_And_Doom.ECS.Systems.Entity_Emitter_System
Entity_Emitter_System	Desire_And_Doom/ECS/Systems/Entity_Emitter_System.cs	/^    class Entity_Emitter_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Entity_Particle_Emitter	Desire_And_Doom/ECS/Component.cs	/^            Entity_Particle_Emitter,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Entity_Particle_Emitter	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public Entity_Particle_Emitter(Particle_Emitter emitter, Particle_World world, bool active = true) : base(Types.Entity_Particle_Emitter)$/;"	m	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Entity_Particle_Emitter	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^    class Entity_Particle_Emitter : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Entity_Within	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public bool Entity_Within(string tag, Body b, float dist){$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Entity_Within	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public bool Entity_Within(string tag, float x, float y, float dist)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Equipable	Desire_And_Doom/Items/Equipable.cs	/^        public Equipable(Equipment_Type _type)$/;"	m	class:Desire_And_Doom.Items.Equipable
Equipable	Desire_And_Doom/Items/Equipable.cs	/^    class Equipable$/;"	c	namespace:Desire_And_Doom.Items
Equipment	Desire_And_Doom/ECS/Component.cs	/^            Equipment,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Equipment	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipment() : base(Types.Equipment)$/;"	m	class:Desire_And_Doom.ECS.Components.Equipment
Equipment	Desire_And_Doom/ECS/Components/Equipment.cs	/^    class Equipment : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Equipment_Type	Desire_And_Doom/Items/Equipable.cs	/^        public enum Equipment_Type$/;"	g	class:Desire_And_Doom.Items.Equipable
EventManager	Desire_And_Doom/RoutedEvent.cs	/^    public static class EventManager$/;"	c	namespace:MonoGdx.Scene2D
Exit	Desire_And_Doom/Utils/Debug_Console.cs	/^        public void Exit() { DesireAndDoom.SHOULD_QUIT = true; }$/;"	m	class:Desire_And_Doom.Utils.Lua_Commander
Exit_Editor	Desire_Tiles/Editor.cs	/^        public static void Exit_Editor()$/;"	m	class:Desire_Tiles.Editor
Experience	Desire_And_Doom/ECS/Components/Enemy.cs	/^        public float Experience { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.Enemy
FORWARD	Desire_And_Doom/Graphics/Animation.cs	/^            FORWARD,$/;"	e	enum:Desire_And_Doom.Graphics.Animation.Playback_Types	file:
Face_Move_Dir	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public void Face_Move_Dir(Entity e)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
FacingSide	Desire_And_Doom/ECS/Components/Physics.cs	/^        public PSide FacingSide = PSide.Right;$/;"	f	class:Desire_And_Doom.ECS.Physics
Fade_In	Desire_And_Doom/Graphics/Particle.cs	/^        public void Fade_In()$/;"	m	class:Desire_And_Doom.Graphics.Particle
Fade_Out	Desire_And_Doom/Graphics/Particle.cs	/^        public void Fade_Out()$/;"	m	class:Desire_And_Doom.Graphics.Particle
Fear	Desire_And_Doom/ECS/Components/Character.cs	/^        public float Fear { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.Character
File_Name	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public string File_Name { get; set; } = "";$/;"	p	class:Desire_And_Doom.ECS.Components.Lua_Function
FilteredDraw	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public override void FilteredDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
FilteredDraw	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public override void FilteredDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
FilteredDraw	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void FilteredDraw(SpriteBatch batch) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
FilteredDraw	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void FilteredDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
FindActor	Desire_And_Doom/Group.cs	/^        public Actor FindActor (string name)$/;"	m	class:MonoGdx.Scene2D.Group
Find_Direction	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Find_Direction() =>$/;"	m	class:Desire_And_Doom.Graphics.Particle
Find_With_Tag	Desire_And_Doom/ECS/World.cs	/^        public Entity Find_With_Tag(string tag)$/;"	m	class:Desire_And_Doom.ECS.World
FireEnterAndExit	Desire_And_Doom/Stage.cs	/^        private Actor FireEnterAndExit (Actor overLast, int screenX, int screenY, int pointer)$/;"	m	class:MonoGdx.Scene2D.Stage	file:
Fire_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Fire_Emitter.cs	/^        public Fire_Emitter(Vector2 _position, bool create_fire_on_creation = true) : base(_position, create_fire_on_creation)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Emitter
Fire_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Fire_Emitter.cs	/^    class Fire_Emitter : Particle_Emitter$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Fire_Fly_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Emitter.cs	/^        public Fire_Fly_Emitter(Vector2 _position) : base(_position, true)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Fly_Emitter
Fire_Fly_Emitter	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Emitter.cs	/^    class Fire_Fly_Emitter : Particle_Emitter$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Fire_Fly_Particle	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Particle.cs	/^        public Fire_Fly_Particle()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Fly_Particle
Fire_Fly_Particle	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Particle.cs	/^    class Fire_Fly_Particle : Particle$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Fire_Particle	Desire_And_Doom/Graphics/Particle_Systems/Fire_Particle.cs	/^        public Fire_Particle()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Particle
Fire_Particle	Desire_And_Doom/Graphics/Particle_Systems/Fire_Particle.cs	/^    class Fire_Particle : Particle$/;"	c	namespace:Desire_And_Doom.Graphics.Particle_Systems
Flags	Desire_And_Doom/ECS/Components/AI.cs	/^        public List<bool> Flags { get; set; }$/;"	p	class:Desire_And_Doom.ECS.AI
Flash_Timer	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public float Flash_Timer { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Flip	Desire_And_Doom/Graphics/Particle.cs	/^        public SpriteEffects Flip { get; set; } = SpriteEffects.None;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Flying	Desire_And_Doom/ECS/Components/Physics.cs	/^        public bool Flying { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Physics
Force_Animation	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public bool Force_Animation { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Force_Animation_Playback	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public void Force_Animation_Playback(string animation_id){$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Force_Play_Animation	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public void Force_Play_Animation(string id)$/;"	m	class:Desire_And_Doom.ECS.Animated_Sprite
Frame_Time	Desire_And_Doom/Graphics/Animation_Frame.cs	/^        public float Frame_Time { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Animation_Frame
Frames	Desire_And_Doom/Graphics/Animation.cs	/^        public List<Animation_Frame> Frames { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Animation
Friction	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Friction { get; set; } = 0.005f;$/;"	p	class:Desire_And_Doom.ECS.Physics
Friction	Desire_And_Doom/Graphics/Particle.cs	/^        public Vector2 Friction  { get; set; } = Vector2.One;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Function	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public LuaFunction Function { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Lua_Function
GRAPHICS_SCALE	Desire_And_Doom/Graphics/Renderer2D.cs	/^        static readonly float GRAPHICS_SCALE = 5f;$/;"	f	class:Desire_And_Doom.Graphics.Renderer2D	file:
GRAPHICS_SCALING	Desire_And_Doom/DesireAndDoom.cs	/^        public static readonly float GRAPHICS_SCALING = 4f;$/;"	f	class:Desire_And_Doom.DesireAndDoom
Game1	Entity_Editor/Game1.cs	/^        public Game1()$/;"	m	class:Entity_Editor.Game1
Game1	Entity_Editor/Game1.cs	/^    public class Game1 : Game$/;"	c	namespace:Entity_Editor
GameCamera	Desire_And_Doom/Graphics/GameCamera.cs	/^        public GameCamera(GraphicsDevice device, bool _scrollable = false)$/;"	m	class:Desire_And_Doom.GameCamera
GameCamera	Desire_And_Doom/Graphics/GameCamera.cs	/^    class GameCamera$/;"	c	namespace:Desire_And_Doom
GamePadEventArgs	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public GamePadEventArgs(GamePadState previousState, GamePadState currentState,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
GamePadEventArgs	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^    public class GamePadEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
GamePadEventArgs	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public GamePadEventArgs(GamePadState previousState, GamePadState currentState,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
GamePadEventArgs	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^    public class GamePadEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
GamePadListener	Desire_And_Doom/Utils/GamePadListener.cs	/^        public GamePadListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
GamePadListener	Desire_And_Doom/Utils/GamePadListener.cs	/^        public GamePadListener(GamePadListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
GamePadListener	Desire_And_Doom/Utils/GamePadListener.cs	/^    public class GamePadListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
GamePadListener	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public GamePadListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
GamePadListener	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public GamePadListener(GamePadListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
GamePadListener	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^    public class GamePadListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
GamePadListenerSettings	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public GamePadListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
GamePadListenerSettings	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public GamePadListenerSettings(PlayerIndex playerIndex, bool vibrationEnabled = true,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
GamePadListenerSettings	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^    public class GamePadListenerSettings : InputListenerSettings<GamePadListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
GamePadListenerSettings	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public GamePadListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
GamePadListenerSettings	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public GamePadListenerSettings(PlayerIndex playerIndex, bool vibrationEnabled = true,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
GamePadListenerSettings	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^    public class GamePadListenerSettings : InputListenerSettings<GamePadListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
Game_Screen	Desire_And_Doom/Screens/Game_Screen.cs	/^        public Game_Screen(World _world, GameCamera _camera, PenumbraComponent _lighting, Particle_World _particle_world, Physics_Engine _physics_engine,Lua _lua, GraphicsDevice _device, string _id) : base(_id)$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
Game_Screen	Desire_And_Doom/Screens/Game_Screen.cs	/^    class Game_Screen : Screen$/;"	c	namespace:Desire_And_Doom.Screens
Game_State	Desire_And_Doom/DesireAndDoom.cs	/^        public static State Game_State { get; set;  } = State.PLAYING;$/;"	p	class:Desire_And_Doom.DesireAndDoom
Generate_Animation	Desire_And_Doom/Graphics/Assets.cs	/^        public Animation Generate_Animation(string id,Vector2 start_pos, Vector2 frame_size, int num_frames)$/;"	m	class:Desire_And_Doom.Assets
Generate_Quads	Desire_And_Doom/Graphics/Assets.cs	/^        public void Generate_Quads(string id,int imgsize, int twidth, int theight)$/;"	m	class:Desire_And_Doom.Assets
Generate_Rectangle	Desire_And_Doom/Graphics/Assets.cs	/^        public Texture2D Generate_Rectangle(GraphicsDevice device, string name, int width, int height)$/;"	m	class:Desire_And_Doom.Assets
Generated_Tiled_Map	Desire_And_Doom/Graphics/Generated_Tiled_Map.cs	/^    class Generated_Tiled_Map$/;"	c	namespace:Desire_And_Doom.Graphics
Get	Desire_And_Doom/ECS/Components/Invatory.cs	/^        internal Entity Get(int y, int x)$/;"	m	class:Desire_And_Doom.ECS.Invatory	file:
Get	Desire_And_Doom/ECS/Entity.cs	/^        public Component Get(Component.Types id)$/;"	m	class:Desire_And_Doom.ECS.Entity
Get	Desire_And_Doom/ECS/Entity.cs	/^        public Component Get(string id)$/;"	m	class:Desire_And_Doom.ECS.Entity
Get	Desire_And_Doom/Graphics/Assets.cs	/^        public T Get <T>(string id){$/;"	m	class:Desire_And_Doom.Assets
GetBoundingFrustum	Desire_And_Doom/Graphics/Camera.cs	/^        public BoundingFrustum GetBoundingFrustum()$/;"	m	class:Desire_And_Doom.Graphics.Camera
GetInverseViewMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        public Matrix GetInverseViewMatrix()$/;"	m	class:Desire_And_Doom.Graphics.Camera
GetKeyboardFocus	Desire_And_Doom/Stage.cs	/^        public Actor GetKeyboardFocus ()$/;"	m	class:MonoGdx.Scene2D.Stage
GetNextDialogPointer	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public int GetNextDialogPointer() {$/;"	m	class:Desire_And_Doom.Dialog_Box
GetPosition	Desire_And_Doom/RoutedEvent.cs	/^        public Vector2 GetPosition (Actor actor)$/;"	m	class:MonoGdx.Scene2D.MouseEventArgs
GetPosition	Desire_And_Doom/RoutedEvent.cs	/^        public Vector2 GetPosition (Actor actor)$/;"	m	class:MonoGdx.Scene2D.TouchEventArgs
GetProjectionMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        private Matrix GetProjectionMatrix(Matrix viewMatrix)$/;"	m	class:Desire_And_Doom.Graphics.Camera	file:
GetScaleMatrix	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public override Matrix GetScaleMatrix()$/;"	m	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
GetScaleMatrix	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public abstract Matrix GetScaleMatrix();$/;"	m	class:Desire_And_Doom.Graphics.ViewportAdapter
GetScrollFocus	Desire_And_Doom/Stage.cs	/^        public Actor GetScrollFocus ()$/;"	m	class:MonoGdx.Scene2D.Stage
GetTouchCapture	Desire_And_Doom/Stage.cs	/^        public Actor GetTouchCapture (int pointer)$/;"	m	class:MonoGdx.Scene2D.Stage
GetViewMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        public Matrix GetViewMatrix()$/;"	m	class:Desire_And_Doom.Graphics.Camera
GetViewMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        public Matrix GetViewMatrix(Vector2 parallaxFactor)$/;"	m	class:Desire_And_Doom.Graphics.Camera
GetViewportAdapter	Desire_And_Doom/Graphics/Camera.cs	/^        public ViewportAdapter GetViewportAdapter() => _viewportAdapter;$/;"	m	class:Desire_And_Doom.Graphics.Camera
GetVirtualViewMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        private Matrix GetVirtualViewMatrix()$/;"	m	class:Desire_And_Doom.Graphics.Camera	file:
GetVirtualViewMatrix	Desire_And_Doom/Graphics/Camera.cs	/^        private Matrix GetVirtualViewMatrix(Vector2 parallaxFactor)$/;"	m	class:Desire_And_Doom.Graphics.Camera	file:
Get_All_Persistant	Desire_And_Doom/ECS/World.cs	/^        public List<Entity> Get_All_Persistant()$/;"	m	class:Desire_And_Doom.ECS.World
Get_All_With_Component	Desire_And_Doom/ECS/World.cs	/^        public List<Entity> Get_All_With_Component(Component.Types T)$/;"	m	class:Desire_And_Doom.ECS.World
Get_All_With_Tag	Desire_And_Doom/ECS/World.cs	/^        public List<Entity> Get_All_With_Tag(string tag)$/;"	m	class:Desire_And_Doom.ECS.World
Get_Camera	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public GameCamera Get_Camera() => camera;$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Get_Camera_Frustum	Desire_And_Doom/Graphics/GameCamera.cs	/^        public BoundingFrustum Get_Camera_Frustum()$/;"	m	class:Desire_And_Doom.GameCamera
Get_Camera_Position_In_Worldspace	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 Get_Camera_Position_In_Worldspace()$/;"	m	class:Desire_And_Doom.GameCamera
Get_Component	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Component Get_Component(Entity e, string type)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Get_Component_Types_List	Desire_And_Doom/ECS/Entity.cs	/^        public List<Types> Get_Component_Types_List() {$/;"	m	class:Desire_And_Doom.ECS.Entity
Get_Components_List	Desire_And_Doom/ECS/Entity.cs	/^        public List<Component> Get_Components_List() {$/;"	m	class:Desire_And_Doom.ECS.Entity
Get_Controller	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Camera Get_Controller() => camera;$/;"	m	class:Desire_And_Doom.GameCamera
Get_Current_Animation	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public Animation Get_Current_Animation() => Animations[Current_Animation_ID];$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Get_Current_Frame	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public Animation_Frame Get_Current_Frame() => Get_Current_Animation().Frames[Current_Frame];$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Get_DT	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public float Get_DT() => (float)time.ElapsedGameTime.TotalSeconds;$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Get_Layer	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^        protected float Get_Layer(Body body)$/;"	m	class:Desire_And_Doom.ECS.Sprite_Renderer_System
Get_Player	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Entity Get_Player()$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Get_Quads	Desire_And_Doom/Graphics/Assets.cs	/^        public List<Rectangle> Get_Quads(string id) {$/;"	m	class:Desire_And_Doom.Assets
Get_System	Desire_And_Doom/ECS/World.cs	/^        public System Get_System<T>()$/;"	m	class:Desire_And_Doom.ECS.World
Get_With_Tag	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Entity Get_With_Tag(string tag)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Get_World	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public World Get_World() => World_Ref;$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Give_Tile_Map	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^        public void Give_Tile_Map(Tiled_Map _tilemap)$/;"	m	class:Desire_And_Doom.ECS.Sprite_Renderer_System
Going_To_Menu	Desire_And_Doom/ECS/Components/Player.cs	/^        public bool Going_To_Menu = false;$/;"	f	class:Desire_And_Doom.Player
GotKeyboardFocus	Desire_And_Doom/Actor.cs	/^        public event KeyboardFocusChangedEventHandler GotKeyboardFocus$/;"	p	class:MonoGdx.Scene2D.Actor
GotKeyboardFocusClass	Desire_And_Doom/Actor.cs	/^        private static void GotKeyboardFocusClass (Actor sender, KeyboardFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
GotKeyboardFocusEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent GotKeyboardFocusEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
GotScrollFocus	Desire_And_Doom/Actor.cs	/^        public event ScrollFocusChangedEventHandler GotScrollFocus$/;"	p	class:MonoGdx.Scene2D.Actor
GotScrollFocusClass	Desire_And_Doom/Actor.cs	/^        private static void GotScrollFocusClass (Actor sender, ScrollFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
GotScrollFocusEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent GotScrollFocusEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
GotTouchCapture	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler GotTouchCapture$/;"	p	class:MonoGdx.Scene2D.Actor
GotTouchCaptureClass	Desire_And_Doom/Actor.cs	/^        private static void GotTouchCaptureClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
GotTouchCaptureEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent GotTouchCaptureEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
Goto_Screen	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void Goto_Screen(string _id, bool fade_in_out = false, params string []args)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
GraphicsDevice	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public GraphicsDevice GraphicsDevice { get; }$/;"	p	class:Desire_And_Doom.Graphics.ViewportAdapter
Grendle 	Desire_And_Doom/Content/Lua/AI.lua	/^	Grendle = function(entity, engine)$/;"	f
Grendle 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^	Grendle = function(entity, engine)$/;"	f
Grendle 	Lua_World/AI.lua	/^	Grendle = function(entity, engine)$/;"	f
Grendle_AI	Desire_And_Doom/Content/Lua/Grendle_AI.lua	/^function Grendle_AI(entity, engine)$/;"	f
Grendle_AI	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Grendle_AI.lua	/^function Grendle_AI(entity, engine)$/;"	f
Grendle_AI	Lua_World/Grendle_AI.lua	/^function Grendle_AI(entity, engine)$/;"	f
Group	Desire_And_Doom/Group.cs	/^        public Group ()$/;"	m	class:MonoGdx.Scene2D.Group
Group	Desire_And_Doom/Group.cs	/^    public class Group : Actor, ICullable$/;"	c	namespace:MonoGdx.Scene2D
GuiGamePadListener	Desire_And_Doom/Utils/IInputService.cs	/^        GamePadListener GuiGamePadListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiGamePadListener	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^        GamePadListener GuiGamePadListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiKeyboardListener	Desire_And_Doom/Utils/IInputService.cs	/^        KeyboardListener GuiKeyboardListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiKeyboardListener	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^        KeyboardListener GuiKeyboardListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiMouseListener	Desire_And_Doom/Utils/IInputService.cs	/^        MouseListener GuiMouseListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiMouseListener	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^        MouseListener GuiMouseListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GuiTouchListener	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^        TouchListener GuiTouchListener { get; }$/;"	p	interface:MonoGame.Extended.InputListeners.IInputService
GutterHeight	Desire_And_Doom/Stage.cs	/^        public float GutterHeight { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
GutterWidth	Desire_And_Doom/Stage.cs	/^        public float GutterWidth { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
H	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public int H { get => slots.GetLength(0); }$/;"	p	class:Desire_And_Doom.ECS.Invatory
HALF	Desire_And_Doom/Utils/Debug_Console.cs	/^            HALF,$/;"	e	enum:Desire_And_Doom.Utils.Debug_Console.State	file:
HEIGHT	Desire_Tiles/Editor.cs	/^        public static readonly int HEIGHT = 640;$/;"	f	class:Desire_Tiles.Editor
HELMET	Desire_And_Doom/Items/Equipable.cs	/^            HELMET,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
Handle_Collisions	Desire_And_Doom/ECS/Components/Physics.cs	/^        public bool Handle_Collisions { get; set; } = true;$/;"	p	class:Desire_And_Doom.ECS.Physics
Handled	Desire_And_Doom/RoutedEvent.cs	/^        public bool Handled { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
Handler	Desire_And_Doom/RoutedEvent.cs	/^            public RoutedEventHandlerInfo Handler;$/;"	f	class:MonoGdx.Scene2D.EventManager.ClassHandlerNode
Handler	Desire_And_Doom/RoutedEvent.cs	/^        public Delegate Handler$/;"	p	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo
HandlerType	Desire_And_Doom/RoutedEvent.cs	/^        public Type HandlerType { get; private set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEvent
Has	Desire_And_Doom/ECS/Entity.cs	/^        public bool Has(Types name) {$/;"	m	class:Desire_And_Doom.ECS.Entity
Has	Desire_And_Doom/ECS/Entity.cs	/^        public bool Has(string name){$/;"	m	class:Desire_And_Doom.ECS.Entity
Has	Desire_And_Doom/Graphics/Assets.cs	/^        public bool Has(string id, Type T)$/;"	m	class:Desire_And_Doom.Assets
HasChildren	Desire_And_Doom/Group.cs	/^        public bool HasChildren$/;"	p	class:MonoGdx.Scene2D.Group
HasMouseMoved	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public bool HasMouseMoved => (_previousState.X != _currentState.X) || (_previousState.Y != _currentState.Y);$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener
HasMouseMoved	Desire_And_Doom/Utils/MouseListener.cs	/^        public bool HasMouseMoved => (_previousState.X != _currentState.X) || (_previousState.Y != _currentState.Y);$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener
HasParent	Desire_And_Doom/Actor.cs	/^        public bool HasParent$/;"	p	class:MonoGdx.Scene2D.Actor
Has_All_Types	Desire_And_Doom/ECS/System.cs	/^        public bool Has_All_Types (Entity entity) {$/;"	m	class:Desire_And_Doom.ECS.System
Has_Sky	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public bool Has_Sky { get; private set; } = false;$/;"	p	class:Desire_And_Doom.Tiled_Map
Has_Space	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public bool Has_Space()$/;"	m	class:Desire_And_Doom.ECS.Invatory
Has_Tag	Desire_And_Doom/ECS/Entity.cs	/^        public bool Has_Tag(string tag)$/;"	m	class:Desire_And_Doom.ECS.Entity
Heal	Desire_And_Doom/ECS/Components/Health.cs	/^        public void Heal(int health)  => Amount += health;$/;"	m	class:Desire_And_Doom.ECS.Components.Health
Health	Desire_And_Doom/ECS/Component.cs	/^            Health,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Health	Desire_And_Doom/ECS/Components/Health.cs	/^        public Health(int total) : base(Types.Health)$/;"	m	class:Desire_And_Doom.ECS.Components.Health
Health	Desire_And_Doom/ECS/Components/Health.cs	/^    class Health : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Health_System	Desire_And_Doom/ECS/Systems/Health_System.cs	/^        public Health_System() : base(Types.Health)$/;"	m	class:Desire_And_Doom.ECS.Systems.Health_System
Health_System	Desire_And_Doom/ECS/Systems/Health_System.cs	/^    class Health_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Height	Desire_And_Doom/Actor.cs	/^        public float Height { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Height	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Height { get { return Size.Y; } set { Size = new Vector2(Size.X, value); } }$/;"	p	class:Desire_And_Doom.ECS.Body
Height	Desire_And_Doom/Graphics/Particle.cs	/^        public float Height { get { return Size.Y; } set { Size = new Vector2(Size.X, value); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Height	Desire_And_Doom/Stage.cs	/^        public float Height { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Height	Desire_And_Doom/Utils/RectangleF.cs	/^        public float Height { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Utils.RectangleF
Helmet_Piece	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipable Helmet_Piece  { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Equipment
Hit	Desire_And_Doom/Actor.cs	/^        public virtual Actor Hit (float x, float y, bool touchable)$/;"	m	class:MonoGdx.Scene2D.Actor
Hit	Desire_And_Doom/Group.cs	/^        public override Actor Hit (float x, float y, bool touchable)$/;"	m	class:MonoGdx.Scene2D.Group
Hit	Desire_And_Doom/Stage.cs	/^        public Actor Hit (float stageX, float stageY, bool touchable)$/;"	m	class:MonoGdx.Scene2D.Stage
Hotload	Desire_And_Doom/Graphics/Assets.cs	/^        public bool Hotload { get; set; }$/;"	p	class:Desire_And_Doom.LuaTableAsset
Hurt	Desire_And_Doom/ECS/Components/Health.cs	/^        public void Hurt(int dammage, bool shield = false) {$/;"	m	class:Desire_And_Doom.ECS.Components.Health
ID	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public string ID { get; set; } = "";$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
ID	Desire_And_Doom/Graphics/Animation.cs	/^        public string ID { get; private set; }$/;"	p	class:Desire_And_Doom.Graphics.Animation
ID	Desire_And_Doom/Items/Equipable.cs	/^        public string ID                    { get; set; } = "";$/;"	p	class:Desire_And_Doom.Items.Equipable
ID	Desire_And_Doom/Screens/Screen.cs	/^        public string ID { get; protected set; }$/;"	p	class:Desire_And_Doom.Screens.Screen
IDLE	Desire_And_Doom/ECS/Components/Player.cs	/^            IDLE,$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
IInputService	Desire_And_Doom/Utils/IInputService.cs	/^    public interface IInputService$/;"	i	namespace:MonoGame.Extended.InputListeners
IInputService	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^    public interface IInputService$/;"	i	namespace:MonoGame.Extended.InputListeners
IMovable	Desire_And_Doom/Interfaces/IMovable.cs	/^    public interface IMovable$/;"	i	namespace:Desire_And_Doom.Interfaces
IN_INVATORY	Desire_And_Doom/ECS/Components/Player.cs	/^            IN_INVATORY,$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
IRectangle	Desire_And_Doom/Interfaces/IRectangle.cs	/^    public interface IRectangle$/;"	i	namespace:Desire_And_Doom.Interfaces
IRotatable	Desire_And_Doom/Interfaces/IRotatable.cs	/^    public interface IRotatable$/;"	i	namespace:Desire_And_Doom.Interfaces
Idle_Animation_ID	Desire_And_Doom/Items/Equipable.cs	/^        public string Idle_Animation_ID     { get; set; } = "";$/;"	p	class:Desire_And_Doom.Items.Equipable
Image	Desire_And_Doom/Graphics/Particle.cs	/^        public Texture2D Image  { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Index	Desire_And_Doom/RoutedEvent.cs	/^        internal int Index { get; private set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEvent
InitialDelay	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public int InitialDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
InitialDelay	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public int InitialDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
InitialDelayMilliseconds	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^        public int InitialDelayMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
InitialDelayMilliseconds	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^        public int InitialDelayMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
Initialize	Desire_And_Doom/DesireAndDoom.cs	/^        protected override void Initialize()$/;"	m	class:Desire_And_Doom.DesireAndDoom
Initialize	Desire_Tiles/Editor.cs	/^        protected override void Initialize()$/;"	m	class:Desire_Tiles.Editor
Initialize	Entity_Editor/Game1.cs	/^        protected override void Initialize()$/;"	m	class:Entity_Editor.Game1
InitializeEventArgs	Desire_And_Doom/Actor.cs	/^        protected virtual RoutedEventArgs InitializeEventArgs (RoutedEventArgs e, RoutedEvent routedEvent)$/;"	m	class:MonoGdx.Scene2D.Actor
Input	Desire_And_Doom/Utils/Input.cs	/^        private Input() {$/;"	m	class:Desire_And_Doom.Input	file:
Input	Desire_And_Doom/Utils/Input.cs	/^    class Input$/;"	c	namespace:Desire_And_Doom
InputListener	Desire_And_Doom/Utils/InputListener.cs	/^        protected InputListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListener
InputListener	Desire_And_Doom/Utils/InputListener.cs	/^    public abstract class InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
InputListener	Desire_And_Doom/Utils/Input_Handlers/InputListener.cs	/^        protected InputListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListener
InputListener	Desire_And_Doom/Utils/Input_Handlers/InputListener.cs	/^    public abstract class InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
InputListenerComponent	Desire_And_Doom/Utils/InputListenerComponent.cs	/^        public InputListenerComponent(Game game)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
InputListenerComponent	Desire_And_Doom/Utils/InputListenerComponent.cs	/^        public InputListenerComponent(Game game, params InputListener[] listeners)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
InputListenerComponent	Desire_And_Doom/Utils/InputListenerComponent.cs	/^    public class InputListenerComponent : GameComponent, IUpdateable$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
InputListenerComponent	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^        public InputListenerComponent(Game game)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
InputListenerComponent	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^        public InputListenerComponent(Game game, params InputListener[] listeners)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
InputListenerComponent	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^    public class InputListenerComponent : GameComponent, IUpdate$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
Intersect	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public bool Intersect { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Polygon_Collision_Result
Interval_Distance	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public float Interval_Distance(float min_a, float max_a, float min_b, float max_b)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Intro_Logos_Screen	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        public Intro_Logos_Screen(Screen_Manager _manager, GameCamera _camera, PenumbraComponent _penumbra, ContentManager _content) : base("Logo")$/;"	m	class:Desire_And_Doom.Screens.Intro_Logos_Screen
Intro_Logos_Screen	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^    class Intro_Logos_Screen : Screen$/;"	c	namespace:Desire_And_Doom.Screens
Invatories	Desire_And_Doom/Gui/Invatory_Container.cs	/^        public List<Invatory> Invatories { get; set; }$/;"	p	class:Desire_And_Doom.Gui.Invatory_Container
Invatory	Desire_And_Doom/ECS/Component.cs	/^            Invatory,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Invatory	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public Invatory(World world, Entity parent, int w, int h) :base(Types.Invatory) {$/;"	m	class:Desire_And_Doom.ECS.Invatory
Invatory	Desire_And_Doom/ECS/Components/Invatory.cs	/^    class Invatory : Component$/;"	c	namespace:Desire_And_Doom.ECS
Invatory_Container	Desire_And_Doom/Gui/Invatory_Container.cs	/^        public Invatory_Container()$/;"	m	class:Desire_And_Doom.Gui.Invatory_Container
Invatory_Container	Desire_And_Doom/Gui/Invatory_Container.cs	/^    class Invatory_Container$/;"	c	namespace:Desire_And_Doom.Gui
Invatory_System	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^        public Invatory_System() : base(Types.Invatory, Types.Body)$/;"	m	class:Desire_And_Doom.ECS.Invatory_System
Invatory_System	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^    class Invatory_System : System$/;"	c	namespace:Desire_And_Doom.ECS
InvokeClassHandlers	Desire_And_Doom/RoutedEvent.cs	/^        internal static void InvokeClassHandlers (Actor target, RoutedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.EventManager	file:
InvokeClassHandlers	Desire_And_Doom/RoutedEvent.cs	/^        private static void InvokeClassHandlers (ClassHandlerNode node, Actor target, RoutedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.EventManager	file:
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.KeyCharEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.KeyEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.KeyboardFocusChangedEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.MouseEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.RoutedPropertyChangedEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.ScrollEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.ScrollFocusChangedEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.SelectionChangedEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected override void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.TouchEventArgs
InvokeEventHandler	Desire_And_Doom/RoutedEvent.cs	/^        protected virtual void InvokeEventHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.RoutedEventArgs
InvokeHandler	Desire_And_Doom/Actor.cs	/^        internal bool InvokeHandler (RoutedEventArgs args)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
InvokeHandler	Desire_And_Doom/RoutedEvent.cs	/^        internal void InvokeHandler (Actor target, RoutedEventArgs e)$/;"	m	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo
InvokeHandler	Desire_And_Doom/RoutedEvent.cs	/^        internal void InvokeHandler (Delegate handler, Actor target)$/;"	m	class:MonoGdx.Scene2D.RoutedEventArgs	file:
IsAscendentOf	Desire_And_Doom/Actor.cs	/^        public bool IsAscendentOf (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Actor
IsCapturingHandler	Desire_And_Doom/RoutedEvent.cs	/^        public bool IsCapturingHandler$/;"	p	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo
IsDescendentOf	Desire_And_Doom/Actor.cs	/^        public bool IsDescendentOf (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Actor
IsDown	Desire_And_Doom/RoutedEvent.cs	/^        public bool IsDown$/;"	p	class:MonoGdx.Scene2D.KeyEventArgs
IsKeyboardFocused	Desire_And_Doom/Actor.cs	/^        public bool IsKeyboardFocused$/;"	p	class:MonoGdx.Scene2D.Actor
IsOpen	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public bool IsOpen { get => CurrentDialog != null; }$/;"	p	class:Desire_And_Doom.Dialog_Box
IsScrollFocused	Desire_And_Doom/Actor.cs	/^        public bool IsScrollFocused$/;"	p	class:MonoGdx.Scene2D.Actor
IsTransform	Desire_And_Doom/Group.cs	/^        public bool IsTransform { get; set; }$/;"	p	class:MonoGdx.Scene2D.Group
IsUp	Desire_And_Doom/RoutedEvent.cs	/^        public bool IsUp$/;"	p	class:MonoGdx.Scene2D.KeyEventArgs
IsVisible	Desire_And_Doom/Actor.cs	/^        public bool IsVisible { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Is_Gamepad_Button_Pressed	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Gamepad_Button_Pressed(Buttons key)$/;"	m	class:Desire_And_Doom.Input
Is_Key_Down	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Key_Down(Keys key) {$/;"	m	class:Desire_And_Doom.Input
Is_Key_Pressed	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Key_Pressed(Keys key)$/;"	m	class:Desire_And_Doom.Input
Is_Key_Up	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Key_Up(Keys key) {$/;"	m	class:Desire_And_Doom.Input
Is_Sensor	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public bool Is_Sensor { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
Iso_Tiled_Map	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^        public Iso_Tiled_Map(string name)$/;"	m	class:Desire_And_Doom.Iso_Tiled_Map
Iso_Tiled_Map	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^    class Iso_Tiled_Map$/;"	c	namespace:Desire_And_Doom
Iso_To_Cart	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^        public static Vector2 Iso_To_Cart(Vector2 iso_coords)$/;"	m	class:Desire_And_Doom.Iso_Tiled_Map
It	Desire_And_Doom/Graphics/Assets.cs	/^        public static Assets It$/;"	p	class:Desire_And_Doom.Assets
It	Desire_And_Doom/Utils/Input.cs	/^        public static Input It {$/;"	p	class:Desire_And_Doom.Input
It	Desire_And_Doom/Utils/Messanger.cs	/^        public static Messanger It$/;"	p	class:Desire_And_Doom.Utils.Messanger
It	Desire_And_Doom/Utils/Timers.cs	/^        public static Timers It { get{$/;"	p	class:Desire_And_Doom.Utils.Timers
Item	Desire_And_Doom/ECS/Component.cs	/^            Item,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Item	Desire_And_Doom/ECS/Components/Item.cs	/^        public Item() : base(Types.Item)$/;"	m	class:Desire_And_Doom.ECS.Item
Item	Desire_And_Doom/ECS/Components/Item.cs	/^    class Item : Component$/;"	c	namespace:Desire_And_Doom.ECS
Item_System	Desire_And_Doom/ECS/Systems/Item_System.cs	/^        public Item_System() : base(Types.Item)$/;"	m	class:Desire_And_Doom.ECS.Systems.Item_System
Item_System	Desire_And_Doom/ECS/Systems/Item_System.cs	/^    class Item_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Key	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^        public Keys Key { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
Key	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^        public Keys Key { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
KeyCharEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class KeyCharEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
KeyCharEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void KeyCharEventHandler (Actor sender, KeyCharEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
KeyCode	Desire_And_Doom/RoutedEvent.cs	/^        public int KeyCode { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.KeyEventArgs
KeyDown	Desire_And_Doom/Actor.cs	/^        public event KeyEventHandler KeyDown$/;"	p	class:MonoGdx.Scene2D.Actor
KeyDown	Desire_And_Doom/Stage.cs	/^        public override bool KeyDown (int keycode)$/;"	m	class:MonoGdx.Scene2D.Stage
KeyDownClass	Desire_And_Doom/Actor.cs	/^        private static void KeyDownClass (Actor sender, KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
KeyDownEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent KeyDownEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
KeyEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class KeyEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
KeyEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void KeyEventHandler (Actor sender, KeyEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
KeyPressed	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyPressed;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyPressed	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyPressed;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyReleased	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyReleased;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyReleased	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyReleased;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyTyped	Desire_And_Doom/Stage.cs	/^        public override bool KeyTyped (char character)$/;"	m	class:MonoGdx.Scene2D.Stage
KeyTyped	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyTyped;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyTyped	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public event EventHandler<KeyboardEventArgs> KeyTyped;$/;"	E	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyTypedEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent KeyTypedEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
KeyUp	Desire_And_Doom/Actor.cs	/^        public event KeyEventHandler KeyUp$/;"	p	class:MonoGdx.Scene2D.Actor
KeyUp	Desire_And_Doom/Stage.cs	/^        public override bool KeyUp (int keycode)$/;"	m	class:MonoGdx.Scene2D.Stage
KeyUpClass	Desire_And_Doom/Actor.cs	/^        private static void KeyUpClass (Actor sender, KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
KeyUpEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent KeyUpEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
Key_State	Desire_And_Doom/Utils/Input.cs	/^    class Key_State$/;"	c	namespace:Desire_And_Doom
Key_Typed	Desire_And_Doom/Utils/Debug_Console.cs	/^        public void Key_Typed(object sender, KeyboardEventArgs args)$/;"	m	class:Desire_And_Doom.Utils.Debug_Console
KeyboardEventArgs	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^        public KeyboardEventArgs(Keys key, KeyboardState keyboardState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
KeyboardEventArgs	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^    public class KeyboardEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardEventArgs	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^        public KeyboardEventArgs(Keys key, KeyboardState keyboardState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
KeyboardEventArgs	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^    public class KeyboardEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardFocusChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class KeyboardFocusChangedEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
KeyboardFocusChangedEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void KeyboardFocusChangedEventHandler (Actor sender, KeyboardFocusChangedEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
KeyboardListener	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public KeyboardListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyboardListener	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public KeyboardListener(KeyboardListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyboardListener	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^    public class KeyboardListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardListener	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public KeyboardListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyboardListener	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public KeyboardListener(KeyboardListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
KeyboardListener	Desire_And_Doom/Utils/KeyboardListener.cs	/^    public class KeyboardListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardListenerSettings	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^        public KeyboardListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
KeyboardListenerSettings	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^    public class KeyboardListenerSettings : InputListenerSettings<KeyboardListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardListenerSettings	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^        public KeyboardListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
KeyboardListenerSettings	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^    public class KeyboardListenerSettings : InputListenerSettings<KeyboardListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
KeyboardModifiers	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^    public enum KeyboardModifiers$/;"	g	namespace:MonoGame.Extended.Input.InputListeners
KeyboardModifiers	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^    public enum KeyboardModifiers$/;"	g	namespace:MonoGame.Extended.Input.InputListeners
Kore_Parser	Desire_And_Doom/Utils/Kore_Parser.cs	/^    class Kore_Parser$/;"	c	namespace:Desire_And_Doom.Utils
LAMBDA	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^            LAMBDA$/;"	e	enum:Desire_And_Doom.ECS.Components.World_Interaction.Update_Type	file:
LEGS	Desire_And_Doom/Items/Equipable.cs	/^            LEGS,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
LUA	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^            LUA,$/;"	e	enum:Desire_And_Doom.ECS.Components.World_Interaction.Update_Type	file:
LastTime	Desire_And_Doom/Graphics/Assets.cs	/^        public DateTime LastTime { get; set; }$/;"	p	class:Desire_And_Doom.LuaTableAsset
Last_Date_Time	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public DateTime Last_Date_Time { get; set; } = DateTime.MaxValue;$/;"	p	class:Desire_And_Doom.ECS.Components.Lua_Function
Layer	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public float    Layer  { get; set; } = 0.5f;$/;"	p	class:Desire_And_Doom.ECS.Sprite
Layer_Offset	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public float    Layer_Offset { get; set; } = 0.0f;$/;"	p	class:Desire_And_Doom.ECS.Sprite
Left	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public enum Render_Spot{ Left, Center, Right };$/;"	e	enum:Desire_And_Doom.ECS.Invatory.Render_Spot	file:
Left	Desire_And_Doom/ECS/Components/Physics.cs	/^            Left = -1, Right = 1$/;"	e	enum:Desire_And_Doom.ECS.Physics.PSide	file:
Left	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 Left$/;"	p	class:Desire_And_Doom.GameCamera
Left	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        Left,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Left	Desire_And_Doom/Utils/MouseButton.cs	/^        Left,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Left_Face_Offset	Desire_And_Doom/Graphics/Animation.cs	/^        public Vector2 Left_Face_Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Graphics.Animation
Left_Hand	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipable Left_Hand  { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Equipment
Legs_Piece	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipable Legs_Piece    { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Equipment
Lerp	Desire_And_Doom/Graphics/Particle.cs	/^        protected float Lerp(float a, float b, float time)  => (1f - time) * a + time * b;$/;"	m	class:Desire_And_Doom.Graphics.Particle
Lerp	Desire_And_Doom/Utils/Math2.cs	/^        public static Color Lerp(Color a, Color b, float t)$/;"	m	class:Desire_And_Doom.Utils.Math2
Lerp	Desire_And_Doom/Utils/Math2.cs	/^        public static float Lerp(float a, float b, float t)$/;"	m	class:Desire_And_Doom.Utils.Math2
Lerp2	Desire_And_Doom/Graphics/Particle.cs	/^        protected float Lerp2(float a, float b, float time) => a + (b - a) * time;$/;"	m	class:Desire_And_Doom.Graphics.Particle
Level_1_Screen	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public Level_1_Screen(Screen_Manager screen_manager, World _world, GameCamera _camera, PenumbraComponent _lighting, Particle_World _particle_world, Physics_Engine _physics_engine, Lua lua, GraphicsDevice device) : base(_world, _camera, _lighting, _particle_world, _physics_engine, lua, device,"Level 1")$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
Level_1_Screen	Desire_And_Doom/Screens/Level_1_Screen.cs	/^    class Level_1_Screen : Game_Screen$/;"	c	namespace:Desire_And_Doom.Screens
Level_Select_Screen	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public Level_Select_Screen(Screen_Manager _manager, PenumbraComponent _penumbra, GameCamera _camera) : base("Level Select")$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
Level_Select_Screen	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^    class Level_Select_Screen : Screen$/;"	c	namespace:Desire_And_Doom.Screens
Life	Desire_And_Doom/Graphics/Particle.cs	/^        public float Life       { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Life_Max	Desire_And_Doom/Graphics/Particle.cs	/^        public float Life_Max   { get; set; } = 10f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Life_Max	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float Life_Max { get; set; } = -1;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Life_Timer	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float Life_Timer { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Light	Desire_And_Doom/ECS/Components/Light_Emitter.cs	/^        public PointLight Light { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Light_Emitter
Light_Emitter	Desire_And_Doom/ECS/Component.cs	/^            Light_Emitter,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Light_Emitter	Desire_And_Doom/ECS/Components/Light_Emitter.cs	/^        public Light_Emitter(PenumbraComponent lighting, float scale = 300) : base(Types.Light_Emitter)$/;"	m	class:Desire_And_Doom.ECS.Light_Emitter
Light_Emitter	Desire_And_Doom/ECS/Components/Light_Emitter.cs	/^    class Light_Emitter : Component$/;"	c	namespace:Desire_And_Doom.ECS
Light_Emitter_System	Desire_And_Doom/ECS/Systems/Light_Emitter_System.cs	/^        public Light_Emitter_System() : base(Component.Types.Body, Component.Types.Light_Emitter)$/;"	m	class:Desire_And_Doom.ECS.Systems.Light_Emitter_System
Light_Emitter_System	Desire_And_Doom/ECS/Systems/Light_Emitter_System.cs	/^    class Light_Emitter_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Line	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^    class Line$/;"	c	namespace:Desire_And_Doom.ECS
Line_Intersection	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public bool Line_Intersection(Vector2 a1, Vector2 a2, Vector2 b1, Vector2 b2)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Listeners	Desire_And_Doom/Utils/InputListenerComponent.cs	/^        public IList<InputListener> Listeners => _listeners;$/;"	f	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
Listeners	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^        public IList<InputListener> Listeners => _listeners;$/;"	f	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
Load	Desire_And_Doom/ECS/System.cs	/^        public virtual void Load(Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
Load	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        public override void Load(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.AI_System
Load	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^        public override void Load(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Invatory_System
Load	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public override void Load(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Load	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void Load(Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Load	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        public override void Load(params string []args)$/;"	m	class:Desire_And_Doom.Screens.Intro_Logos_Screen
Load	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public override void Load(params string []args)$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
Load	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public override void Load(params string []args)$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
Load	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public override void Load(params string []args)$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
Load	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void Load(params string[] args) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
Load	Desire_And_Doom/Screens/boss_room_1.cs	/^        public override void Load(params string[] args)$/;"	m	class:Desire_And_Doom.Screens.Boss_Room_1
LoadContent	Desire_And_Doom/DesireAndDoom.cs	/^        protected override void LoadContent()$/;"	m	class:Desire_And_Doom.DesireAndDoom
LoadContent	Desire_Tiles/Editor.cs	/^        protected override void LoadContent()$/;"	m	class:Desire_Tiles.Editor
LoadContent	Entity_Editor/Game1.cs	/^        protected override void LoadContent()$/;"	m	class:Entity_Editor.Game1
Load_Ai	Desire_And_Doom/Content/Lua/Boss_1_Ai.lua	/^function Load_Ai(entity, engine)$/;"	f
Load_Ai	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Boss_1_Ai.lua	/^function Load_Ai(entity, engine)$/;"	f
Load_Ai	Lua_World/Boss_1_Ai.lua	/^function Load_Ai(entity, engine)$/;"	f
Load_Animations_From_Lua	Desire_And_Doom/Graphics/Assets.cs	/^        public void Load_Animations_From_Lua(string file)$/;"	m	class:Desire_And_Doom.Assets
Load_Grendle	Desire_And_Doom/Content/Lua/Grendle_AI.lua	/^function Load_Grendle(entity, engine)$/;"	f
Load_Grendle	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Grendle_AI.lua	/^function Load_Grendle(entity, engine)$/;"	f
Load_Grendle	Lua_World/Grendle_AI.lua	/^function Load_Grendle(entity, engine)$/;"	f
Load_Map	Desire_And_Doom/Screens/Game_Screen.cs	/^        public bool Load_Map(string id, float x = -1, float y = -1)$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
Load_Texture	Desire_And_Doom/Graphics/Assets.cs	/^        public Texture2D Load_Texture(string name, string id)$/;"	m	class:Desire_And_Doom.Assets
Loaded	Desire_And_Doom/ECS/Entity.cs	/^        public bool Loaded { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Entity
LocalToAscendantCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 LocalToAscendantCoordinates (Actor ascendant, Vector2 localCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
LocalToDescendantCoordinates	Desire_And_Doom/Group.cs	/^        public Vector2 LocalToDescendantCoordinates (Actor descendant, Vector2 localCoords)$/;"	m	class:MonoGdx.Scene2D.Group
LocalToParentCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 LocalToParentCoordinates (Vector2 localCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
LocalToStageCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 LocalToStageCoordinates (Vector2 localCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
Location	Desire_And_Doom/Utils/RectangleF.cs	/^        public Vector2 Location$/;"	p	class:Desire_And_Doom.Utils.RectangleF
Logo_Position	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Vector2 Logo_Position;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
Logo_Size	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        int Logo_Size = 320;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
Long_Sward_Skill	Desire_And_Doom/ECS/Components/Character.cs	/^        public float Long_Sward_Skill   { get; set; } = 0.5f; \/\/ half the swords attack$/;"	p	class:Desire_And_Doom.ECS.Components.Character
LookAt	Desire_And_Doom/Graphics/Camera.cs	/^        public void LookAt(Vector2 position)$/;"	m	class:Desire_And_Doom.Graphics.Camera
LostKeyboardFocus	Desire_And_Doom/Actor.cs	/^        public event KeyboardFocusChangedEventHandler LostKeyboardFocus$/;"	p	class:MonoGdx.Scene2D.Actor
LostKeyboardFocusClass	Desire_And_Doom/Actor.cs	/^        private static void LostKeyboardFocusClass (Actor sender, KeyboardFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
LostKeyboardFocusEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent LostKeyboardFocusEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
LostScrollFocus	Desire_And_Doom/Actor.cs	/^        public event ScrollFocusChangedEventHandler LostScrollFocus$/;"	p	class:MonoGdx.Scene2D.Actor
LostScrollFocusClass	Desire_And_Doom/Actor.cs	/^        private static void LostScrollFocusClass (Actor sender, ScrollFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
LostScrollFocusEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent LostScrollFocusEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
LostTouchCapture	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler LostTouchCapture$/;"	p	class:MonoGdx.Scene2D.Actor
LostTouchCaptureClass	Desire_And_Doom/Actor.cs	/^        private static void LostTouchCaptureClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
LostTouchCaptureEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent LostTouchCaptureEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
LuaTableAsset	Desire_And_Doom/Graphics/Assets.cs	/^    class LuaTableAsset$/;"	c	namespace:Desire_And_Doom
Lua_Commander	Desire_And_Doom/Utils/Debug_Console.cs	/^        public Lua_Commander()$/;"	m	class:Desire_And_Doom.Utils.Lua_Commander
Lua_Commander	Desire_And_Doom/Utils/Debug_Console.cs	/^    class Lua_Commander$/;"	c	namespace:Desire_And_Doom.Utils
Lua_Function	Desire_And_Doom/ECS/Component.cs	/^            Lua_Function,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Lua_Function	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public Lua_Function(LuaFunction _function, string file_name = "") : base(Types.Lua_Function)$/;"	m	class:Desire_And_Doom.ECS.Components.Lua_Function
Lua_Function	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^    class Lua_Function : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Lua_Function_System	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Lua_Function_System(Lua lua, GameCamera _camera) : base(Types.Lua_Function)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Lua_Function_System	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^    class Lua_Function_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Lua_Update	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public LuaFunction Lua_Update               { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
MARGIN	Desire_And_Doom/Gui/UI_Manager.cs	/^        public static readonly float MARGIN = 32;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager
Main	Desire_And_Doom/Program.cs	/^        static void Main()$/;"	m	class:Desire_And_Doom.Program	file:
Main	Desire_Tiles/Program.cs	/^        static void Main()$/;"	m	class:Desire_Tiles.Program	file:
Main	Entity_Editor/Program.cs	/^        static void Main()$/;"	m	class:Entity_Editor.Program	file:
Main	Entity_Editor/src/sample/Main.java	/^public class Main extends Application {$/;"	c
Map	Desire_And_Doom/Screens/Game_Screen.cs	/^        public Tiled_Map                Map { get; private set; }$/;"	p	class:Desire_And_Doom.Screens.Game_Screen
Map_Height_In_Pixels	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public int Map_Height_In_Pixels { get; private set; } = 0;$/;"	p	class:Desire_And_Doom.Tiled_Map
Mass	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Mass { get; set; } = 0.2f;$/;"	p	class:Desire_And_Doom.ECS.Physics
Math2	Desire_And_Doom/Utils/Math2.cs	/^    class Math2$/;"	c	namespace:Desire_And_Doom.Utils
Max_Dash_Time	Desire_And_Doom/ECS/Components/Player.cs	/^        public float Max_Dash_Time { get => 1f; }$/;"	p	class:Desire_And_Doom.Player
Max_Shield_Timer	Desire_And_Doom/ECS/Components/Health.cs	/^        public float Max_Shield_Timer { get; set; } = 1f;$/;"	p	class:Desire_And_Doom.ECS.Components.Health
MaximumZoom	Desire_And_Doom/Graphics/Camera.cs	/^        public float MaximumZoom$/;"	p	class:Desire_And_Doom.Graphics.Camera
Mech_AI 	Desire_And_Doom/Content/Lua/AI.lua	/^	Mech_AI = function(entity, engine)$/;"	f
Mech_AI 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^	Mech_AI = function(entity, engine)$/;"	f
Menu	Desire_Tiles/Top_Menu.cs	/^        HorizontalMenu Menu { get; set; }$/;"	p	class:Desire_Tiles.Top_Menu
MenuActions	Desire_And_Doom/Gui/UI_Manager.cs	/^        public Dictionary<string, Action> MenuActions;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager
Menu_Screen	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public Menu_Screen(Screen_Manager _manager, PenumbraComponent _penumbra, GameCamera _camera) : base("Menu")$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
Menu_Screen	Desire_And_Doom/Screens/Menu_Screen.cs	/^    class Menu_Screen : Screen$/;"	c	namespace:Desire_And_Doom.Screens
Messanger	Desire_And_Doom/Utils/Messanger.cs	/^        private Messanger() {$/;"	m	class:Desire_And_Doom.Utils.Messanger	file:
Messanger	Desire_And_Doom/Utils/Messanger.cs	/^    class Messanger$/;"	c	namespace:Desire_And_Doom.Utils
Middle	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        Middle,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Middle	Desire_And_Doom/Utils/MouseButton.cs	/^        Middle,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
MinimumZoom	Desire_And_Doom/Graphics/Camera.cs	/^        public float MinimumZoom$/;"	p	class:Desire_And_Doom.Graphics.Camera
Minimum_Translation_Vector	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public Vector2 Minimum_Translation_Vector { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.ECS.Polygon_Collision_Result
Modifiers	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^        public KeyboardModifiers Modifiers { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
Modifiers	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^        public KeyboardModifiers Modifiers { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs
Money	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public int Money { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Invatory
MonitorHeight	Desire_And_Doom/DesireAndDoom.cs	/^        public static int MonitorHeight { get => GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height; }$/;"	p	class:Desire_And_Doom.DesireAndDoom
MonitorSize	Desire_And_Doom/DesireAndDoom.cs	/^        public static (int, int) MonitorSize { get => (MonitorWidth, MonitorHeight); }$/;"	p	class:Desire_And_Doom.DesireAndDoom
MonitorWidth	Desire_And_Doom/DesireAndDoom.cs	/^        public static int MonitorWidth { get => GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width; }$/;"	p	class:Desire_And_Doom.DesireAndDoom
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/GamePadListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/InputListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/InputListenerComponent.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/InputListenerSettings.cs	/^﻿namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/InputListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/InputListenerSettings.cs	/^﻿namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/KeyboardListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/MouseButton.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/MouseEventArgs.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/MouseListener.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.Input.InputListeners	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^namespace MonoGame.Extended.Input.InputListeners$/;"	n
MonoGame.Extended.InputListeners	Desire_And_Doom/Utils/IInputService.cs	/^namespace MonoGame.Extended.InputListeners$/;"	n
MonoGame.Extended.InputListeners	Desire_And_Doom/Utils/Input_Handlers/IInputService.cs	/^﻿namespace MonoGame.Extended.InputListeners$/;"	n
MonoGameLogo	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Texture2D MonoGameLogo;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
MonoGdx.Scene2D	Desire_And_Doom/Actor.cs	/^namespace MonoGdx.Scene2D$/;"	n
MonoGdx.Scene2D	Desire_And_Doom/Group.cs	/^namespace MonoGdx.Scene2D$/;"	n
MonoGdx.Scene2D	Desire_And_Doom/RoutedEvent.cs	/^namespace MonoGdx.Scene2D$/;"	n
MonoGdx.Scene2D	Desire_And_Doom/SceneAction.cs	/^namespace MonoGdx.Scene2D$/;"	n
MonoGdx.Scene2D	Desire_And_Doom/Stage.cs	/^namespace MonoGdx.Scene2D$/;"	n
MonoLogoAlpha	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        float MonoLogoAlpha = 1f;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
MonoLogoY	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        float MonoLogoY = DesireAndDoom.ScreenHeight;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
Monogui	Desire_And_Doom/Graphics/Monogui.cs	/^        public Monogui()$/;"	m	class:Desire_And_Doom.Monogui
Monogui	Desire_And_Doom/Graphics/Monogui.cs	/^    class Monogui$/;"	c	namespace:Desire_And_Doom
MouseButton	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^    public enum MouseButton$/;"	g	namespace:MonoGame.Extended.Input.InputListeners
MouseButton	Desire_And_Doom/Utils/MouseButton.cs	/^    public enum MouseButton$/;"	g	namespace:MonoGame.Extended.Input.InputListeners
MouseClicked	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseClicked;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseClicked	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseClicked;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDoubleClicked	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDoubleClicked;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDoubleClicked	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDoubleClicked;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDown	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDown;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDown	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDown;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDrag	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDrag;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDrag	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDrag;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDragEnd	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDragEnd;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDragEnd	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDragEnd;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDragStart	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDragStart;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseDragStart	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseDragStart;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class MouseEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
MouseEventArgs	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public MouseEventArgs(ViewportAdapter viewportAdapter, TimeSpan time, MouseState previousState,$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
MouseEventArgs	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^    public class MouseEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseEventArgs	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public MouseEventArgs(ViewportAdapter viewportAdapter, TimeSpan time, MouseState previousState,$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
MouseEventArgs	Desire_And_Doom/Utils/MouseEventArgs.cs	/^    public class MouseEventArgs : EventArgs$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void MouseEventHandler (Actor sender, MouseEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
MouseListener	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public MouseListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public MouseListener(MouseListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public MouseListener(ViewportAdapter viewportAdapter)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^    public class MouseListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseListener	Desire_And_Doom/Utils/MouseListener.cs	/^        public MouseListener()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/MouseListener.cs	/^        public MouseListener(MouseListenerSettings settings)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/MouseListener.cs	/^        public MouseListener(ViewportAdapter viewportAdapter)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseListener	Desire_And_Doom/Utils/MouseListener.cs	/^    public class MouseListener : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseListenerSettings	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^        public MouseListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
MouseListenerSettings	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^    public class MouseListenerSettings : InputListenerSettings<MouseListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseListenerSettings	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^        public MouseListenerSettings()$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
MouseListenerSettings	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^    public class MouseListenerSettings : InputListenerSettings<MouseListener>$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
MouseMove	Desire_And_Doom/Actor.cs	/^        public event MouseEventHandler MouseMove$/;"	p	class:MonoGdx.Scene2D.Actor
MouseMoveClass	Desire_And_Doom/Actor.cs	/^        private static void MouseMoveClass (Actor sender, MouseEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
MouseMoveEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent MouseMoveEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
MouseMoved	Desire_And_Doom/Stage.cs	/^        public override bool MouseMoved (int screenX, int screenY)$/;"	m	class:MonoGdx.Scene2D.Stage
MouseMoved	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseMoved	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseUp	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseUp;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseUp	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseUp;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseWheelMoved	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseWheelMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
MouseWheelMoved	Desire_And_Doom/Utils/MouseListener.cs	/^        public event EventHandler<MouseEventArgs> MouseWheelMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.MouseListener
Mouse_Drag	Desire_And_Doom/Utils/Input.cs	/^        public Vector2 Mouse_Drag() { return mouse_drag; }$/;"	m	class:Desire_And_Doom.Input
Mouse_Left	Desire_And_Doom/Utils/Input.cs	/^        public bool Mouse_Left() {$/;"	m	class:Desire_And_Doom.Input
Mouse_Left_Pressed	Desire_And_Doom/Utils/Input.cs	/^        public bool Mouse_Left_Pressed()$/;"	m	class:Desire_And_Doom.Input
Mouse_Position	Desire_And_Doom/Utils/Input.cs	/^        public Vector2 Mouse_Position() {$/;"	m	class:Desire_And_Doom.Input
Mouse_Right	Desire_And_Doom/Utils/Input.cs	/^        public bool Mouse_Right() {$/;"	m	class:Desire_And_Doom.Input
Move	Desire_And_Doom/Graphics/Camera.cs	/^        public void Move(Vector2 direction)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Move	Desire_And_Doom/Graphics/GameCamera.cs	/^        public void Move(Vector2 by)$/;"	m	class:Desire_And_Doom.GameCamera
Move_In_Direction	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Move_In_Direction() =>$/;"	m	class:Desire_And_Doom.Graphics.Particle
Multipart_Animation	Desire_And_Doom/ECS/Component.cs	/^            Multipart_Animation,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Multipart_Animation	Desire_And_Doom/ECS/Components/Multipart_Animation.cs	/^        public Multipart_Animation() : base(Types.Multipart_Animation)$/;"	m	class:Desire_And_Doom.ECS.Components.Multipart_Animation
Multipart_Animation	Desire_And_Doom/ECS/Components/Multipart_Animation.cs	/^    class Multipart_Animation : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Multipart_Animation_System	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^        public Multipart_Animation_System() : base()$/;"	m	class:Desire_And_Doom.ECS.Systems.Multipart_Animation_System
Multipart_Animation_System	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^    class Multipart_Animation_System : Sprite_Renderer_System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
NONE	Desire_And_Doom/Items/Equipable.cs	/^            NONE,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
NPC_TALKING_DISTANCE	Desire_And_Doom/Utils/Constants.cs	/^        public static readonly float NPC_TALKING_DISTANCE = 40.0f;$/;"	f	class:Desire_And_Doom.Utils.Constants
NUM_ACTION_STATES	Desire_And_Doom/ECS/Components/Player.cs	/^            NUM_ACTION_STATES$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
Name	Desire_And_Doom/Actor.cs	/^        public string Name { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Name	Desire_And_Doom/ECS/Components/Character.cs	/^        public string Name  { get; set; } = "Unnamed";$/;"	p	class:Desire_And_Doom.ECS.Components.Character
Named_Action_List	Desire_And_Doom/Utils/Named_Action_List.cs	/^        public Named_Action_List(Dictionary<string, Action> actions) {$/;"	m	class:Desire_And_Doom.Utils.Named_Action_List
Named_Action_List	Desire_And_Doom/Utils/Named_Action_List.cs	/^    class Named_Action_List$/;"	c	namespace:Desire_And_Doom.Utils
Names	Desire_And_Doom/Utils/Named_Action_List.cs	/^        public string[] Names {$/;"	p	class:Desire_And_Doom.Utils.Named_Action_List
NewFocus	Desire_And_Doom/RoutedEvent.cs	/^        public Actor NewFocus { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.KeyboardFocusChangedEventArgs
NewFocus	Desire_And_Doom/RoutedEvent.cs	/^        public Actor NewFocus { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.ScrollFocusChangedEventArgs
NewValue	Desire_And_Doom/RoutedEvent.cs	/^        public T NewValue { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedPropertyChangedEventArgs
New_Timer	Desire_And_Doom/Utils/Timers.cs	/^        public void New_Timer(Func<bool> _callback, float time)$/;"	m	class:Desire_And_Doom.Utils.Timers
Next	Desire_And_Doom/Utils/Tasker.cs	/^        public void Next()$/;"	m	class:Desire_And_Doom.Utils.Tasker
NextDialogText	Desire_And_Doom/Graphics/Dialog.cs	/^        public int NextDialogText { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Graphics.Dialog_Option
NextDialogText	Desire_And_Doom/Graphics/Dialog.cs	/^        public int NextDialogText { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Graphics.Dialog_Text
None	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^        None = 0$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
None	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        None,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
None	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^        None = 0$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
None	Desire_And_Doom/Utils/MouseButton.cs	/^        None,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Npc	Desire_And_Doom/ECS/Component.cs	/^            Npc,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Npc	Desire_And_Doom/ECS/Components/Npc.cs	/^        public Npc(LuaTable dialog_table) : base(Types.Npc)$/;"	m	class:Desire_And_Doom.ECS.Npc
Npc	Desire_And_Doom/ECS/Components/Npc.cs	/^    class Npc : Component$/;"	c	namespace:Desire_And_Doom.ECS
Npc_System	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        public Npc_System(Game game, GraphicsDeviceManager graphics, UI_Manager invatory_manager, Dialog_Box dialog_box) : base(Component.Types.Npc, Component.Types.Body)$/;"	m	class:Desire_And_Doom.ECS.Npc_System
Npc_System	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^    class Npc_System : System$/;"	c	namespace:Desire_And_Doom.ECS
Num_Of_Types	Desire_And_Doom/ECS/Component.cs	/^            Num_Of_Types,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
ONCE_BACKWARD	Desire_And_Doom/Graphics/Animation.cs	/^            ONCE_BACKWARD,$/;"	e	enum:Desire_And_Doom.Graphics.Animation.Playback_Types	file:
ONCE_FORWARD	Desire_And_Doom/Graphics/Animation.cs	/^            ONCE_FORWARD,$/;"	e	enum:Desire_And_Doom.Graphics.Animation.Playback_Types	file:
Offset	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public Vector2 Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Offset	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public Vector2 Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.ECS.Invatory
Offset	Desire_And_Doom/ECS/Components/Light_Emitter.cs	/^        public Vector2 Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.ECS.Light_Emitter
Offset	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Vector2  Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.ECS.Sprite
Offset	Desire_And_Doom/Graphics/Animation.cs	/^        public Vector2 Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Graphics.Animation
Offset	Desire_And_Doom/Graphics/Animation_Frame.cs	/^        public Vector2 Offset { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Animation_Frame
Offset	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public Vector2 Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Tiled_Map
Offset	Desire_And_Doom/Gui/UI_Manager.cs	/^        public Vector2 Offset { get; private set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Gui.UI_Manager
Offset_X	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public float Offset_X { get => Offset.X; }$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Offset_X	Desire_And_Doom/Graphics/Animation.cs	/^        public float Offset_X {$/;"	p	class:Desire_And_Doom.Graphics.Animation
Offset_Y	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public float Offset_Y { get => Offset.Y; }$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
Offset_Y	Desire_And_Doom/Graphics/Animation.cs	/^        public float Offset_Y {$/;"	p	class:Desire_And_Doom.Graphics.Animation
OldFocus	Desire_And_Doom/RoutedEvent.cs	/^        public Actor OldFocus { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.KeyboardFocusChangedEventArgs
OldFocus	Desire_And_Doom/RoutedEvent.cs	/^        public Actor OldFocus { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.ScrollFocusChangedEventArgs
OldValue	Desire_And_Doom/RoutedEvent.cs	/^        public T OldValue { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedPropertyChangedEventArgs
OnGotKeyboardFocus	Desire_And_Doom/Actor.cs	/^        protected virtual void OnGotKeyboardFocus (KeyboardFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnGotScrollFocus	Desire_And_Doom/Actor.cs	/^        protected virtual void OnGotScrollFocus (ScrollFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnGotTouchCapture	Desire_And_Doom/Actor.cs	/^        protected virtual void OnGotTouchCapture (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnKeyDown	Desire_And_Doom/Actor.cs	/^        protected virtual void OnKeyDown (KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnKeyUp	Desire_And_Doom/Actor.cs	/^        protected virtual void OnKeyUp (KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnLostKeyboardFocus	Desire_And_Doom/Actor.cs	/^        protected virtual void OnLostKeyboardFocus (KeyboardFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnLostScrollFocus	Desire_And_Doom/Actor.cs	/^        protected virtual void OnLostScrollFocus (ScrollFocusChangedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnLostTouchCapture	Desire_And_Doom/Actor.cs	/^        protected virtual void OnLostTouchCapture (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnMouseMove	Desire_And_Doom/Actor.cs	/^        protected virtual void OnMouseMove (MouseEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewKeyDown	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewKeyDown (KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewKeyUp	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewKeyUp (KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewMouseMove	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewMouseMove (MouseEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewScroll	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewScroll (ScrollEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewTouchDown	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewTouchDown (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewTouchDrag	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewTouchDrag (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnPreviewTouchUp	Desire_And_Doom/Actor.cs	/^        protected virtual void OnPreviewTouchUp (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnScroll	Desire_And_Doom/Actor.cs	/^        protected virtual void OnScroll (ScrollEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnTouchDown	Desire_And_Doom/Actor.cs	/^        protected virtual void OnTouchDown (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnTouchDrag	Desire_And_Doom/Actor.cs	/^        protected virtual void OnTouchDrag (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnTouchEnter	Desire_And_Doom/Actor.cs	/^        protected virtual void OnTouchEnter (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnTouchLeave	Desire_And_Doom/Actor.cs	/^        protected virtual void OnTouchLeave (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
OnTouchUp	Desire_And_Doom/Actor.cs	/^        protected virtual void OnTouchUp (TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
Open	Desire_And_Doom/Utils/Debug_Console.cs	/^        public static bool Open { get; private set; } = false;$/;"	p	class:Desire_And_Doom.Utils.Debug_Console
Origin	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 Origin { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Camera
Origin	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 Origin { get => camera.Origin; set { camera.Origin = value; } }$/;"	p	class:Desire_And_Doom.GameCamera
OriginX	Desire_And_Doom/Actor.cs	/^        public float OriginX { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
OriginY	Desire_And_Doom/Actor.cs	/^        public float OriginY { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
OriginalSource	Desire_And_Doom/RoutedEvent.cs	/^        public Actor OriginalSource { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
Other	Desire_And_Doom/ECS/Components/Physics.cs	/^        public Entity Other { get; set; } = null;$/;"	p	class:Desire_And_Doom.ECS.Physics
OwnerType	Desire_And_Doom/RoutedEvent.cs	/^        public Type OwnerType { get; private set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEvent
PAUSED	Desire_And_Doom/DesireAndDoom.cs	/^            PAUSED,$/;"	e	enum:Desire_And_Doom.DesireAndDoom.State	file:
PLAYING	Desire_And_Doom/DesireAndDoom.cs	/^            PLAYING,$/;"	e	enum:Desire_And_Doom.DesireAndDoom.State	file:
PSide	Desire_And_Doom/ECS/Components/Physics.cs	/^        public enum PSide$/;"	g	class:Desire_And_Doom.ECS.Physics
PType	Desire_And_Doom/ECS/Components/Physics.cs	/^        public enum PType$/;"	g	class:Desire_And_Doom.ECS.Physics
Parent	Desire_And_Doom/Actor.cs	/^        public virtual Group Parent { get; protected internal set; }$/;"	p	class:MonoGdx.Scene2D.Actor
ParentToLocalCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 ParentToLocalCoordinates (Vector2 parentCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
Particle	Desire_And_Doom/Graphics/Particle.cs	/^        public Particle()$/;"	m	class:Desire_And_Doom.Graphics.Particle
Particle	Desire_And_Doom/Graphics/Particle.cs	/^    abstract class Particle$/;"	c	namespace:Desire_And_Doom.Graphics
Particle_Emitter	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public Particle_Emitter(Vector2 _position, bool spawn_right_off = false)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Particle_Emitter	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^    abstract class Particle_Emitter$/;"	c	namespace:Desire_And_Doom.Graphics
Particle_Emitter_System	Desire_And_Doom/ECS/Systems/Particle_Emitter_System.cs	/^        public Particle_Emitter_System() : base(Types.Body, Types.Entity_Particle_Emitter)$/;"	m	class:Desire_And_Doom.ECS.Systems.Particle_Emitter_System
Particle_Emitter_System	Desire_And_Doom/ECS/Systems/Particle_Emitter_System.cs	/^    class Particle_Emitter_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Particle_World	Desire_And_Doom/Graphics/Particle_World.cs	/^        public Particle_World()$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Particle_World	Desire_And_Doom/Graphics/Particle_World.cs	/^    class Particle_World$/;"	c	namespace:Desire_And_Doom.Graphics
Path	Desire_And_Doom/Graphics/Assets.cs	/^        public string Path { get; set; } = "";$/;"	p	class:Desire_And_Doom.LuaTableAsset
Pause_Menu	Desire_And_Doom/Gui/Pause_Menu.cs	/^        public Pause_Menu(Screen_Manager screen_manager, GameCamera _camera)$/;"	m	class:Desire_And_Doom.Gui.Pause_Menu
Pause_Menu	Desire_And_Doom/Gui/Pause_Menu.cs	/^    class Pause_Menu$/;"	c	namespace:Desire_And_Doom.Gui
Performed_Combo	Desire_And_Doom/ECS/Components/Player.cs	/^        public bool Performed_Combo = true;$/;"	f	class:Desire_And_Doom.Player
Persistant	Desire_And_Doom/ECS/Entity.cs	/^        public bool Persistant { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Entity
Physics	Desire_And_Doom/ECS/Component.cs	/^            Physics,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Physics	Desire_And_Doom/ECS/Components/Physics.cs	/^        public Physics(Vector2 _velocity, PType _physics_type = PType.STATIC) : base(Types.Physics)$/;"	m	class:Desire_And_Doom.ECS.Physics
Physics	Desire_And_Doom/ECS/Components/Physics.cs	/^    class Physics : Component$/;"	c	namespace:Desire_And_Doom.ECS
Physics_Engine	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public Physics_Engine(World world) : base(Types.Body, Types.Physics)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Physics_Engine	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^    class Physics_Engine : System$/;"	c	namespace:Desire_And_Doom.ECS
Physics_Type	Desire_And_Doom/ECS/Components/Physics.cs	/^        public PType Physics_Type { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Physics
PlaceInNode	Desire_And_Doom/RoutedEvent.cs	/^        private static ClassHandlerNode PlaceInNode (ClassHandlerNode node, Type classType, RoutedEventHandlerInfo handler)$/;"	m	class:MonoGdx.Scene2D.EventManager	file:
Playback_Type	Desire_And_Doom/Graphics/Animation.cs	/^        public Playback_Types Playback_Type { get; set; } = Playback_Types.FORWARD;$/;"	p	class:Desire_And_Doom.Graphics.Animation
Playback_Types	Desire_And_Doom/Graphics/Animation.cs	/^        public enum Playback_Types$/;"	g	class:Desire_And_Doom.Graphics.Animation
Player	Desire_And_Doom/ECS/Component.cs	/^            Player,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Player	Desire_And_Doom/ECS/Components/Player.cs	/^        public Player() : base(Types.Player)$/;"	m	class:Desire_And_Doom.Player
Player	Desire_And_Doom/ECS/Components/Player.cs	/^    class Player : Component$/;"	c	namespace:Desire_And_Doom
Player	Desire_And_Doom/Gui/UI_Manager.cs	/^        public Entity Player { get; set; } = null;$/;"	p	class:Desire_And_Doom.Gui.UI_Manager
PlayerIndex	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public PlayerIndex PlayerIndex { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
PlayerIndex	Desire_And_Doom/Utils/GamePadListener.cs	/^        public PlayerIndex PlayerIndex { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
PlayerIndex	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public PlayerIndex PlayerIndex { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
PlayerIndex	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public PlayerIndex PlayerIndex { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
PlayerIndex	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public PlayerIndex PlayerIndex { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
PlayerIndex	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public PlayerIndex PlayerIndex { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
Player_Controller_System	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public Player_Controller_System(GameCamera _camera, Particle_World particle_world, Screen_Manager screen) : base(Types.Body, Types.Player, Types.Physics)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Player_Controller_System	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^    class Player_Controller_System : System$/;"	c	namespace:Desire_And_Doom.ECS
Playing	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public bool Playing { get; set; } = true;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Playing_Animation	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public bool Playing_Animation{get;set;} = false;$/;"	p	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
PointToScreen	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public Point PointToScreen(Point point)$/;"	m	class:Desire_And_Doom.Graphics.ViewportAdapter
PointToScreen	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public virtual Point PointToScreen(int x, int y)$/;"	m	class:Desire_And_Doom.Graphics.ViewportAdapter
Pointer	Desire_And_Doom/RoutedEvent.cs	/^        public int Pointer { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.MouseEventArgs
Pointer	Desire_And_Doom/RoutedEvent.cs	/^        public int Pointer { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.TouchEventArgs
Points	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public List<Vector2> Points { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Polygon
Polygon	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^    class Polygon$/;"	c	namespace:Desire_And_Doom.ECS
Polygon_Collision_Result	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^    class Polygon_Collision_Result$/;"	c	namespace:Desire_And_Doom.ECS
Pool	Desire_And_Doom/SceneAction.cs	/^        public Pool Pool$/;"	p	class:MonoGdx.Scene2D.SceneAction
Position	Desire_And_Doom/ECS/Components/Body.cs	/^        public Vector2 Position { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Body
Position	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public Vector2 Position { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Polygon
Position	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 Position { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Camera
Position	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 Position { get => camera.Position; set { camera.Position = value; } }$/;"	p	class:Desire_And_Doom.GameCamera
Position	Desire_And_Doom/Graphics/Particle.cs	/^        public Vector2 Position { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Position	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public Vector2 Position { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Position	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public Vector2 Position { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Billboard
Position	Desire_And_Doom/Interfaces/IMovable.cs	/^	    Vector2 Position { get; set; }$/;"	p	interface:Desire_And_Doom.Interfaces.IMovable
Position	Desire_And_Doom/Interfaces/IRectangle.cs	/^        Vector2 Position { get; set; }$/;"	p	interface:Desire_And_Doom.Interfaces.IRectangle
Position	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public Point Position { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Position	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public Point Position { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
PreDraw	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public void PreDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Tiled_Map
PreDraw	Desire_And_Doom/Screens/Game_Screen.cs	/^        public override void PreDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
PreDraw	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void PreDraw(SpriteBatch batch) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
PreDraw	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void PreDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
PreviewKeyDown	Desire_And_Doom/Actor.cs	/^        public event KeyEventHandler PreviewKeyDown$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewKeyDownClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewKeyDownClass (Actor sender, KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewKeyDownEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewKeyDownEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewKeyTypedEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewKeyTypedEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewKeyUp	Desire_And_Doom/Actor.cs	/^        public event KeyEventHandler PreviewKeyUp$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewKeyUpClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewKeyUpClass (Actor sender, KeyEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewKeyUpEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewKeyUpEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewMouseMove	Desire_And_Doom/Actor.cs	/^        public event MouseEventHandler PreviewMouseMove$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewMouseMoveClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewMouseMoveClass (Actor sender, MouseEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewMouseMoveEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewMouseMoveEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewScroll	Desire_And_Doom/Actor.cs	/^        public event ScrollEventHandler PreviewScroll$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewScrollClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewScrollClass (Actor sender, ScrollEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewScrollEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewScrollEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewTouchDown	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler PreviewTouchDown$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewTouchDownClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewTouchDownClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewTouchDownEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewTouchDownEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewTouchDrag	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler PreviewTouchDrag$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewTouchDragClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewTouchDragClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewTouchDragEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewTouchDragEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviewTouchUp	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler PreviewTouchUp$/;"	p	class:MonoGdx.Scene2D.Actor
PreviewTouchUpClass	Desire_And_Doom/Actor.cs	/^        private static void PreviewTouchUpClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
PreviewTouchUpEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent PreviewTouchUpEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
PreviousState	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public GamePadState PreviousState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
PreviousState	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public GamePadState PreviousState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
PreviousState	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public MouseState PreviousState { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
PreviousState	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public MouseState PreviousState { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
PrimitivesBatch	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        public PrimitivesBatch(SpriteBatch _batch, GraphicsDevice _device)$/;"	m	class:Desire_And_Doom.Graphics.PrimitivesBatch
PrimitivesBatch	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^    class PrimitivesBatch$/;"	c	namespace:Desire_And_Doom.Graphics
Print	Desire_And_Doom/Group.cs	/^        private void Print (string indent)$/;"	m	class:MonoGdx.Scene2D.Group	file:
Print	Desire_And_Doom/Group.cs	/^        public void Print ()$/;"	m	class:MonoGdx.Scene2D.Group
Program	Desire_And_Doom/Program.cs	/^    public static class Program$/;"	c	namespace:Desire_And_Doom
Program	Desire_Tiles/Program.cs	/^    public static class Program$/;"	c	namespace:Desire_Tiles
Program	Entity_Editor/Program.cs	/^    public static class Program$/;"	c	namespace:Entity_Editor
Project_Polygon	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public void Project_Polygon(Vector2 axis, Polygon polygon, ref float min, ref float max)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Push	Desire_And_Doom/Utils/Messanger.cs	/^        public void Push(string m)$/;"	m	class:Desire_And_Doom.Utils.Messanger
QUARTER	Desire_And_Doom/Utils/Debug_Console.cs	/^            QUARTER$/;"	e	enum:Desire_And_Doom.Utils.Debug_Console.State	file:
Quad	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Rectangle Quad       { get; protected set; }$/;"	p	class:Desire_And_Doom.ECS.Sprite
Quit	Desire_And_Doom/DesireAndDoom.cs	/^        public void Quit()$/;"	m	class:Desire_And_Doom.DesireAndDoom
RUNNING	Desire_And_Doom/ECS/Components/Player.cs	/^            RUNNING,$/;"	e	enum:Desire_And_Doom.Player.Action_State	file:
Rad_To_Deg	Desire_And_Doom/ECS/Components/Physics.cs	/^        public static float Rad_To_Deg(float rad) {$/;"	m	class:Desire_And_Doom.ECS.Physics
RaiseButtonDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void RaiseButtonDown(Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
RaiseButtonDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void RaiseButtonDown(Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
RaiseButtonUp	Desire_And_Doom/Utils/GamePadListener.cs	/^        private void RaiseButtonUp(Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
RaiseButtonUp	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private void RaiseButtonUp(Buttons button)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
RaiseEvent	Desire_And_Doom/Actor.cs	/^        public bool RaiseEvent (RoutedEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor
RaisePressedEvents	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private void RaisePressedEvents(GameTime gameTime, KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
RaisePressedEvents	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private void RaisePressedEvents(GameTime gameTime, KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
RaiseReleasedEvents	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private void RaiseReleasedEvents(KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
RaiseReleasedEvents	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private void RaiseReleasedEvents(KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
RaiseRepeatEvents	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private void RaiseRepeatEvents(GameTime gameTime, KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
RaiseRepeatEvents	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private void RaiseRepeatEvents(GameTime gameTime, KeyboardState currentState)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
Rectangle	Desire_And_Doom/Utils/RectangleF.cs	/^        public Rectangle Rectangle { get => new Rectangle(Location.ToPoint(), Size.ToPoint()); }$/;"	p	class:Desire_And_Doom.Utils.RectangleF
RectangleF	Desire_And_Doom/Utils/RectangleF.cs	/^        public RectangleF(float x, float y, float w, float h)$/;"	m	class:Desire_And_Doom.Utils.RectangleF
RectangleF	Desire_And_Doom/Utils/RectangleF.cs	/^    class RectangleF$/;"	c	namespace:Desire_And_Doom.Utils
Region	Desire_And_Doom/Graphics/Particle.cs	/^        public Rectangle Region { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Region	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public Rectangle Region { get; set; } = Rectangle.Empty;$/;"	p	class:Desire_And_Doom.Billboard
Register	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void Register(Screen _screen, bool _goto = false) {$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
RegisterClassHandler	Desire_And_Doom/RoutedEvent.cs	/^        public static void RegisterClassHandler (Type classType, RoutedEvent routedEvent, Delegate handler)$/;"	m	class:MonoGdx.Scene2D.EventManager
RegisterClassHandler	Desire_And_Doom/RoutedEvent.cs	/^        public static void RegisterClassHandler (Type classType, RoutedEvent routedEvent, Delegate handler, bool handledEventsToo)$/;"	m	class:MonoGdx.Scene2D.EventManager
RegisterRoutedEvent	Desire_And_Doom/RoutedEvent.cs	/^        public static RoutedEvent RegisterRoutedEvent(RoutingStrategy routingStrategy, Type handlerType, Type ownerType)$/;"	m	class:MonoGdx.Scene2D.EventManager
RelatedActor	Desire_And_Doom/RoutedEvent.cs	/^        public Actor RelatedActor { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.TouchEventArgs
ReleaseTouchCapture	Desire_And_Doom/Actor.cs	/^        public void ReleaseTouchCapture (int pointer)$/;"	m	class:MonoGdx.Scene2D.Actor
ReleaseTouchCapture	Desire_And_Doom/Stage.cs	/^        public void ReleaseTouchCapture ()$/;"	m	class:MonoGdx.Scene2D.Stage
ReleaseTouchCapture	Desire_And_Doom/Stage.cs	/^        public void ReleaseTouchCapture (int pointer)$/;"	m	class:MonoGdx.Scene2D.Stage
Remove	Desire_And_Doom/Actor.cs	/^        public bool Remove ()$/;"	m	class:MonoGdx.Scene2D.Actor
Remove	Desire_And_Doom/ECS/Entity.cs	/^        public bool Remove { get; private set; }$/;"	p	class:Desire_And_Doom.ECS.Entity
Remove	Desire_And_Doom/Graphics/Assets.cs	/^        public void Remove(string id, object T)$/;"	m	class:Desire_And_Doom.Assets
Remove	Desire_And_Doom/Graphics/Particle.cs	/^        public bool     Remove { get; set; } = false;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Remove	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public bool Remove { get; set; } = false;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
RemoveAction	Desire_And_Doom/Actor.cs	/^        public void RemoveAction (SceneAction action)$/;"	m	class:MonoGdx.Scene2D.Actor
RemoveActor	Desire_And_Doom/Group.cs	/^        public virtual bool RemoveActor (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Group
RemoveHandler	Desire_And_Doom/Actor.cs	/^        public bool RemoveHandler (RoutedEvent routedEvent, Delegate handler)$/;"	m	class:MonoGdx.Scene2D.Actor
Remove_System	Desire_And_Doom/ECS/World.cs	/^        public void Remove_System<T>()$/;"	m	class:Desire_And_Doom.ECS.World
RemovedItems	Desire_And_Doom/RoutedEvent.cs	/^        public IList RemovedItems$/;"	p	class:MonoGdx.Scene2D.SelectionChangedEventArgs
Render	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^        public void Render(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Iso_Tiled_Map
Render_Spot	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public enum Render_Spot{ Left, Center, Right };$/;"	g	class:Desire_And_Doom.ECS.Invatory
Renderer2D	Desire_And_Doom/Graphics/Renderer2D.cs	/^        public Renderer2D(SpriteBatch spriteBatch)$/;"	m	class:Desire_And_Doom.Graphics.Renderer2D
Renderer2D	Desire_And_Doom/Graphics/Renderer2D.cs	/^    class Renderer2D$/;"	c	namespace:Desire_And_Doom.Graphics
Renderer3D	Desire_And_Doom/Graphics/Renderer3D.cs	/^        public Renderer3D(GraphicsDevice device, ContentManager content)$/;"	m	class:Desire_And_Doom.Graphics.Renderer3D
Renderer3D	Desire_And_Doom/Graphics/Renderer3D.cs	/^    class Renderer3D$/;"	c	namespace:Desire_And_Doom.Graphics
RepeatDelay	Desire_And_Doom/Utils/GamePadListener.cs	/^        public int RepeatDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
RepeatDelay	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public int RepeatDelay { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
RepeatDelay	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public int RepeatDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
RepeatDelay	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public int RepeatDelay { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
RepeatDelay	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public int RepeatDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
RepeatDelay	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public int RepeatDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
RepeatDelayMilliseconds	Desire_And_Doom/Utils/Input_Handlers/KeyboardListenerSettings.cs	/^        public int RepeatDelayMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
RepeatDelayMilliseconds	Desire_And_Doom/Utils/KeyboardListenerSettings.cs	/^        public int RepeatDelayMilliseconds { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.KeyboardListenerSettings
RepeatInitialDelay	Desire_And_Doom/Utils/GamePadListener.cs	/^        public int RepeatInitialDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
RepeatInitialDelay	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public int RepeatInitialDelay { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
RepeatInitialDelay	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public int RepeatInitialDelay { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
RepeatInitialDelay	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public int RepeatInitialDelay { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
Request_Animation_Playback	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public void Request_Animation_Playback(string animation_id){$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Request_Pause	Desire_And_Doom/DesireAndDoom.cs	/^        public static void Request_Pause()  => Game_State = State.PAUSED;$/;"	m	class:Desire_And_Doom.DesireAndDoom
Request_Resume	Desire_And_Doom/DesireAndDoom.cs	/^        public static void Request_Resume() => Game_State = State.PLAYING;$/;"	m	class:Desire_And_Doom.DesireAndDoom
Reset	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public virtual void Reset()$/;"	m	class:Desire_And_Doom.Graphics.ViewportAdapter
Reset	Desire_And_Doom/Gui/Pause_Menu.cs	/^        public void Reset()$/;"	m	class:Desire_And_Doom.Gui.Pause_Menu
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.KeyCharEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.KeyEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.KeyboardFocusChangedEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.MouseEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.RoutedPropertyChangedEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.ScrollFocusChangedEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public override void Reset ()$/;"	m	class:MonoGdx.Scene2D.TouchEventArgs
Reset	Desire_And_Doom/RoutedEvent.cs	/^        public virtual void Reset ()$/;"	m	class:MonoGdx.Scene2D.RoutedEventArgs
Reset	Desire_And_Doom/SceneAction.cs	/^        public virtual void Reset ()$/;"	m	class:MonoGdx.Scene2D.SceneAction
ResetTransform	Desire_And_Doom/Group.cs	/^        protected void ResetTransform (GdxSpriteBatch spriteBatch)$/;"	m	class:MonoGdx.Scene2D.Group
Reset_Key	Desire_And_Doom/Utils/Input.cs	/^        public void Reset_Key(Keys key)$/;"	m	class:Desire_And_Doom.Input
Restart	Desire_And_Doom/SceneAction.cs	/^        public virtual void Restart ()$/;"	m	class:MonoGdx.Scene2D.SceneAction
Revive	Desire_And_Doom/ECS/Entity.cs	/^        public void Revive() { this.Remove = false; }$/;"	m	class:Desire_And_Doom.ECS.Entity
Right	Desire_And_Doom/Actor.cs	/^        public float Right$/;"	p	class:MonoGdx.Scene2D.Actor
Right	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public enum Render_Spot{ Left, Center, Right };$/;"	e	enum:Desire_And_Doom.ECS.Invatory.Render_Spot	file:
Right	Desire_And_Doom/ECS/Components/Physics.cs	/^            Left = -1, Right = 1$/;"	e	enum:Desire_And_Doom.ECS.Physics.PSide	file:
Right	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        Right,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Right	Desire_And_Doom/Utils/MouseButton.cs	/^        Right,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Right_Face_Offset	Desire_And_Doom/Graphics/Animation.cs	/^        public Vector2 Right_Face_Offset { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Graphics.Animation
Right_Hand	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public Equipable Right_Hand { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Equipment
Right_Side_Bar	Desire_Tiles/Right_Side_Bar.cs	/^        public Right_Side_Bar(HorizontalSplitPane split)$/;"	m	class:Desire_Tiles.Right_Side_Bar
Right_Side_Bar	Desire_Tiles/Right_Side_Bar.cs	/^    class Right_Side_Bar$/;"	c	namespace:Desire_Tiles
Root	Desire_And_Doom/Stage.cs	/^        public Group Root { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Rotate	Desire_And_Doom/Actor.cs	/^        public void Rotate (float amount)$/;"	m	class:MonoGdx.Scene2D.Actor
Rotate	Desire_And_Doom/Graphics/Camera.cs	/^        public void Rotate(float deltaRadians)$/;"	m	class:Desire_And_Doom.Graphics.Camera
Rotation	Desire_And_Doom/Actor.cs	/^        public float Rotation { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Rotation	Desire_And_Doom/Graphics/Camera.cs	/^        public float Rotation { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Camera
Rotation	Desire_And_Doom/Graphics/GameCamera.cs	/^        public float Rotation { get; set; }$/;"	p	class:Desire_And_Doom.GameCamera
Rotation	Desire_And_Doom/Graphics/Particle.cs	/^        public float Rotation { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Rotation	Desire_And_Doom/Interfaces/IRotatable.cs	/^        float Rotation { get; set; }$/;"	p	interface:Desire_And_Doom.Interfaces.IRotatable
RoutedEvent	Desire_And_Doom/RoutedEvent.cs	/^        internal RoutedEvent(RoutingStrategy routingStrategy, Type handlerType, Type ownerType)$/;"	m	class:MonoGdx.Scene2D.RoutedEvent	file:
RoutedEvent	Desire_And_Doom/RoutedEvent.cs	/^        public RoutedEvent RoutedEvent { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
RoutedEvent	Desire_And_Doom/RoutedEvent.cs	/^    public sealed class RoutedEvent$/;"	c	namespace:MonoGdx.Scene2D
RoutedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class RoutedEventArgs : EventArgs, IPoolable$/;"	c	namespace:MonoGdx.Scene2D
RoutedEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void RoutedEventHandler (Actor sender, RoutedEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
RoutedEventHandlerInfo	Desire_And_Doom/RoutedEvent.cs	/^        internal RoutedEventHandlerInfo (Delegate handler, bool capturingHandler)$/;"	m	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo
RoutedEventHandlerInfo	Desire_And_Doom/RoutedEvent.cs	/^    public struct RoutedEventHandlerInfo$/;"	s	namespace:MonoGdx.Scene2D
RoutedPropertyChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^        public RoutedPropertyChangedEventArgs (T oldValue, T newValue)$/;"	m	class:MonoGdx.Scene2D.RoutedPropertyChangedEventArgs
RoutedPropertyChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class RoutedPropertyChangedEventArgs<T> : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
RoutedPropertyChangedEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void RoutedPropertyChangedEventHandler<T> (Actor sender, RoutedPropertyChangedEventArgs<T> e);$/;"	m	namespace:MonoGdx.Scene2D
RoutingStrategy	Desire_And_Doom/RoutedEvent.cs	/^        public RoutingStrategy RoutingStrategy { get; private set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEvent
RoutingStrategy	Desire_And_Doom/RoutedEvent.cs	/^    public enum RoutingStrategy$/;"	g	namespace:MonoGdx.Scene2D
Run_Animation_ID	Desire_And_Doom/Items/Equipable.cs	/^        public string Run_Animation_ID      { get; set; } = "";$/;"	p	class:Desire_And_Doom.Items.Equipable
SCALE	Desire_And_Doom/DesireAndDoom.cs	/^        public static readonly float SCALE = 3f;$/;"	f	class:Desire_And_Doom.DesireAndDoom
SCALE	Desire_And_Doom/Utils/Constants.cs	/^        public static readonly float SCALE = 1.5f;$/;"	f	class:Desire_And_Doom.Utils.Constants
SHEILD	Desire_And_Doom/Items/Equipable.cs	/^            SHEILD,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
SHOULD_QUIT	Desire_And_Doom/DesireAndDoom.cs	/^        public static bool SHOULD_QUIT = false;$/;"	f	class:Desire_And_Doom.DesireAndDoom
SPACE	Desire_And_Doom/ECS/Components/Physics.cs	/^            STATIC, DYNAMIC, WATER, SPACE, WORLD_INTERACTION$/;"	e	enum:Desire_And_Doom.ECS.Physics.PType	file:
STATIC	Desire_And_Doom/ECS/Components/Physics.cs	/^            STATIC, DYNAMIC, WATER, SPACE, WORLD_INTERACTION$/;"	e	enum:Desire_And_Doom.ECS.Physics.PType	file:
Scale	Desire_And_Doom/Actor.cs	/^        public void Scale (float scale)$/;"	m	class:MonoGdx.Scene2D.Actor
Scale	Desire_And_Doom/Actor.cs	/^        public void Scale (float scaleX, float ScaleY)$/;"	m	class:MonoGdx.Scene2D.Actor
Scale	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Vector2  Scale  { get; set; } = Vector2.One;$/;"	p	class:Desire_And_Doom.ECS.Sprite
Scale	Desire_And_Doom/Graphics/Particle.cs	/^        public float Scale { get; set; } = 1f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
ScaleX	Desire_And_Doom/Actor.cs	/^        public float ScaleX { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
ScaleY	Desire_And_Doom/Actor.cs	/^        public float ScaleY { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Scale_Down	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Scale_Down(float by = 0.99f) => Scale *= by;$/;"	m	class:Desire_And_Doom.Graphics.Particle
SceneAction	Desire_And_Doom/SceneAction.cs	/^    public abstract class SceneAction : IPoolable$/;"	c	namespace:MonoGdx.Scene2D
SceneActions	Desire_And_Doom/Actor.cs	/^        public IList<SceneAction> SceneActions$/;"	p	class:MonoGdx.Scene2D.Actor
ScissorStack	Desire_And_Doom/Stage.cs	/^        public ScissorStack ScissorStack { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Screen	Desire_And_Doom/Screens/Screen.cs	/^        public Screen(string _id)$/;"	m	class:Desire_And_Doom.Screens.Screen
Screen	Desire_And_Doom/Screens/Screen.cs	/^    abstract class Screen$/;"	c	namespace:Desire_And_Doom.Screens
ScreenHeight	Desire_And_Doom/DesireAndDoom.cs	/^        public static int ScreenHeight { get => graphics.PreferredBackBufferHeight; }$/;"	p	class:Desire_And_Doom.DesireAndDoom
ScreenSize	Desire_And_Doom/DesireAndDoom.cs	/^        public static (int, int) ScreenSize { get => (ScreenWidth, ScreenHeight); }$/;"	p	class:Desire_And_Doom.DesireAndDoom
ScreenToLocalCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 ScreenToLocalCoordinates (Vector2 screenCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
ScreenToStageCoordinates	Desire_And_Doom/Stage.cs	/^        public Vector2 ScreenToStageCoordinates (Vector2 screenCoords)$/;"	m	class:MonoGdx.Scene2D.Stage
ScreenToWorld	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 ScreenToWorld(Vector2 screenPosition)$/;"	m	class:Desire_And_Doom.Graphics.Camera
ScreenToWorld	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 ScreenToWorld(float x, float y)$/;"	m	class:Desire_And_Doom.Graphics.Camera
ScreenWidth	Desire_And_Doom/DesireAndDoom.cs	/^        public static int ScreenWidth { get => graphics.PreferredBackBufferWidth; }$/;"	p	class:Desire_And_Doom.DesireAndDoom
Screen_Manager	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public Screen_Manager()$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
Screen_Manager	Desire_And_Doom/Screens/Screen_Manager.cs	/^    class Screen_Manager$/;"	c	namespace:Desire_And_Doom.Screens
Screen_To_World	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 Screen_To_World(Vector2 point)$/;"	m	class:Desire_And_Doom.GameCamera
Scroll	Desire_And_Doom/Actor.cs	/^        public event ScrollEventHandler Scroll$/;"	p	class:MonoGdx.Scene2D.Actor
ScrollAmountH	Desire_And_Doom/RoutedEvent.cs	/^        public int ScrollAmountH { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.ScrollEventArgs
ScrollAmountV	Desire_And_Doom/RoutedEvent.cs	/^        public int ScrollAmountV { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.ScrollEventArgs
ScrollClass	Desire_And_Doom/Actor.cs	/^        private static void ScrollClass (Actor sender, ScrollEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
ScrollEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent ScrollEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
ScrollEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class ScrollEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
ScrollEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void ScrollEventHandler (Actor sender, ScrollEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
ScrollFocusChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class ScrollFocusChangedEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
ScrollFocusChangedEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void ScrollFocusChangedEventHandler (Actor sender, ScrollFocusChangedEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
ScrollWheelDelta	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public int ScrollWheelDelta { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
ScrollWheelDelta	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public int ScrollWheelDelta { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
ScrollWheelValue	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public int ScrollWheelValue { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
ScrollWheelValue	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public int ScrollWheelValue { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Scrolled	Desire_And_Doom/Stage.cs	/^        public override bool Scrolled (int amount)$/;"	m	class:MonoGdx.Scene2D.Stage
SelectionChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^        public SelectionChangedEventArgs (IList addedItems, IList removedItems)$/;"	m	class:MonoGdx.Scene2D.SelectionChangedEventArgs
SelectionChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^        public SelectionChangedEventArgs (object addedItem, object removedItem)$/;"	m	class:MonoGdx.Scene2D.SelectionChangedEventArgs
SelectionChangedEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class SelectionChangedEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
SelectionChangedEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void SelectionChangedEventHandler (Actor sender, SelectionChangedEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
Selector	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public int Selector { get; private set; } = 0;$/;"	p	class:Desire_And_Doom.Dialog_Box
SetBounds	Desire_And_Doom/Actor.cs	/^        public void SetBounds (float x, float y, float width, float height)$/;"	m	class:MonoGdx.Scene2D.Actor
SetCullingArea	Desire_And_Doom/Group.cs	/^        public void SetCullingArea (RectangleF cullingArea)$/;"	m	class:MonoGdx.Scene2D.Group
SetKeyboardFocus	Desire_And_Doom/Stage.cs	/^        public void SetKeyboardFocus (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Stage
SetOrigin	Desire_And_Doom/Actor.cs	/^        public void SetOrigin (float originX, float originY)$/;"	m	class:MonoGdx.Scene2D.Actor
SetPosition	Desire_And_Doom/Actor.cs	/^        public void SetPosition (float x, float y)$/;"	m	class:MonoGdx.Scene2D.Actor
SetScale	Desire_And_Doom/Actor.cs	/^        public void SetScale (float scale)$/;"	m	class:MonoGdx.Scene2D.Actor
SetScale	Desire_And_Doom/Actor.cs	/^        public void SetScale (float scaleX, float scaleY)$/;"	m	class:MonoGdx.Scene2D.Actor
SetScrollFocus	Desire_And_Doom/Stage.cs	/^        public void SetScrollFocus (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Stage
SetSize	Desire_And_Doom/Actor.cs	/^        public void SetSize (float width, float height)$/;"	m	class:MonoGdx.Scene2D.Actor
SetTouchCapture	Desire_And_Doom/Stage.cs	/^        public void SetTouchCapture (Actor actor, int pointer)$/;"	m	class:MonoGdx.Scene2D.Stage
SetViewport	Desire_And_Doom/Stage.cs	/^        public void SetViewport (float stageWidth, float stageHeight, bool keepAspectRatio, float viewportX, float viewportY, float viewportWidth, float viewportHeight)$/;"	m	class:MonoGdx.Scene2D.Stage
SetViewport	Desire_And_Doom/Stage.cs	/^        public void SetViewport (float width, float height, bool keepAspectRatio)$/;"	m	class:MonoGdx.Scene2D.Stage
Settings_Screen	Desire_And_Doom/Screens/Settings_Screen.cs	/^        public Settings_Screen() : base("Settings")$/;"	m	class:Desire_And_Doom.Screens.Settings_Screen
Settings_Screen	Desire_And_Doom/Screens/Settings_Screen.cs	/^    class Settings_Screen : Screen$/;"	c	namespace:Desire_And_Doom.Screens
Shake	Desire_And_Doom/Graphics/GameCamera.cs	/^        public void Shake(float intensity, float time)$/;"	m	class:Desire_And_Doom.GameCamera
Shield_Timer	Desire_And_Doom/ECS/Components/Health.cs	/^        public float Shield_Timer{ get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.Health
Shift	Desire_And_Doom/Utils/Input_Handlers/KeyboardModifiers.cs	/^        Shift = 2,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Shift	Desire_And_Doom/Utils/KeyboardModifiers.cs	/^        Shift = 2,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.KeyboardModifiers	file:
Short_Sward_Skill	Desire_And_Doom/ECS/Components/Character.cs	/^        public float Short_Sward_Skill  { get; set; } = 0.5f;$/;"	p	class:Desire_And_Doom.ECS.Components.Character
Should_Die	Desire_And_Doom/ECS/Components/Health.cs	/^        public bool Should_Die { get => Amount <= 0; }$/;"	p	class:Desire_And_Doom.ECS.Components.Health
ShowMenu	Desire_And_Doom/Gui/UI_Manager.cs	/^        private bool ShowMenu { get; set; } = false;$/;"	p	class:Desire_And_Doom.Gui.UI_Manager
Showing	Desire_And_Doom/Gui/UI_Manager.cs	/^        public bool Showing { get; set; } = false;$/;"	p	class:Desire_And_Doom.Gui.UI_Manager
Shulk 	Desire_And_Doom/Content/Lua/AI.lua	/^	Shulk = function(entity, engine)$/;"	f
Shulk 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^	Shulk = function(entity, engine)$/;"	f
Shulk 	Lua_World/AI.lua	/^	Shulk = function(entity, engine)$/;"	f
Size	Desire_And_Doom/Actor.cs	/^        public void Size (float size)$/;"	m	class:MonoGdx.Scene2D.Actor
Size	Desire_And_Doom/Actor.cs	/^        public void Size (float width, float height)$/;"	m	class:MonoGdx.Scene2D.Actor
Size	Desire_And_Doom/ECS/Components/Body.cs	/^        public Vector2 Size { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Body
Size	Desire_And_Doom/Graphics/Particle.cs	/^        public Vector2 Size { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Size	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public Vector2 Size { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Size	Desire_And_Doom/Interfaces/IRectangle.cs	/^        Vector2 Size { get; set; }$/;"	p	interface:Desire_And_Doom.Interfaces.IRectangle
Size	Desire_And_Doom/Utils/RectangleF.cs	/^        public Vector2 Size$/;"	p	class:Desire_And_Doom.Utils.RectangleF
SkyLogoAlpha	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        float SkyLogoAlpha = 1f;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
SkyLogoY	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        float SkyLogoY = DesireAndDoom.ScreenHeight;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
SkyVaultLogo	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Texture2D SkyVaultLogo;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
Sky_Renderer	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        public Sky_Renderer(Texture2D image, bool bg_image = false)$/;"	m	class:Desire_And_Doom.Graphics.Sky_Renderer
Sky_Renderer	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^    class Sky_Renderer$/;"	c	namespace:Desire_And_Doom.Graphics
Source	Desire_And_Doom/RoutedEvent.cs	/^        public Actor Source$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
Spawn	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Entity Spawn(LuaTable e, float x, float y)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Spawn	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public abstract void Spawn();$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Spawn	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Emitter.cs	/^        public override void Spawn()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Boss_1_Emitter
Spawn	Desire_And_Doom/Graphics/Particle_Systems/Dust_Emitter.cs	/^        public override void Spawn()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Dust_Emitter
Spawn	Desire_And_Doom/Graphics/Particle_Systems/Fire_Emitter.cs	/^        public override void Spawn()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Emitter
Spawn	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Emitter.cs	/^        public override void Spawn()$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Fly_Emitter
Spawn_Time_Max	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float Spawn_Time_Max { get; set; } = 0.5f;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Spawn_Timer	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float Spawn_Timer    { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Spawner	Desire_And_Doom/ECS/Component.cs	/^            Spawner,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Spawner	Desire_And_Doom/ECS/Components/Spawner.cs	/^        public Spawner(List<string> _entities, World _world) : base(Types.Spawner)$/;"	m	class:Desire_And_Doom.ECS.Components.Spawner
Spawner	Desire_And_Doom/ECS/Components/Spawner.cs	/^    class Spawner : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Speaker	Desire_And_Doom/Graphics/Dialog.cs	/^        public Entity Speaker { get; set; } = null;$/;"	p	class:Desire_And_Doom.Graphics.Dialog
Speed	Desire_And_Doom/Graphics/Particle.cs	/^        public float Speed { get; set; } = 10f;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Sprite	Desire_And_Doom/ECS/Component.cs	/^            Sprite,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Sprite	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Sprite(Texture2D _texture, Rectangle _quad) : base(Types.Sprite)$/;"	m	class:Desire_And_Doom.ECS.Sprite
Sprite	Desire_And_Doom/ECS/Components/Sprite.cs	/^    class Sprite : Component$/;"	c	namespace:Desire_And_Doom.ECS
SpriteBatch	Desire_And_Doom/Stage.cs	/^        public GdxSpriteBatch SpriteBatch { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Sprite_Renderer_System	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^        public Sprite_Renderer_System() : base(Types.Body, Types.Sprite)$/;"	m	class:Desire_And_Doom.ECS.Sprite_Renderer_System
Sprite_Renderer_System	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^    class Sprite_Renderer_System : System$/;"	c	namespace:Desire_And_Doom.ECS
Square_Size	Desire_And_Doom/Gui/UI_Manager.cs	/^        public int Square_Size { get; set; } = 24;$/;"	p	class:Desire_And_Doom.Gui.UI_Manager
Stage	Desire_And_Doom/Actor.cs	/^        public virtual Stage Stage { get; protected internal set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Stage	Desire_And_Doom/Group.cs	/^        public override Stage Stage$/;"	p	class:MonoGdx.Scene2D.Group
Stage	Desire_And_Doom/RoutedEvent.cs	/^        public Stage Stage { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
Stage	Desire_And_Doom/Stage.cs	/^        public Stage (GraphicsDevice graphicsDevice)$/;"	m	class:MonoGdx.Scene2D.Stage
Stage	Desire_And_Doom/Stage.cs	/^        public Stage (float width, float height, bool keepAspectRatio, GdxSpriteBatch spriteBatch)$/;"	m	class:MonoGdx.Scene2D.Stage
Stage	Desire_And_Doom/Stage.cs	/^        public Stage (float width, float height, bool keepAspectRatio, GraphicsDevice graphicsDevice)$/;"	m	class:MonoGdx.Scene2D.Stage
Stage	Desire_And_Doom/Stage.cs	/^    public class Stage : InputAdapter, IDisposable$/;"	c	namespace:MonoGdx.Scene2D
StagePosition	Desire_And_Doom/RoutedEvent.cs	/^        public Vector2 StagePosition { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.MouseEventArgs
StagePosition	Desire_And_Doom/RoutedEvent.cs	/^        public Vector2 StagePosition { get; internal set; }$/;"	p	class:MonoGdx.Scene2D.TouchEventArgs
StageToLocalCoordinates	Desire_And_Doom/Actor.cs	/^        public Vector2 StageToLocalCoordinates (Vector2 stageCoords)$/;"	m	class:MonoGdx.Scene2D.Actor
StageToScreenCoordinates	Desire_And_Doom/Stage.cs	/^        public Vector2 StageToScreenCoordinates (Vector2 stageCoords)$/;"	m	class:MonoGdx.Scene2D.Stage
Start	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^      public Vector2 Start, End;$/;"	f	class:Desire_And_Doom.ECS.Line
State	Desire_And_Doom/DesireAndDoom.cs	/^        public enum State$/;"	g	class:Desire_And_Doom.DesireAndDoom
State	Desire_And_Doom/ECS/Components/Player.cs	/^        public Action_State State { get; set; } = Action_State.IDLE;$/;"	p	class:Desire_And_Doom.Player
State	Desire_And_Doom/Utils/Debug_Console.cs	/^        enum State$/;"	g	class:Desire_And_Doom.Utils.Debug_Console
Stop	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public void Stop() => Playing_Animation = false;$/;"	m	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Stopped	Desire_And_Doom/RoutedEvent.cs	/^        public bool Stopped { get; set; }$/;"	p	class:MonoGdx.Scene2D.RoutedEventArgs
SubClassHandlers	Desire_And_Doom/RoutedEvent.cs	/^            public List<ClassHandlerNode> SubClassHandlers = new List<ClassHandlerNode>();$/;"	f	class:MonoGdx.Scene2D.EventManager.ClassHandlerNode
SwapActor	Desire_And_Doom/Group.cs	/^        public bool SwapActor (Actor first, Actor second)$/;"	m	class:MonoGdx.Scene2D.Group
SwapActor	Desire_And_Doom/Group.cs	/^        public bool SwapActor (int first, int second)$/;"	m	class:MonoGdx.Scene2D.Group
System	Desire_And_Doom/ECS/System.cs	/^        public System(params Types[] _types)$/;"	m	class:Desire_And_Doom.ECS.System
System	Desire_And_Doom/ECS/System.cs	/^    abstract class System$/;"	c	namespace:Desire_And_Doom.ECS
T	Desire_And_Doom/Utils/InputListenerSettings.cs	/^        where T : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
T	Desire_And_Doom/Utils/Input_Handlers/InputListenerSettings.cs	/^        where T : InputListener$/;"	c	namespace:MonoGame.Extended.Input.InputListeners
Table	Desire_And_Doom/ECS/Components/Lua_Function.cs	/^        public LuaTable Table { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Lua_Function
Table	Desire_And_Doom/Graphics/Assets.cs	/^        public LuaTable Table { get; set; }$/;"	p	class:Desire_And_Doom.LuaTableAsset
Tags	Desire_And_Doom/ECS/Entity.cs	/^        public List<string> Tags { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Entity
TakeNextIndex	Desire_And_Doom/RoutedEvent.cs	/^        internal static int TakeNextIndex ()$/;"	m	class:MonoGdx.Scene2D.EventManager	file:
Target	Desire_And_Doom/ECS/Components/AI.cs	/^        public Entity Target;$/;"	f	class:Desire_And_Doom.ECS.AI
Target	Desire_And_Doom/Graphics/Dialog.cs	/^        public Entity Target { get; set; } = null;$/;"	p	class:Desire_And_Doom.Graphics.Dialog
TargetEntity_AStar	Desire_And_Doom/ECS/Components/AI.cs	/^        public bool TargetEntity_AStar { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.AI
Target_Angle	Desire_And_Doom/ECS/Components/AI.cs	/^        public float Target_Angle { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.AI
Tasker	Desire_And_Doom/Utils/Tasker.cs	/^        public Tasker(params Action<GameTime>[] tasks){$/;"	m	class:Desire_And_Doom.Utils.Tasker
Tasker	Desire_And_Doom/Utils/Tasker.cs	/^    class Tasker$/;"	c	namespace:Desire_And_Doom.Utils
Texture	Desire_And_Doom/ECS/Components/Sprite.cs	/^        public Texture2D Texture    { get; protected set; }$/;"	p	class:Desire_And_Doom.ECS.Sprite
ThumbStickDeltaTreshold	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float ThumbStickDeltaTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbStickDeltaTreshold	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float ThumbStickDeltaTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
ThumbStickDeltaTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float ThumbStickDeltaTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbStickDeltaTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float ThumbStickDeltaTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
ThumbStickMoved	Desire_And_Doom/Utils/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ThumbStickMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbStickMoved	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> ThumbStickMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbStickState	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public Vector2 ThumbStickState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
ThumbStickState	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public Vector2 ThumbStickState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
ThumbstickDownTreshold	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float ThumbstickDownTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbstickDownTreshold	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float ThumbstickDownTreshold { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
ThumbstickDownTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float ThumbstickDownTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
ThumbstickDownTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float ThumbstickDownTreshold { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
Tiled_Map	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public Tiled_Map(string name, GameCamera _camera, World world, Screen level, Particle_World particle_world, Lua lua, GraphicsDevice device, PenumbraComponent lighting = null, bool create_astar_collision_map = false)$/;"	m	class:Desire_And_Doom.Tiled_Map
Tiled_Map	Desire_And_Doom/Graphics/Tiled_Map.cs	/^    class Tiled_Map$/;"	c	namespace:Desire_And_Doom
Time	Desire_And_Doom/Utils/Input_Handlers/MouseEventArgs.cs	/^        public TimeSpan Time { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Time	Desire_And_Doom/Utils/MouseEventArgs.cs	/^        public TimeSpan Time { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseEventArgs
Time_Left	Desire_And_Doom/ECS/Components/Timed_Destroy.cs	/^        public float Time_Left { get; set; } = 0f;$/;"	p	class:Desire_And_Doom.ECS.Components.Timed_Destroy
Timed_Destroy	Desire_And_Doom/ECS/Component.cs	/^            Timed_Destroy,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
Timed_Destroy	Desire_And_Doom/ECS/Components/Timed_Destroy.cs	/^        public Timed_Destroy(float time) : base(Types.Timed_Destroy)$/;"	m	class:Desire_And_Doom.ECS.Components.Timed_Destroy
Timed_Destroy	Desire_And_Doom/ECS/Components/Timed_Destroy.cs	/^    class Timed_Destroy : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
Timed_Destroy_System	Desire_And_Doom/ECS/Systems/Timed_Destroy_System.cs	/^        public Timed_Destroy_System() : base(Types.Timed_Destroy)$/;"	m	class:Desire_And_Doom.ECS.Systems.Timed_Destroy_System
Timed_Destroy_System	Desire_And_Doom/ECS/Systems/Timed_Destroy_System.cs	/^    class Timed_Destroy_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
Timer	Desire_And_Doom/ECS/Components/AI.cs	/^        public float Timer { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.AI
Timer	Desire_And_Doom/ECS/Components/Advanced_Animation_Component.cs	/^        public float Timer {get; set;} = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.Advanced_Animation_Component
Timer	Desire_And_Doom/ECS/Components/Animated_Sprite.cs	/^        public float Timer { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Animated_Sprite
Timer	Desire_And_Doom/Utils/Timers.cs	/^    class Timer$/;"	c	namespace:Desire_And_Doom.Utils
Timers	Desire_And_Doom/Utils/Timers.cs	/^        private Timers()$/;"	m	class:Desire_And_Doom.Utils.Timers	file:
Timers	Desire_And_Doom/Utils/Timers.cs	/^    class Timers$/;"	c	namespace:Desire_And_Doom.Utils
ToBack	Desire_And_Doom/Actor.cs	/^        public void ToBack ()$/;"	m	class:MonoGdx.Scene2D.Actor
ToChar	Desire_And_Doom/Utils/Input_Handlers/KeyboardEventArgs.cs	/^        private static char? ToChar(Keys key, KeyboardModifiers modifiers = KeyboardModifiers.None)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs	file:
ToChar	Desire_And_Doom/Utils/KeyboardEventArgs.cs	/^        private static char? ToChar(Keys key, KeyboardModifiers modifiers = KeyboardModifiers.None)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardEventArgs	file:
ToFront	Desire_And_Doom/Actor.cs	/^        public void ToFront ()$/;"	m	class:MonoGdx.Scene2D.Actor
ToScreenCoordinates	Desire_And_Doom/Stage.cs	/^        public Vector2 ToScreenCoordinates (Vector2 coords, Matrix transformMatrix)$/;"	m	class:MonoGdx.Scene2D.Stage
ToString	Desire_And_Doom/Actor.cs	/^        public override string ToString ()$/;"	m	class:MonoGdx.Scene2D.Actor
ToString	Desire_And_Doom/SceneAction.cs	/^        public override string ToString ()$/;"	m	class:MonoGdx.Scene2D.SceneAction
Toggle_Pause	Desire_And_Doom/DesireAndDoom.cs	/^        public static void Toggle_Pause()$/;"	m	class:Desire_And_Doom.DesireAndDoom
Top	Desire_And_Doom/Actor.cs	/^        public float Top$/;"	p	class:MonoGdx.Scene2D.Actor
Top	Desire_And_Doom/Utils/Messanger.cs	/^        public string Top()$/;"	m	class:Desire_And_Doom.Utils.Messanger
Top_Menu	Desire_Tiles/Top_Menu.cs	/^        public Top_Menu(Grid grid)$/;"	m	class:Desire_Tiles.Top_Menu
Top_Menu	Desire_Tiles/Top_Menu.cs	/^    class Top_Menu$/;"	c	namespace:Desire_Tiles
TouchDown	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler TouchDown$/;"	p	class:MonoGdx.Scene2D.Actor
TouchDown	Desire_And_Doom/Stage.cs	/^        public override bool TouchDown (int screenX, int screenY, int pointer, int button)$/;"	m	class:MonoGdx.Scene2D.Stage
TouchDownClass	Desire_And_Doom/Actor.cs	/^        private static void TouchDownClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
TouchDownEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent TouchDownEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
TouchDrag	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler TouchDrag$/;"	p	class:MonoGdx.Scene2D.Actor
TouchDragClass	Desire_And_Doom/Actor.cs	/^        private static void TouchDragClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
TouchDragEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent TouchDragEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
TouchDragged	Desire_And_Doom/Stage.cs	/^        public override bool TouchDragged (int screenX, int screenY, int pointer)$/;"	m	class:MonoGdx.Scene2D.Stage
TouchEnter	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler TouchEnter$/;"	p	class:MonoGdx.Scene2D.Actor
TouchEnterClass	Desire_And_Doom/Actor.cs	/^        private static void TouchEnterClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
TouchEnterEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent TouchEnterEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
TouchEventArgs	Desire_And_Doom/RoutedEvent.cs	/^    public class TouchEventArgs : RoutedEventArgs$/;"	c	namespace:MonoGdx.Scene2D
TouchEventHandler	Desire_And_Doom/RoutedEvent.cs	/^    public delegate void TouchEventHandler (Actor sender, TouchEventArgs e);$/;"	m	namespace:MonoGdx.Scene2D
TouchLeave	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler TouchLeave$/;"	p	class:MonoGdx.Scene2D.Actor
TouchLeaveClass	Desire_And_Doom/Actor.cs	/^        private static void TouchLeaveClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
TouchLeaveEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent TouchLeaveEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
TouchUp	Desire_And_Doom/Actor.cs	/^        public event TouchEventHandler TouchUp$/;"	p	class:MonoGdx.Scene2D.Actor
TouchUp	Desire_And_Doom/Stage.cs	/^        public override bool TouchUp (int screenX, int screenY, int pointer, int button)$/;"	m	class:MonoGdx.Scene2D.Stage
TouchUpClass	Desire_And_Doom/Actor.cs	/^        private static void TouchUpClass (Actor sender, TouchEventArgs e)$/;"	m	class:MonoGdx.Scene2D.Actor	file:
TouchUpEvent	Desire_And_Doom/Stage.cs	/^        public static readonly RoutedEvent TouchUpEvent =$/;"	f	class:MonoGdx.Scene2D.Stage
Touchable	Desire_And_Doom/Actor.cs	/^        public Touchable Touchable { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Touchable	Desire_And_Doom/Actor.cs	/^    public enum Touchable$/;"	g	namespace:MonoGdx.Scene2D
Track	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public void Track(Entity self, Entity other, float force)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Track	Desire_And_Doom/Graphics/GameCamera.cs	/^        public void Track(Body body, float smoothing)$/;"	m	class:Desire_And_Doom.GameCamera
Translate	Desire_And_Doom/Actor.cs	/^        public void Translate (float x, float y)$/;"	m	class:MonoGdx.Scene2D.Actor
Transparency	Desire_And_Doom/Graphics/Particle.cs	/^        public float Transparency {$/;"	p	class:Desire_And_Doom.Graphics.Particle
TriggerDeltaTreshold	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float TriggerDeltaTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerDeltaTreshold	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float TriggerDeltaTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
TriggerDeltaTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float TriggerDeltaTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerDeltaTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float TriggerDeltaTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
TriggerDownTreshold	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float TriggerDownTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerDownTreshold	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float TriggerDownTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
TriggerDownTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float TriggerDownTreshold { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerDownTreshold	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float TriggerDownTreshold { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
TriggerMoved	Desire_And_Doom/Utils/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> TriggerMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerMoved	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public event EventHandler<GamePadEventArgs> TriggerMoved;$/;"	E	class:MonoGame.Extended.Input.InputListeners.GamePadListener
TriggerState	Desire_And_Doom/Utils/GamePadEventArgs.cs	/^        public float TriggerState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
TriggerState	Desire_And_Doom/Utils/Input_Handlers/GamePadEventArgs.cs	/^        public float TriggerState { get; private set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadEventArgs
TryOpen	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public bool TryOpen(Dialog dialog) {$/;"	m	class:Desire_And_Doom.Dialog_Box
Tunnel	Desire_And_Doom/RoutedEvent.cs	/^        Tunnel,$/;"	e	enum:MonoGdx.Scene2D.RoutingStrategy	file:
Type	Desire_And_Doom/ECS/Component.cs	/^        public Types Type { get; protected set; }$/;"	p	class:Desire_And_Doom.ECS.Component
Type	Desire_And_Doom/Items/Equipable.cs	/^        public Equipment_Type Type          { get; set; } = Equipment_Type.NONE;$/;"	p	class:Desire_And_Doom.Items.Equipable
Types	Desire_And_Doom/ECS/Component.cs	/^        public enum Types$/;"	g	class:Desire_And_Doom.ECS.Component
UIDraw	Desire_And_Doom/ECS/System.cs	/^        public virtual void UIDraw(SpriteBatch batch, GameCamera camera, Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
UIDraw	Desire_And_Doom/ECS/Systems/Invatory_System.cs	/^        public override void UIDraw(SpriteBatch batch, GameCamera camera, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Invatory_System
UIDraw	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        public override void UIDraw(SpriteBatch batch, GameCamera camera,Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Npc_System
UIDraw	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public override void UIDraw(SpriteBatch batch, GameCamera camera, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
UIDraw	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void UIDraw(SpriteBatch batch, GameCamera camera, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
UIDraw	Desire_And_Doom/ECS/World.cs	/^        public void UIDraw(SpriteBatch batch, GameCamera camera)$/;"	m	class:Desire_And_Doom.ECS.World
UIDraw	Desire_And_Doom/Gui/UI_Manager.cs	/^        public void UIDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Gui.UI_Manager
UIDraw	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public override void UIDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
UIDraw	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void UIDraw(SpriteBatch batch) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
UIDraw	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void UIDraw(SpriteBatch batch)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
UI_Manager	Desire_And_Doom/Gui/UI_Manager.cs	/^        public UI_Manager(World _entity_world, PrimitivesBatch _primitives)$/;"	m	class:Desire_And_Doom.Gui.UI_Manager
UI_Manager	Desire_And_Doom/Gui/UI_Manager.cs	/^    class UI_Manager$/;"	c	namespace:Desire_And_Doom.Gui
UType	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public Update_Type UType;$/;"	f	class:Desire_And_Doom.ECS.Components.World_Interaction
UUID	Desire_And_Doom/ECS/Entity.cs	/^        public int UUID { get; private set; } = uuid_generater++;$/;"	p	class:Desire_And_Doom.ECS.Entity
Unfocus	Desire_And_Doom/Stage.cs	/^        public void Unfocus (Actor actor)$/;"	m	class:MonoGdx.Scene2D.Stage
UnfocusAll	Desire_And_Doom/Stage.cs	/^        public void UnfocusAll ()$/;"	m	class:MonoGdx.Scene2D.Stage
UnloadContent	Desire_And_Doom/DesireAndDoom.cs	/^        protected override void UnloadContent()$/;"	m	class:Desire_And_Doom.DesireAndDoom
UnloadContent	Desire_Tiles/Editor.cs	/^        protected override void UnloadContent()$/;"	m	class:Desire_Tiles.Editor
UnloadContent	Entity_Editor/Game1.cs	/^        protected override void UnloadContent()$/;"	m	class:Entity_Editor.Game1
Update	Desire_And_Doom/DesireAndDoom.cs	/^        protected override void Update(GameTime gameTime)$/;"	m	class:Desire_And_Doom.DesireAndDoom
Update	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public Func<Entity, Entity, bool> Update    { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
Update	Desire_And_Doom/ECS/Entity.cs	/^        public Func<Entity, bool> Update { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Entity
Update	Desire_And_Doom/ECS/System.cs	/^        public virtual void Update(GameTime time, Entity entity) { }$/;"	m	class:Desire_And_Doom.ECS.System
Update	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.AI_System
Update	Desire_And_Doom/ECS/Systems/Advanced_Animation_Rendering_System.cs	/^        public override void Update(GameTime time, Entity entity){$/;"	m	class:Desire_And_Doom.ECS.Systems.Advanced_Animation_Rendering_System
Update	Desire_And_Doom/ECS/Systems/Animation_Renderer_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Animation_Renderer_System
Update	Desire_And_Doom/ECS/Systems/Entity_Emitter_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Entity_Emitter_System
Update	Desire_And_Doom/ECS/Systems/Health_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Health_System
Update	Desire_And_Doom/ECS/Systems/Item_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Item_System
Update	Desire_And_Doom/ECS/Systems/Light_Emitter_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Light_Emitter_System
Update	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Update	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Multipart_Animation_System
Update	Desire_And_Doom/ECS/Systems/Particle_Emitter_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Particle_Emitter_System
Update	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Physics_Engine
Update	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Player_Controller_System
Update	Desire_And_Doom/ECS/Systems/Timed_Destroy_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.Timed_Destroy_System
Update	Desire_And_Doom/ECS/Systems/World_Interaction_System.cs	/^        public override void Update(GameTime time, Entity entity)$/;"	m	class:Desire_And_Doom.ECS.Systems.World_Interaction_System
Update	Desire_And_Doom/ECS/World.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.ECS.World
Update	Desire_And_Doom/Graphics/Assets.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Assets
Update	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        public void Update(GameTime time) {$/;"	m	class:Desire_And_Doom.Dialog_Box
Update	Desire_And_Doom/Graphics/GameCamera.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.GameCamera
Update	Desire_And_Doom/Graphics/Monogui.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Monogui
Update	Desire_And_Doom/Graphics/Particle.cs	/^        public abstract void Update(GameTime time);$/;"	m	class:Desire_And_Doom.Graphics.Particle
Update	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Emitter
Update	Desire_And_Doom/Graphics/Particle_Systems/Boss_1_Particle.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Boss_1_Particle
Update	Desire_And_Doom/Graphics/Particle_Systems/Dust_Particle.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Dust_Particle
Update	Desire_And_Doom/Graphics/Particle_Systems/Fire_Fly_Particle.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Fly_Particle
Update	Desire_And_Doom/Graphics/Particle_Systems/Fire_Particle.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_Systems.Fire_Particle
Update	Desire_And_Doom/Graphics/Particle_World.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Particle_World
Update	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Graphics.Sky_Renderer
Update	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Tiled_Map
Update	Desire_And_Doom/Gui/Invatory_Container.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Gui.Invatory_Container
Update	Desire_And_Doom/Gui/Pause_Menu.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Gui.Pause_Menu
Update	Desire_And_Doom/Gui/UI_Manager.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Gui.UI_Manager
Update	Desire_And_Doom/Screens/Game_Screen.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Game_Screen
Update	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Intro_Logos_Screen
Update	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Level_1_Screen
Update	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Level_Select_Screen
Update	Desire_And_Doom/Screens/Menu_Screen.cs	/^        public override void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Menu_Screen
Update	Desire_And_Doom/Screens/Screen.cs	/^        public virtual void Update(GameTime time) { }$/;"	m	class:Desire_And_Doom.Screens.Screen
Update	Desire_And_Doom/Screens/Screen_Manager.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Screens.Screen_Manager
Update	Desire_And_Doom/Utils/Debug_Console.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:Desire_And_Doom.Utils.Debug_Console
Update	Desire_And_Doom/Utils/GamePadListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
Update	Desire_And_Doom/Utils/Input.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Input
Update	Desire_And_Doom/Utils/InputListener.cs	/^        public abstract void Update(GameTime gameTime);$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListener
Update	Desire_And_Doom/Utils/InputListenerComponent.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
Update	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
Update	Desire_And_Doom/Utils/Input_Handlers/InputListener.cs	/^        public abstract void Update(GameTime gameTime);$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListener
Update	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent
Update	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
Update	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
Update	Desire_And_Doom/Utils/KeyboardListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.KeyboardListener
Update	Desire_And_Doom/Utils/MouseListener.cs	/^        public override void Update(GameTime gameTime)$/;"	m	class:MonoGame.Extended.Input.InputListeners.MouseListener
Update	Desire_And_Doom/Utils/Tasker.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Utils.Tasker
Update	Desire_And_Doom/Utils/Timers.cs	/^        public void Update(GameTime time)$/;"	m	class:Desire_And_Doom.Utils.Timers
Update	Desire_Tiles/Editor.cs	/^        protected override void Update(GameTime gameTime)$/;"	m	class:Desire_Tiles.Editor
Update	Entity_Editor/Game1.cs	/^        protected override void Update(GameTime gameTime)$/;"	m	class:Entity_Editor.Game1
Update_Type	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public enum Update_Type$/;"	g	class:Desire_And_Doom.ECS.Components.World_Interaction
Use_Animation_ID	Desire_And_Doom/Items/Equipable.cs	/^        public string Use_Animation_ID      { get; set; } = "";$/;"	p	class:Desire_And_Doom.Items.Equipable
Use_Combo	Desire_And_Doom/Items/Equipable.cs	/^        public List<string> Use_Combo { get; set; } = new List<string>();$/;"	p	class:Desire_And_Doom.Items.Equipable
Value	Desire_And_Doom/Graphics/Dialog.cs	/^        public string Value { get; set; } = "";$/;"	p	class:Desire_And_Doom.Graphics.Dialog_Text
Value	Desire_And_Doom/Graphics/Dialog.cs	/^        public string Value { get; set; }$/;"	p	class:Desire_And_Doom.Graphics.Dialog_Option
Vec2	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        public Vector2 Vec2(float x, float y)$/;"	m	class:Desire_And_Doom.ECS.Systems.Lua_Function_System
Vel_X	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Vel_X { get { return Velocity.X; } set { Velocity = new Vector2(value, Velocity.Y); } }$/;"	p	class:Desire_And_Doom.ECS.Physics
Vel_X	Desire_And_Doom/Graphics/Particle.cs	/^        public float Vel_X { get { return Velocity.X; } set { Velocity = new Vector2(value, Velocity.Y); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Vel_Y	Desire_And_Doom/ECS/Components/Physics.cs	/^        public float Vel_Y { get { return Velocity.Y; } set { Velocity = new Vector2(Velocity.X, value); } }$/;"	p	class:Desire_And_Doom.ECS.Physics
Vel_Y	Desire_And_Doom/Graphics/Particle.cs	/^        public float Vel_Y { get { return Velocity.Y; } set { Velocity = new Vector2(Velocity.X, value); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Velocity	Desire_And_Doom/ECS/Components/Physics.cs	/^        public Vector2 Velocity { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Physics
Velocity	Desire_And_Doom/Graphics/Particle.cs	/^        public Vector2 Velocity { get; set; } = Vector2.Zero;$/;"	p	class:Desire_And_Doom.Graphics.Particle
Vibrate	Desire_And_Doom/Utils/GamePadListener.cs	/^        public bool Vibrate(int durationMs, float leftStrength = float.NegativeInfinity,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
Vibrate	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public bool Vibrate(int durationMs, float leftStrength = float.NegativeInfinity,$/;"	m	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationEnabled	Desire_And_Doom/Utils/GamePadListener.cs	/^        public bool VibrationEnabled { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationEnabled	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public bool VibrationEnabled { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
VibrationEnabled	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public bool VibrationEnabled { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationEnabled	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public bool VibrationEnabled { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
VibrationStrengthLeft	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float VibrationStrengthLeft$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationStrengthLeft	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float VibrationStrengthLeft { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
VibrationStrengthLeft	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float VibrationStrengthLeft$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationStrengthLeft	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float VibrationStrengthLeft { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
VibrationStrengthRight	Desire_And_Doom/Utils/GamePadListener.cs	/^        public float VibrationStrengthRight$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationStrengthRight	Desire_And_Doom/Utils/GamePadListenerSettings.cs	/^        public float VibrationStrengthRight { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
VibrationStrengthRight	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        public float VibrationStrengthRight$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListener
VibrationStrengthRight	Desire_And_Doom/Utils/Input_Handlers/GamePadListenerSettings.cs	/^        public float VibrationStrengthRight { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.GamePadListenerSettings
View_Matrix	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Matrix View_Matrix$/;"	p	class:Desire_And_Doom.GameCamera
Viewport	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public Viewport Viewport => GraphicsDevice.Viewport;$/;"	f	class:Desire_And_Doom.Graphics.ViewportAdapter
ViewportAdapter	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        protected ViewportAdapter(GraphicsDevice graphicsDevice)$/;"	m	class:Desire_And_Doom.Graphics.ViewportAdapter
ViewportAdapter	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^    public abstract class ViewportAdapter$/;"	c	namespace:Desire_And_Doom.Graphics
ViewportAdapter	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        public ViewportAdapter ViewportAdapter { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
ViewportAdapter	Desire_And_Doom/Utils/Input_Handlers/MouseListenerSettings.cs	/^        public ViewportAdapter ViewportAdapter { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
ViewportAdapter	Desire_And_Doom/Utils/MouseListener.cs	/^        public ViewportAdapter ViewportAdapter { get; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListener
ViewportAdapter	Desire_And_Doom/Utils/MouseListenerSettings.cs	/^        public ViewportAdapter ViewportAdapter { get; set; }$/;"	p	class:MonoGame.Extended.Input.InputListeners.MouseListenerSettings
ViewportHeight	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public override int ViewportHeight => _graphicsDevice.Viewport.Height;$/;"	f	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
ViewportHeight	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public abstract int ViewportHeight { get; }$/;"	p	class:Desire_And_Doom.Graphics.ViewportAdapter
ViewportWidth	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public override int ViewportWidth => _graphicsDevice.Viewport.Width;$/;"	f	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
ViewportWidth	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public abstract int ViewportWidth { get; }$/;"	p	class:Desire_And_Doom.Graphics.ViewportAdapter
VirtualHeight	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public override int VirtualHeight => _graphicsDevice.Viewport.Height;$/;"	f	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
VirtualHeight	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public abstract int VirtualHeight { get; }$/;"	p	class:Desire_And_Doom.Graphics.ViewportAdapter
VirtualWidth	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        public override int VirtualWidth => _graphicsDevice.Viewport.Width;$/;"	f	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter
VirtualWidth	Desire_And_Doom/Graphics/ViewportAdapter.cs	/^        public abstract int VirtualWidth { get; }$/;"	p	class:Desire_And_Doom.Graphics.ViewportAdapter
W	Desire_And_Doom/ECS/Components/Invatory.cs	/^        public int W { get => slots.GetLength(1); }$/;"	p	class:Desire_And_Doom.ECS.Invatory
WATER	Desire_And_Doom/ECS/Components/Physics.cs	/^            STATIC, DYNAMIC, WATER, SPACE, WORLD_INTERACTION$/;"	e	enum:Desire_And_Doom.ECS.Physics.PType	file:
WEAPON	Desire_And_Doom/Items/Equipable.cs	/^            WEAPON,$/;"	e	enum:Desire_And_Doom.Items.Equipable.Equipment_Type	file:
WIDTH	Desire_Tiles/Editor.cs	/^        public static readonly int WIDTH = 1280;$/;"	f	class:Desire_Tiles.Editor
WORLD_INTERACTION	Desire_And_Doom/ECS/Components/Physics.cs	/^            STATIC, DYNAMIC, WATER, SPACE, WORLD_INTERACTION$/;"	e	enum:Desire_And_Doom.ECS.Physics.PType	file:
Width	Desire_And_Doom/Actor.cs	/^        public float Width { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Width	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Width  { get { return Size.X; } set { Size = new Vector2(value, Size.Y); } }$/;"	p	class:Desire_And_Doom.ECS.Body
Width	Desire_And_Doom/Graphics/Particle.cs	/^        public float Width  { get { return Size.X; } set { Size = new Vector2(value, Size.Y); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Width	Desire_And_Doom/Stage.cs	/^        public float Width { get; private set; }$/;"	p	class:MonoGdx.Scene2D.Stage
Width	Desire_And_Doom/Utils/RectangleF.cs	/^        public float Width { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Utils.RectangleF
Will_Intersect	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        public bool Will_Intersect { get; set; } = false;$/;"	p	class:Desire_And_Doom.ECS.Polygon_Collision_Result
WindowResized	Desire_And_Doom/Graphics/GameCamera.cs	/^        public void WindowResized(GraphicsDevice device)$/;"	m	class:Desire_And_Doom.GameCamera
Window_CLientSizeChanged	Desire_And_Doom/DesireAndDoom.cs	/^        void Window_CLientSizeChanged(object sender, EventArgs args)$/;"	m	class:Desire_And_Doom.DesireAndDoom	file:
Wolf 	Desire_And_Doom/Content/Lua/AI.lua	/^	Wolf = function(entity, engine)$/;"	f
Wolf 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^	Wolf = function(entity, engine)$/;"	f
Wolf 	Lua_World/AI.lua	/^	Wolf = function(entity, engine)$/;"	f
World	Desire_And_Doom/ECS/Components/Entity_Particle_Emitter.cs	/^        public Particle_World World { get; set; }$/;"	p	class:Desire_And_Doom.ECS.Components.Entity_Particle_Emitter
World	Desire_And_Doom/ECS/World.cs	/^        public World(PenumbraComponent lighting)$/;"	m	class:Desire_And_Doom.ECS.World
World	Desire_And_Doom/ECS/World.cs	/^    class World$/;"	c	namespace:Desire_And_Doom.ECS
WorldToScreen	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 WorldToScreen(Vector2 worldPosition)$/;"	m	class:Desire_And_Doom.Graphics.Camera
WorldToScreen	Desire_And_Doom/Graphics/Camera.cs	/^        public Vector2 WorldToScreen(float x, float y)$/;"	m	class:Desire_And_Doom.Graphics.Camera
World_Interaction	Desire_And_Doom/ECS/Component.cs	/^            World_Interaction,$/;"	e	enum:Desire_And_Doom.ECS.Component.Types	file:
World_Interaction	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public World_Interaction(Func<Entity, Entity, bool> update) : base(Types.World_Interaction)$/;"	m	class:Desire_And_Doom.ECS.Components.World_Interaction
World_Interaction	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public World_Interaction(LuaFunction update): base(Types.World_Interaction)$/;"	m	class:Desire_And_Doom.ECS.Components.World_Interaction
World_Interaction	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^    class World_Interaction : Component$/;"	c	namespace:Desire_And_Doom.ECS.Components
World_Interaction_System	Desire_And_Doom/ECS/Systems/World_Interaction_System.cs	/^        public World_Interaction_System() : base(Types.Body, Types.World_Interaction, Types.Physics)$/;"	m	class:Desire_And_Doom.ECS.Systems.World_Interaction_System
World_Interaction_System	Desire_And_Doom/ECS/Systems/World_Interaction_System.cs	/^    class World_Interaction_System : System$/;"	c	namespace:Desire_And_Doom.ECS.Systems
World_Ref	Desire_And_Doom/ECS/System.cs	/^        public World World_Ref;$/;"	f	class:Desire_And_Doom.ECS.System
World_To_Screen	Desire_And_Doom/Graphics/GameCamera.cs	/^        public Vector2 World_To_Screen(Vector2 point)$/;"	m	class:Desire_And_Doom.GameCamera
X	Desire_And_Doom/Actor.cs	/^        public float X { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
X	Desire_And_Doom/ECS/Components/Body.cs	/^        public float X { get { return Position.X; } set { Position = new Vector2(value, Position.Y); } }$/;"	p	class:Desire_And_Doom.ECS.Body
X	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public float X { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
X	Desire_And_Doom/Graphics/GameCamera.cs	/^        public float X { get { return Position.X; } }$/;"	p	class:Desire_And_Doom.GameCamera
X	Desire_And_Doom/Graphics/Particle.cs	/^        public float X { get { return Position.X; } set { Position = new Vector2(value, Position.Y); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
X	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float X { get { return Position.X; } set { Position = new Vector2(value, Position.Y); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
X	Desire_And_Doom/Utils/RectangleF.cs	/^        public float X { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Utils.RectangleF
XButton1	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        XButton1,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
XButton1	Desire_And_Doom/Utils/MouseButton.cs	/^        XButton1,$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
XButton2	Desire_And_Doom/Utils/Input_Handlers/MouseButton.cs	/^        XButton2$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
XButton2	Desire_And_Doom/Utils/MouseButton.cs	/^        XButton2$/;"	e	enum:MonoGame.Extended.Input.InputListeners.MouseButton	file:
Y	Desire_And_Doom/Actor.cs	/^        public float Y { get; set; }$/;"	p	class:MonoGdx.Scene2D.Actor
Y	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Y { get { return Position.Y; } set { Position = new Vector2(Position.X, value); } }$/;"	p	class:Desire_And_Doom.ECS.Body
Y	Desire_And_Doom/ECS/Components/World_Interaction.cs	/^        public float Y { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Components.World_Interaction
Y	Desire_And_Doom/Graphics/GameCamera.cs	/^        public float Y { get { return Position.Y; } }$/;"	p	class:Desire_And_Doom.GameCamera
Y	Desire_And_Doom/Graphics/Particle.cs	/^        public float Y { get { return Position.Y; } set { Position = new Vector2(Position.X, value); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle
Y	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        public float Y { get { return Position.Y; } set { Position = new Vector2(Position.X, value); } }$/;"	p	class:Desire_And_Doom.Graphics.Particle_Emitter
Y	Desire_And_Doom/Utils/RectangleF.cs	/^        public float Y { get; set; } = 0;$/;"	p	class:Desire_And_Doom.Utils.RectangleF
Z	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Z { get; set; } = 0;$/;"	p	class:Desire_And_Doom.ECS.Body
ZIndex	Desire_And_Doom/Actor.cs	/^        public int ZIndex$/;"	p	class:MonoGdx.Scene2D.Actor
Zoom	Desire_And_Doom/Graphics/Camera.cs	/^        public float Zoom$/;"	p	class:Desire_And_Doom.Graphics.Camera
Zoom	Desire_And_Doom/Graphics/GameCamera.cs	/^        public float Zoom { get => camera.Zoom; set => camera.Zoom = value; }$/;"	p	class:Desire_And_Doom.GameCamera
ZoomIn	Desire_And_Doom/Graphics/Camera.cs	/^        public void ZoomIn(float deltaZoom)$/;"	m	class:Desire_And_Doom.Graphics.Camera
ZoomOut	Desire_And_Doom/Graphics/Camera.cs	/^        public void ZoomOut(float deltaZoom)$/;"	m	class:Desire_And_Doom.Graphics.Camera
["Ai"] 	Desire_And_Doom/Content/Lua/Entities.lua	/^			["Ai"] = {"Function", function(self, engine)$/;"	f
["Ai"] 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Entities.lua	/^			["Ai"] = {"Function", function(self, engine)$/;"	f
["Ai"] 	Lua_World/Entities.lua	/^			["Ai"] = {"Function", function(self, engine)$/;"	f
[self.pointer]	Desire_And_Doom/Content/Lua/Utilities.lua	/^                self.functions[self.pointer](self, dt)$/;"	f
[self.pointer]	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^                self.functions[self.pointer](self, dt)$/;"	f
[self.pointer]	Lua_World/Utilities.lua	/^                self.functions[self.pointer](self)$/;"	f
__beyond-age---design-document__	DesignDocument/design_document.html	/^<h1 id="__beyond-age---design-document__"><a name="__beyond-age---design-document__" href="#__beyond-age---design-document__"><\/a><strong>Beyond Age - Design Document<\/strong><\/h1><p><img src="images\/screen_shot_1.png" alt="hello"><\/p><h2 id="plot"><a name="plot" href="#plot"><\/a>Plot<\/h2><h2 id="environments"><a name="environments" href="#environments"><\/a>Environments<\/h2><h3 id="pirate-island"><a name="pirate-island" href="#pirate-island"><\/a>Pirate Island<\/h3><h3 id="witch-hunt"><a name="witch-hunt" href="#witch-hunt"><\/a>Witch Hunt<\/h3><h3 id="forest-moster"><a name="forest-moster" href="#forest-moster"><\/a>Forest Moster<\/h3><h2 id="items"><a name="items" href="#items"><\/a>Items<\/h2><h2 id="entities"><a name="entities" href="#entities"><\/a>Entities<\/h2><h2 id="art-and-music-design"><a name="art-and-music-design" href="#art-and-music-design"><\/a>Art and Music design<\/h2>$/;"	a
_actions	Desire_And_Doom/Actor.cs	/^        private readonly List<SceneAction> _actions = new List<SceneAction>(0);$/;"	f	class:MonoGdx.Scene2D.Actor	file:
_actor	Desire_And_Doom/SceneAction.cs	/^        private Actor _actor;$/;"	f	class:MonoGdx.Scene2D.SceneAction	file:
_added	Desire_And_Doom/RoutedEvent.cs	/^        private IList _added;$/;"	f	class:MonoGdx.Scene2D.SelectionChangedEventArgs	file:
_capturingHandler	Desire_And_Doom/RoutedEvent.cs	/^        private readonly bool _capturingHandler;$/;"	f	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo	file:
_centerX	Desire_And_Doom/Stage.cs	/^        private float _centerX;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_centerY	Desire_And_Doom/Stage.cs	/^        private float _centerY;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_classHandlers	Desire_And_Doom/RoutedEvent.cs	/^        private static Dictionary<RoutedEvent, List<ClassHandlerNode>> _classHandlers = $/;"	f	class:MonoGdx.Scene2D.EventManager	file:
_cullingArea	Desire_And_Doom/Group.cs	/^        private RectangleF? _cullingArea;$/;"	f	class:MonoGdx.Scene2D.Group	file:
_currentState	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GamePadState _currentState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_currentState	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GamePadState _currentState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_currentState	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private MouseState _currentState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_currentState	Desire_And_Doom/Utils/MouseListener.cs	/^        private MouseState _currentState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_down	Desire_And_Doom/RoutedEvent.cs	/^        private bool _down;$/;"	f	class:MonoGdx.Scene2D.KeyEventArgs	file:
_dragging	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private bool _dragging;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_dragging	Desire_And_Doom/Utils/MouseListener.cs	/^        private bool _dragging;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_empty	Desire_And_Doom/RoutedEvent.cs	/^        private static readonly IList _empty = new List<object>(0);$/;"	f	class:MonoGdx.Scene2D.SelectionChangedEventArgs	file:
_excludedButtons	Desire_And_Doom/Utils/GamePadListener.cs	/^        private readonly Buttons[] _excludedButtons =$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_excludedButtons	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private readonly Buttons[] _excludedButtons =$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_gamePadConnections	Desire_And_Doom/Utils/GamePadListener.cs	/^        private static readonly bool[] _gamePadConnections = new bool[4];$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_gamePadConnections	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private static readonly bool[] _gamePadConnections = new bool[4];$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_gameTime	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GameTime _gameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_gameTime	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GameTime _gameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_gameTime	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private GameTime _gameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_gameTime	Desire_And_Doom/Utils/MouseListener.cs	/^        private GameTime _gameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_graphicsDevice	Desire_And_Doom/Graphics/Default_Viewport_Adapter.cs	/^        private readonly GraphicsDevice _graphicsDevice;$/;"	f	class:Desire_And_Doom.Graphics.Default_Viewport_Adapter	file:
_handler	Desire_And_Doom/RoutedEvent.cs	/^        private readonly Delegate _handler;$/;"	f	struct:MonoGdx.Scene2D.RoutedEventHandlerInfo	file:
_handlers	Desire_And_Doom/Actor.cs	/^        private Dictionary<int, DelayedRemovalList<RoutedEventHandlerInfo>> _handlers = new Dictionary<int, DelayedRemovalList<RoutedEventHandlerInfo>>(0);$/;"	f	class:MonoGdx.Scene2D.Actor	file:
_hasDoubleClicked	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private bool _hasDoubleClicked;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_hasDoubleClicked	Desire_And_Doom/Utils/MouseListener.cs	/^        private bool _hasDoubleClicked;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_isInitial	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private bool _isInitial;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_isInitial	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private bool _isInitial;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_keyboardFocus	Desire_And_Doom/Stage.cs	/^        private Actor _keyboardFocus;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_lastButton	Desire_And_Doom/Utils/GamePadListener.cs	/^        private Buttons _lastButton;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastButton	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private Buttons _lastButton;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastLeftStickDirection	Desire_And_Doom/Utils/GamePadListener.cs	/^        private Buttons _lastLeftStickDirection;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastLeftStickDirection	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private Buttons _lastLeftStickDirection;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastPressTime	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private TimeSpan _lastPressTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_lastPressTime	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private TimeSpan _lastPressTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_lastRightStickDirection	Desire_And_Doom/Utils/GamePadListener.cs	/^        private Buttons _lastRightStickDirection;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastRightStickDirection	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private Buttons _lastRightStickDirection;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastThumbStickState	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GamePadState _lastThumbStickState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastThumbStickState	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GamePadState _lastThumbStickState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastTriggerState	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GamePadState _lastTriggerState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_lastTriggerState	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GamePadState _lastTriggerState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftCurVibrationStrength	Desire_And_Doom/Utils/GamePadListener.cs	/^        private float _leftCurVibrationStrength;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftCurVibrationStrength	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private float _leftCurVibrationStrength;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftStickDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _leftStickDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftStickDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _leftStickDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftTriggerDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _leftTriggerDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftTriggerDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _leftTriggerDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftVibrating	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _leftVibrating;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_leftVibrating	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _leftVibrating;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_listeners	Desire_And_Doom/Utils/InputListenerComponent.cs	/^        private readonly List<InputListener> _listeners;$/;"	f	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent	file:
_listeners	Desire_And_Doom/Utils/Input_Handlers/InputListenerComponent.cs	/^        private readonly List<InputListener> _listeners;$/;"	f	class:MonoGame.Extended.Input.InputListeners.InputListenerComponent	file:
_maximumZoom	Desire_And_Doom/Graphics/Camera.cs	/^        private float _maximumZoom = float.MaxValue;$/;"	f	class:Desire_And_Doom.Graphics.Camera	file:
_minimumZoom	Desire_And_Doom/Graphics/Camera.cs	/^        private float _minimumZoom;$/;"	f	class:Desire_And_Doom.Graphics.Camera	file:
_mouseDownArgs	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private MouseEventArgs _mouseDownArgs;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_mouseDownArgs	Desire_And_Doom/Utils/MouseListener.cs	/^        private MouseEventArgs _mouseDownArgs;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_mouseOverActor	Desire_And_Doom/Stage.cs	/^        private Actor _mouseOverActor;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_mouseScreenX	Desire_And_Doom/Stage.cs	/^        private int _mouseScreenX;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_mouseScreenY	Desire_And_Doom/Stage.cs	/^        private int _mouseScreenY;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_nextIndex	Desire_And_Doom/RoutedEvent.cs	/^        private static int _nextIndex = 0;$/;"	f	class:MonoGdx.Scene2D.EventManager	file:
_oldBatchTransform	Desire_And_Doom/Group.cs	/^        private Matrix _oldBatchTransform;$/;"	f	class:MonoGdx.Scene2D.Group	file:
_ownsSpriteBatch	Desire_And_Doom/Stage.cs	/^        private bool _ownsSpriteBatch;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_pointerOverActors	Desire_And_Doom/Stage.cs	/^        private readonly Actor[] _pointerOverActors = new Actor[20];$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_pointerScreen	Desire_And_Doom/Stage.cs	/^        private readonly Point[] _pointerScreen = new Point[20];$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_pointerTouched	Desire_And_Doom/Stage.cs	/^        private readonly bool[] _pointerTouched = new bool[20];$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_pool	Desire_And_Doom/SceneAction.cs	/^        private Pool _pool;$/;"	f	class:MonoGdx.Scene2D.SceneAction	file:
_previousClickArgs	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private MouseEventArgs _previousClickArgs;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_previousClickArgs	Desire_And_Doom/Utils/MouseListener.cs	/^        private MouseEventArgs _previousClickArgs;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_previousGameTime	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GameTime _previousGameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_previousGameTime	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GameTime _previousGameTime;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_previousKey	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private Keys _previousKey;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_previousKey	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private Keys _previousKey;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_previousState	Desire_And_Doom/Utils/GamePadListener.cs	/^        private GamePadState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_previousState	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private GamePadState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_previousState	Desire_And_Doom/Utils/Input_Handlers/KeyboardListener.cs	/^        private KeyboardState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_previousState	Desire_And_Doom/Utils/Input_Handlers/MouseListener.cs	/^        private MouseState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_previousState	Desire_And_Doom/Utils/KeyboardListener.cs	/^        private KeyboardState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.KeyboardListener	file:
_previousState	Desire_And_Doom/Utils/MouseListener.cs	/^        private MouseState _previousState;$/;"	f	class:MonoGame.Extended.Input.InputListeners.MouseListener	file:
_registry	Desire_And_Doom/RoutedEvent.cs	/^        private static HashSet<RoutedEvent> _registry = new HashSet<RoutedEvent>();$/;"	f	class:MonoGdx.Scene2D.EventManager	file:
_removed	Desire_And_Doom/RoutedEvent.cs	/^        private IList _removed;$/;"	f	class:MonoGdx.Scene2D.SelectionChangedEventArgs	file:
_repeatedButtonTimer	Desire_And_Doom/Utils/GamePadListener.cs	/^        private int _repeatedButtonTimer;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_repeatedButtonTimer	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private int _repeatedButtonTimer;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightCurVibrationStrength	Desire_And_Doom/Utils/GamePadListener.cs	/^        private float _rightCurVibrationStrength;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightCurVibrationStrength	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private float _rightCurVibrationStrength;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightStickDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _rightStickDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightStickDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _rightStickDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightTriggerDown	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _rightTriggerDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightTriggerDown	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _rightTriggerDown;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightVibrating	Desire_And_Doom/Utils/GamePadListener.cs	/^        private bool _rightVibrating;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_rightVibrating	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private bool _rightVibrating;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_scrollFocus	Desire_And_Doom/Stage.cs	/^        private Actor _scrollFocus;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_source	Desire_And_Doom/RoutedEvent.cs	/^        private Actor _source;$/;"	f	class:MonoGdx.Scene2D.RoutedEventArgs	file:
_touchCapture	Desire_And_Doom/Stage.cs	/^        private readonly Actor[] _touchCapture = new Actor[20];$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_vibrationDurationLeft	Desire_And_Doom/Utils/GamePadListener.cs	/^        private TimeSpan _vibrationDurationLeft;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationDurationLeft	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private TimeSpan _vibrationDurationLeft;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationDurationRight	Desire_And_Doom/Utils/GamePadListener.cs	/^        private TimeSpan _vibrationDurationRight;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationDurationRight	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private TimeSpan _vibrationDurationRight;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStart	Desire_And_Doom/Utils/GamePadListener.cs	/^        private TimeSpan _vibrationStart;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStart	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private TimeSpan _vibrationStart;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStrengthLeft	Desire_And_Doom/Utils/GamePadListener.cs	/^        private float _vibrationStrengthLeft;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStrengthLeft	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private float _vibrationStrengthLeft;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStrengthRight	Desire_And_Doom/Utils/GamePadListener.cs	/^        private float _vibrationStrengthRight;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_vibrationStrengthRight	Desire_And_Doom/Utils/Input_Handlers/GamePadListener.cs	/^        private float _vibrationStrengthRight;$/;"	f	class:MonoGame.Extended.Input.InputListeners.GamePadListener	file:
_viewportAdapter	Desire_And_Doom/Graphics/Camera.cs	/^        private readonly ViewportAdapter _viewportAdapter;$/;"	f	class:Desire_And_Doom.Graphics.Camera	file:
_viewportHeight	Desire_And_Doom/Stage.cs	/^        private float _viewportHeight;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_viewportWidth	Desire_And_Doom/Stage.cs	/^        private float _viewportWidth;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_viewportX	Desire_And_Doom/Stage.cs	/^        private float _viewportX;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_viewportY	Desire_And_Doom/Stage.cs	/^        private float _viewportY;$/;"	f	class:MonoGdx.Scene2D.Stage	file:
_worldTransform	Desire_And_Doom/Group.cs	/^        private Matrix3 _worldTransform;$/;"	f	class:MonoGdx.Scene2D.Group	file:
_zoom	Desire_And_Doom/Graphics/Camera.cs	/^        private float _zoom;$/;"	f	class:Desire_And_Doom.Graphics.Camera	file:
action	Desire_And_Doom/Graphics/Dialog.cs	/^        public LuaFunction action = null;$/;"	f	class:Desire_And_Doom.Graphics.Dialog_Option
actions	Desire_And_Doom/Gui/Pause_Menu.cs	/^        Named_Action_List actions;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
actions	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Named_Action_List actions;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
actions	Desire_And_Doom/Screens/Menu_Screen.cs	/^        Named_Action_List actions;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
actions	Desire_And_Doom/Utils/Named_Action_List.cs	/^        Dictionary<string,Action> actions;$/;"	f	class:Desire_And_Doom.Utils.Named_Action_List	file:
active	Desire_And_Doom/Screens/Screen_Manager.cs	/^        Screen active;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
animation_system	Desire_And_Doom/ECS/Systems/Multipart_Animation_System.cs	/^        Animation_Renderer_System animation_system;$/;"	f	class:Desire_And_Doom.ECS.Systems.Multipart_Animation_System	file:
animations	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, Animation>       animations;$/;"	f	class:Desire_And_Doom.Assets	file:
astar_collision_map	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private bool[,] astar_collision_map;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
batch	Desire_And_Doom/DesireAndDoom.cs	/^        SpriteBatch batch;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
batch	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        private SpriteBatch batch;$/;"	f	class:Desire_And_Doom.Graphics.PrimitivesBatch	file:
batch	Desire_Tiles/Editor.cs	/^        SpriteBatch batch;$/;"	f	class:Desire_Tiles.Editor	file:
batch	Entity_Editor/Game1.cs	/^        SpriteBatch batch;$/;"	f	class:Entity_Editor.Game1	file:
billboards	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private List<Billboard>     billboards;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
button	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Gamepad_Button_Down(Buttons button) =>$/;"	f	class:Desire_And_Doom.Input
button	Desire_And_Doom/Utils/Input.cs	/^        public bool Is_Gamepad_Button_Up(Buttons button) =>$/;"	f	class:Desire_And_Doom.Input
button_mappings	Desire_And_Doom/Utils/Input.cs	/^        private Dictionary<string, List<Buttons>> button_mappings = new Dictionary<string, List<Buttons>>$/;"	f	class:Desire_And_Doom.Input	file:
button_states	Desire_And_Doom/Utils/Input.cs	/^        private Dictionary<Buttons, Button_State> button_states;$/;"	f	class:Desire_And_Doom.Input	file:
called	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        bool called = false;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
called	Desire_And_Doom/Screens/Menu_Screen.cs	/^        bool called = false;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
camera	Desire_And_Doom/DesireAndDoom.cs	/^        GameCamera          camera;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
camera	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        GameCamera camera;$/;"	f	class:Desire_And_Doom.ECS.Systems.Lua_Function_System	file:
camera	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        GameCamera camera;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
camera	Desire_And_Doom/Graphics/GameCamera.cs	/^        private Camera camera;$/;"	f	class:Desire_And_Doom.GameCamera	file:
camera	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private GameCamera          camera;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
camera	Desire_And_Doom/Gui/Pause_Menu.cs	/^        GameCamera camera;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
camera	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected GameCamera             camera;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
camera	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        GameCamera camera;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
camera	Desire_And_Doom/Screens/Menu_Screen.cs	/^        GameCamera camera;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
can_change	Desire_And_Doom/Screens/Game_Screen.cs	/^        bool can_change = true;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen	file:
can_move	Desire_And_Doom/Graphics/GameCamera.cs	/^        bool can_move = true;$/;"	f	class:Desire_And_Doom.GameCamera	file:
components	Desire_And_Doom/ECS/Entity.cs	/^        private Dictionary<Component.Types, Component> components;$/;"	f	class:Desire_And_Doom.ECS.Entity	file:
console	Desire_And_Doom/DesireAndDoom.cs	/^        Debug_Console       console;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
content	Desire_And_Doom/Graphics/Renderer3D.cs	/^        ContentManager content;$/;"	f	class:Desire_And_Doom.Graphics.Renderer3D	file:
content	Desire_And_Doom/Screens/boss_room_1.cs	/^        ContentManager content;$/;"	f	class:Desire_And_Doom.Screens.Boss_Room_1	file:
current	Desire_And_Doom/Utils/Input.cs	/^        public bool current = false, last = false;$/;"	f	class:Desire_And_Doom.Button_State
current	Desire_And_Doom/Utils/Input.cs	/^        public bool current = false, last = false;$/;"	f	class:Desire_And_Doom.Key_State
current_task	Desire_And_Doom/Utils/Tasker.cs	/^        int current_task = 0;$/;"	f	class:Desire_And_Doom.Utils.Tasker	file:
cursor	Desire_And_Doom/Utils/Debug_Console.cs	/^        Vector2 cursor = Vector2.Zero;$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
dash_speed	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        const float dash_speed = 500;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
delayed_next 	Desire_And_Doom/Content/Lua/Utilities.lua	/^			delayed_next = function(self, time)$/;"	f
delayed_next 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^			delayed_next = function(self, time)$/;"	f
device	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        private GraphicsDevice device;$/;"	f	class:Desire_And_Doom.Graphics.PrimitivesBatch	file:
device	Desire_And_Doom/Graphics/Renderer3D.cs	/^        GraphicsDevice device;$/;"	f	class:Desire_And_Doom.Graphics.Renderer3D	file:
device	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private GraphicsDevice      device;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
device	Desire_And_Doom/Screens/Game_Screen.cs	/^        private GraphicsDevice device;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen	file:
dialog_box	Desire_And_Doom/DesireAndDoom.cs	/^        Dialog_Box          dialog_box;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
dialog_box	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        Dialog_Box dialog_box;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
effect	Desire_And_Doom/Graphics/Renderer3D.cs	/^        BasicEffect effect;$/;"	f	class:Desire_And_Doom.Graphics.Renderer3D	file:
emitters	Desire_And_Doom/Graphics/Particle_World.cs	/^        List<Particle_Emitter> emitters;$/;"	f	class:Desire_And_Doom.Graphics.Particle_World	file:
engine	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        private Lua_Function_System engine;$/;"	f	class:Desire_And_Doom.Dialog_Box	file:
entities	Desire_And_Doom/ECS/World.cs	/^        private List<Entity> entities;$/;"	f	class:Desire_And_Doom.ECS.World	file:
entity_world	Desire_And_Doom/Gui/UI_Manager.cs	/^        private World entity_world;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager	file:
exit	Desire_Tiles/Editor.cs	/^        private static bool exit = false;$/;"	f	class:Desire_Tiles.Editor	file:
fade	Desire_And_Doom/Screens/Screen_Manager.cs	/^        bool fade = false;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
fade_task	Desire_And_Doom/Screens/Screen_Manager.cs	/^        Tasker fade_task;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
fade_timer	Desire_And_Doom/Screens/Screen_Manager.cs	/^        float fade_timer = 0;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
font	Desire_And_Doom/Gui/Pause_Menu.cs	/^        SpriteFont font;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
font	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        SpriteFont font;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
font	Desire_And_Doom/Screens/Menu_Screen.cs	/^        SpriteFont font;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
fonts	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, SpriteFont>      fonts;$/;"	f	class:Desire_And_Doom.Assets	file:
frame	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private int frame = 0;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
functions 	Desire_And_Doom/Content/Lua/Utilities.lua	/^            functions = list,$/;"	f
functions 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^            functions = list,$/;"	f
functions 	Lua_World/Utilities.lua	/^            functions = list,$/;"	f
game	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        Game game;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
goto_fn 	Desire_And_Doom/Content/Lua/Utilities.lua	/^			goto_fn = function(self, num)$/;"	f
goto_fn 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^			goto_fn = function(self, num)$/;"	f
graphics	Desire_And_Doom/DesireAndDoom.cs	/^        private static GraphicsDeviceManager graphics;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
graphics	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        GraphicsDeviceManager graphics;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
graphics	Desire_Tiles/Editor.cs	/^        GraphicsDeviceManager graphics;$/;"	f	class:Desire_Tiles.Editor	file:
graphics	Entity_Editor/Game1.cs	/^        GraphicsDeviceManager graphics;$/;"	f	class:Entity_Editor.Game1	file:
gui	Desire_And_Doom/DesireAndDoom.cs	/^        Monogui             gui;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
handle_player_hit	Desire_And_Doom/Content/Lua/AI.lua	/^function handle_player_hit(entity, engine, damage, power)$/;"	f
handle_player_hit	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/AI.lua	/^function handle_player_hit(entity, engine, damage, power)$/;"	f
handle_player_hit	Lua_World/AI.lua	/^﻿local function handle_player_hit(entity, engine, dammage, power)$/;"	f
history	Desire_And_Doom/Utils/Debug_Console.cs	/^        List<string> history;$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
host	Desire_Tiles/Editor.cs	/^        private Desktop host;$/;"	f	class:Desire_Tiles.Editor	file:
hotload_timer	Desire_And_Doom/Graphics/Assets.cs	/^        private float hotload_timer = 0f;$/;"	f	class:Desire_And_Doom.Assets	file:
ico	Desire_And_Doom/Graphics/Renderer3D.cs	/^        Model ico;$/;"	f	class:Desire_And_Doom.Graphics.Renderer3D	file:
image	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        Texture2D image;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
invatories	Desire_And_Doom/Gui/UI_Manager.cs	/^        List<Invatory> invatories;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager	file:
invatory_container	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        Invatory_Container invatory_container;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
invatory_manager	Desire_And_Doom/DesireAndDoom.cs	/^        UI_Manager    invatory_manager;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
invatory_manager	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        UI_Manager invatory_manager;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
it	Desire_And_Doom/Graphics/Assets.cs	/^        private static Assets it;$/;"	f	class:Desire_And_Doom.Assets	file:
it	Desire_And_Doom/Utils/Input.cs	/^        private static Input it;$/;"	f	class:Desire_And_Doom.Input	file:
it	Desire_And_Doom/Utils/Messanger.cs	/^        private static Messanger it;$/;"	f	class:Desire_And_Doom.Utils.Messanger	file:
it	Desire_And_Doom/Utils/Timers.cs	/^        private static Timers it;$/;"	f	class:Desire_And_Doom.Utils.Timers	file:
key	Desire_And_Doom/Utils/Input.cs	/^        public Buttons key = 0;$/;"	f	class:Desire_And_Doom.Button_State
key	Desire_And_Doom/Utils/Input.cs	/^        public Keys key = Keys.None;$/;"	f	class:Desire_And_Doom.Key_State
key_mappings	Desire_And_Doom/Utils/Input.cs	/^        private Dictionary<string, List<Keys>> key_mappings = new Dictionary<string, List<Keys>>$/;"	f	class:Desire_And_Doom.Input	file:
last	Desire_And_Doom/Utils/Input.cs	/^        public bool current = false, last = false;$/;"	f	class:Desire_And_Doom.Button_State
last	Desire_And_Doom/Utils/Input.cs	/^        public bool current = false, last = false;$/;"	f	class:Desire_And_Doom.Key_State
last_mpos	Desire_And_Doom/Utils/Input.cs	/^        private Vector2 last_mpos = Vector2.Zero;$/;"	f	class:Desire_And_Doom.Input	file:
layer_render_targets	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private List<RenderTarget2D> layer_render_targets = new List<RenderTarget2D>();$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
left_current	Desire_And_Doom/Utils/Input.cs	/^        private ButtonState left_current = ButtonState.Released, left_last = ButtonState.Released;$/;"	f	class:Desire_And_Doom.Input	file:
left_last	Desire_And_Doom/Utils/Input.cs	/^        private ButtonState left_current = ButtonState.Released, left_last = ButtonState.Released;$/;"	f	class:Desire_And_Doom.Input	file:
lighting	Desire_And_Doom/ECS/World.cs	/^        private PenumbraComponent lighting;$/;"	f	class:Desire_And_Doom.ECS.World	file:
lighting	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private PenumbraComponent   lighting;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
lighting	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected PenumbraComponent     lighting;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
lua	Desire_And_Doom/DesireAndDoom.cs	/^        Lua                 lua;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
lua	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        Lua lua;$/;"	f	class:Desire_And_Doom.ECS.Systems.Lua_Function_System	file:
lua	Desire_And_Doom/Graphics/Assets.cs	/^        private Lua lua;$/;"	f	class:Desire_And_Doom.Assets	file:
lua	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        private Lua lua;$/;"	f	class:Desire_And_Doom.Dialog_Box	file:
lua	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected Lua lua;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
lua	Desire_And_Doom/Utils/Debug_Console.cs	/^        Lua lua;$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
lua_function_system	Desire_And_Doom/DesireAndDoom.cs	/^        Lua_Function_System lua_function_system;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
lua_functions	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, LuaFunction>     lua_functions;$/;"	f	class:Desire_And_Doom.Assets	file:
lua_tables	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, LuaTableAsset>   lua_tables;$/;"	f	class:Desire_And_Doom.Assets	file:
main	Entity_Editor/src/sample/Main.java	/^    public static void main(String[] args) {$/;"	m	class:Main
manager	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Screen_Manager manager;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
manager	Desire_And_Doom/Screens/Menu_Screen.cs	/^        Screen_Manager manager;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
map	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        public void Give_Map(Tiled_Map map) => this.tiled_map = map;$/;"	f	class:Desire_And_Doom.ECS.AI_System
map	Desire_And_Doom/Graphics/Iso_Tiled_Map.cs	/^        private TmxMap map;$/;"	f	class:Desire_And_Doom.Iso_Tiled_Map	file:
map	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private TmxMap              map;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
menu	Desire_Tiles/Editor.cs	/^        private Top_Menu menu;$/;"	f	class:Desire_Tiles.Editor	file:
messages	Desire_And_Doom/Utils/Messanger.cs	/^        private List<string> messages;$/;"	f	class:Desire_And_Doom.Utils.Messanger	file:
mono_color	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Color mono_color = Color.White;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
mouse_drag	Desire_And_Doom/Utils/Input.cs	/^        private Vector2 mouse_drag = Vector2.Zero;$/;"	f	class:Desire_And_Doom.Input	file:
new 	Desire_And_Doom/Content/Lua/Utilities.lua	/^    new = function(list)$/;"	f
new 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^    new = function(list)$/;"	f
new 	Lua_World/Utilities.lua	/^    new = function(list)$/;"	f
next 	Desire_And_Doom/Content/Lua/Utilities.lua	/^            next = function(self)$/;"	f
next 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^            next = function(self)$/;"	f
next 	Lua_World/Utilities.lua	/^            next = function(self)$/;"	f
npc_ai	Desire_And_Doom/Content/Lua/Npcs.lua	/^function npc_ai(entity, engine)$/;"	f
npc_ai	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Npcs.lua	/^function npc_ai(entity, engine)$/;"	f
npc_ai	Lua_World/Npcs.lua	/^function npc_ai(entity, engine)$/;"	f
num_skytiles_high	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        const int num_skytiles_high = 20;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
num_skytiles_wide	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        const int num_skytiles_wide = 10;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
operator Equipment	Desire_And_Doom/ECS/Components/Equipment.cs	/^        public static implicit operator Equipment(Equipable v)$/;"	m	class:Desire_And_Doom.ECS.Components.Equipment
options	Desire_And_Doom/Graphics/Dialog.cs	/^        public List<Dialog_Option> options = new List<Dialog_Option>();$/;"	f	class:Desire_And_Doom.Graphics.Dialog_Text
other	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Angle_To_Other(Body other) => (float)(Math.Atan2(other.Y - Y, other.X - X));$/;"	f	class:Desire_And_Doom.ECS.Body
other	Desire_And_Doom/ECS/Components/Body.cs	/^        public float Angle_To_Other(Vector2 other) => (float)(Math.Atan2(other.Y - Y, other.X - X));$/;"	f	class:Desire_And_Doom.ECS.Body
parent	Desire_And_Doom/ECS/Components/Invatory.cs	/^        private Entity parent;$/;"	f	class:Desire_And_Doom.ECS.Invatory	file:
particle_world	Desire_And_Doom/DesireAndDoom.cs	/^        Particle_World      particle_world;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
particle_world	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        Particle_World particle_world;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
particle_world	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected Particle_World        particle_world;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
particles	Desire_And_Doom/Graphics/Particle_Emitter.cs	/^        List<Particle> particles;$/;"	f	class:Desire_And_Doom.Graphics.Particle_Emitter	file:
pause_menu	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        Pause_Menu pause_menu;$/;"	f	class:Desire_And_Doom.Screens.Level_1_Screen	file:
penumbra	Desire_And_Doom/DesireAndDoom.cs	/^        PenumbraComponent   penumbra;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
penumbra	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        PenumbraComponent penumbra;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
penumbra	Desire_And_Doom/Screens/Menu_Screen.cs	/^        PenumbraComponent penumbra;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
physics_engine	Desire_And_Doom/DesireAndDoom.cs	/^        Physics_Engine      physics_engine;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
physics_engine	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected Physics_Engine        physics_engine;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
polygons	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        private List<Polygon> polygons;$/;"	f	class:Desire_And_Doom.ECS.Physics_Engine	file:
pre_origin	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Vector2 pre_origin;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
pre_origin	Desire_And_Doom/Screens/Menu_Screen.cs	/^        Vector2 pre_origin;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
primitives	Desire_And_Doom/DesireAndDoom.cs	/^        PrimitivesBatch     primitives;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
primitives	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        PrimitivesBatch primitives;$/;"	f	class:Desire_And_Doom.Dialog_Box	file:
primitives	Desire_And_Doom/Gui/UI_Manager.cs	/^        private PrimitivesBatch primitives;$/;"	f	class:Desire_And_Doom.Gui.UI_Manager	file:
quads	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, List<Rectangle>> quads;$/;"	f	class:Desire_And_Doom.Assets	file:
quads	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private List<Rectangle>     quads;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
rect	Desire_And_Doom/Gui/Pause_Menu.cs	/^        Texture2D rect;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
rect	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Texture2D rect;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
rect	Desire_And_Doom/Screens/Menu_Screen.cs	/^        Texture2D rect;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
rect_pixel	Desire_And_Doom/Graphics/PrimitivesBatch.cs	/^        private Texture2D rect_pixel;$/;"	f	class:Desire_And_Doom.Graphics.PrimitivesBatch	file:
region	Desire_And_Doom/Utils/Debug_Console.cs	/^        Rectangle region = new Rectangle(24, 0, 24, 24);$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
renderer_3d	Desire_And_Doom/DesireAndDoom.cs	/^        Renderer3D          renderer_3d;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
reset	Desire_And_Doom/Utils/Input.cs	/^        public bool reset = false;$/;"	f	class:Desire_And_Doom.Button_State
reset	Desire_And_Doom/Utils/Input.cs	/^        public bool reset = false;$/;"	f	class:Desire_And_Doom.Key_State
retarget	Desire_And_Doom/Content/Lua/Npcs.lua	/^				local function retarget()$/;"	f
retarget	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Npcs.lua	/^				local function retarget()$/;"	f
retarget	Lua_World/Npcs.lua	/^				local function retarget()$/;"	f
right_side_bar	Desire_Tiles/Editor.cs	/^        private Right_Side_Bar right_side_bar;$/;"	f	class:Desire_Tiles.Editor	file:
sample	Entity_Editor/src/sample/Controller.java	/^package sample;$/;"	p
sample	Entity_Editor/src/sample/Main.java	/^package sample;$/;"	p
scales	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        List<float> scales;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
scene	Desire_And_Doom/DesireAndDoom.cs	/^        RenderTarget2D      scene;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
screen_manager	Desire_And_Doom/DesireAndDoom.cs	/^        Screen_Manager      screen_manager;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
screen_manager	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        Screen_Manager screen_manager;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
screen_manager	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Screen_Manager screen_manager;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
screen_manager	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Screen_Manager screen_manager;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
screens	Desire_And_Doom/Screens/Screen_Manager.cs	/^        Dictionary<string, Screen> screens;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
selector	Desire_And_Doom/Gui/Pause_Menu.cs	/^        int selector = 0;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
selector	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        int selector = 0;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
selector	Desire_And_Doom/Screens/Menu_Screen.cs	/^        int selector = 0;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
shake_intensity	Desire_And_Doom/Graphics/GameCamera.cs	/^        private float shake_intensity = 10;$/;"	f	class:Desire_And_Doom.GameCamera	file:
shake_timer	Desire_And_Doom/Graphics/GameCamera.cs	/^        private float shake_timer = 0;$/;"	f	class:Desire_And_Doom.GameCamera	file:
show_bg	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        bool show_bg = false;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
show_overlay_gui	Desire_And_Doom/ECS/Systems/Player_Controller_System.cs	/^        bool show_overlay_gui = false;$/;"	f	class:Desire_And_Doom.ECS.Player_Controller_System	file:
showing	Desire_And_Doom/Gui/Pause_Menu.cs	/^        bool showing = false;$/;"	f	class:Desire_And_Doom.Gui.Pause_Menu	file:
simple_item	Desire_And_Doom/Content/Lua/Items.lua	/^﻿function simple_item(name, quad)$/;"	f
simple_item	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Items.lua	/^﻿function simple_item(name, quad)$/;"	f
simple_item	Lua_World/Items.lua	/^﻿function simple_item(name, quad)$/;"	f
skip_intro_animation	Desire_And_Doom/DesireAndDoom.cs	/^        private bool skip_intro_animation = true;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
sky	Desire_And_Doom/Screens/Level_1_Screen.cs	/^        Sky_Renderer sky;$/;"	f	class:Desire_And_Doom.Screens.Level_1_Screen	file:
sky	Desire_And_Doom/Screens/Level_Select_Screen.cs	/^        Sky_Renderer sky;$/;"	f	class:Desire_And_Doom.Screens.Level_Select_Screen	file:
sky	Desire_And_Doom/Screens/Menu_Screen.cs	/^        Sky_Renderer sky;$/;"	f	class:Desire_And_Doom.Screens.Menu_Screen	file:
sky_color	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Color sky_color = Color.White;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
skytiles	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        List<Vector2> skytiles;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
slots	Desire_And_Doom/ECS/Components/Invatory.cs	/^        Entity[,] slots;$/;"	f	class:Desire_And_Doom.ECS.Invatory	file:
solids	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        private List<RectangleF> solids;$/;"	f	class:Desire_And_Doom.ECS.Physics_Engine	file:
speeds	Desire_And_Doom/Graphics/Sky_Renderer.cs	/^        List<float> speeds;$/;"	f	class:Desire_And_Doom.Graphics.Sky_Renderer	file:
spriteBatch	Desire_And_Doom/Graphics/Renderer2D.cs	/^        SpriteBatch spriteBatch;$/;"	f	class:Desire_And_Doom.Graphics.Renderer2D	file:
start	Entity_Editor/src/sample/Main.java	/^    public void start(Stage window) throws Exception{$/;"	m	class:Main
start_mpos	Desire_And_Doom/Utils/Input.cs	/^        private Vector2 start_mpos = Vector2.Zero;$/;"	f	class:Desire_And_Doom.Input	file:
state	Desire_And_Doom/Utils/Debug_Console.cs	/^        State state = State.CLOSED;$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
states	Desire_And_Doom/Utils/Input.cs	/^        private Dictionary<Keys, Key_State> states;$/;"	f	class:Desire_And_Doom.Input	file:
string:split	Desire_And_Doom/Content/Lua/Npcs.lua	/^function string:split( inSplitPattern, outResults )$/;"	f
string:split	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Npcs.lua	/^function string:split( inSplitPattern, outResults )$/;"	f
string:split	Lua_World/Npcs.lua	/^function string:split( inSplitPattern, outResults )$/;"	f
systems	Desire_And_Doom/ECS/World.cs	/^        private Dictionary<Type, System> systems;$/;"	f	class:Desire_And_Doom.ECS.World	file:
talking	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        private bool talking = false;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
tasker	Desire_And_Doom/Screens/Intro_Logos_Screen.cs	/^        Tasker tasker;$/;"	f	class:Desire_And_Doom.Screens.Intro_Logos_Screen	file:
tasks	Desire_And_Doom/Utils/Tasker.cs	/^        List<Action<GameTime>> tasks;$/;"	f	class:Desire_And_Doom.Utils.Tasker	file:
text	Desire_And_Doom/Utils/Debug_Console.cs	/^        string text = "";$/;"	f	class:Desire_And_Doom.Utils.Debug_Console	file:
texture	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private Texture2D           texture;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
textures	Desire_And_Doom/Graphics/Assets.cs	/^        private Dictionary<string, Texture2D>       textures;$/;"	f	class:Desire_And_Doom.Assets	file:
tile_map_reference	Desire_And_Doom/ECS/Systems/Sprite_Renderer_System.cs	/^        private Tiled_Map tile_map_reference = null;$/;"	f	class:Desire_And_Doom.ECS.Sprite_Renderer_System	file:
tiled_map	Desire_And_Doom/ECS/Systems/AI_System.cs	/^        private Tiled_Map tiled_map;$/;"	f	class:Desire_And_Doom.ECS.AI_System	file:
time	Desire_And_Doom/ECS/Systems/Lua_Function_System.cs	/^        GameTime time;$/;"	f	class:Desire_And_Doom.ECS.Systems.Lua_Function_System	file:
time	Desire_And_Doom/Graphics/Particle.cs	/^        protected void Apply_Velocity(GameTime time) =>$/;"	f	class:Desire_And_Doom.Graphics.Particle
timer	Desire_And_Doom/ECS/Systems/Npc_System.cs	/^        float timer = 0;$/;"	f	class:Desire_And_Doom.ECS.Npc_System	file:
timer	Desire_And_Doom/Graphics/Dialog_Box.cs	/^        private float timer = 0;$/;"	f	class:Desire_And_Doom.Dialog_Box	file:
timer	Desire_And_Doom/Graphics/Tiled_Map.cs	/^        private float timer = 0;$/;"	f	class:Desire_And_Doom.Tiled_Map	file:
timers	Desire_And_Doom/Utils/Timers.cs	/^        List<Timer> timers;$/;"	f	class:Desire_And_Doom.Utils.Timers	file:
timing	Desire_And_Doom/ECS/World.cs	/^        public int timing = 0;$/;"	f	class:Desire_And_Doom.ECS.World
transparency	Desire_And_Doom/Screens/Screen_Manager.cs	/^        float transparency = 0f;$/;"	f	class:Desire_And_Doom.Screens.Screen_Manager	file:
types	Desire_And_Doom/ECS/System.cs	/^        protected List<Types> types;$/;"	f	class:Desire_And_Doom.ECS.System
update 	Desire_And_Doom/Content/Lua/Utilities.lua	/^            update = function(self, dt)$/;"	f
update 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Utilities.lua	/^            update = function(self, dt)$/;"	f
update 	Lua_World/Utilities.lua	/^            update = function(self)$/;"	f
uuid_generater	Desire_And_Doom/ECS/Entity.cs	/^        private static int uuid_generater = 0;$/;"	f	class:Desire_And_Doom.ECS.Entity	file:
vertices	Desire_And_Doom/Graphics/Renderer3D.cs	/^        VertexPosition []vertices;$/;"	f	class:Desire_And_Doom.Graphics.Renderer3D	file:
world	Desire_And_Doom/DesireAndDoom.cs	/^        World               world;$/;"	f	class:Desire_And_Doom.DesireAndDoom	file:
world	Desire_And_Doom/ECS/Components/Invatory.cs	/^        private World world;$/;"	f	class:Desire_And_Doom.ECS.Invatory	file:
world	Desire_And_Doom/ECS/Components/Spawner.cs	/^        private World world;$/;"	f	class:Desire_And_Doom.ECS.Components.Spawner	file:
world	Desire_And_Doom/ECS/Systems/Physics_Engine.cs	/^        private World world;$/;"	f	class:Desire_And_Doom.ECS.Physics_Engine	file:
world	Desire_And_Doom/Screens/Game_Screen.cs	/^        protected World                 world;$/;"	f	class:Desire_And_Doom.Screens.Game_Screen
{"no", 2, action 	Desire_And_Doom/Content/Lua/Dialog.lua	/^			{"no", 2, action = function(self, other, engine)$/;"	f
{"no", 2, action 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Dialog.lua	/^			{"no", 2, action = function(self, other, engine)$/;"	f
{"yes", 0, action 	Desire_And_Doom/Content/Lua/Dialog.lua	/^			{"yes", 0, action = function(self, other, engine)$/;"	f
{"yes", 0, action 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Dialog.lua	/^			{"yes", 0, action = function(self, other, engine)$/;"	f
{"yes", 2, action 	Desire_And_Doom/Content/Lua/Dialog.lua	/^                {"yes", 2, action = function(self, other, engine) $/;"	f
{"yes", 2, action 	Desire_And_Doom/bin/DesktopGL/x86/Debug/Content/Lua/Dialog.lua	/^                {"yes", 2, action = function(self, other, engine) $/;"	f
